<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: parallella | RayHightower.com]]></title>
  <link href="http://RayHightower.com/blog/categories/parallella/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2015-06-30T21:31:16-05:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Parallella Examples]]></title>
    <link href="http://RayHightower.com/blog/2015/06/30/parallella-examples/"/>
    <updated>2015-06-30T14:32:02-05:00</updated>
    <id>http://RayHightower.com/blog/2015/06/30/parallella-examples</id>
    <content type="html"><![CDATA[<blockquote><p>Performance is of paramount importance in parallel programming. The reason we are in the game of writing parallel programs is either to solve a problem faster than on a serial computer, or to solve a larger problem than could previously be done.<br/>&nbsp;<br/>~D. Thiébaut, author<br/>&nbsp;Parallel Programming in C for the Transputer</p></blockquote>

<p>Some developers buy a Parallella board because they already know parallel programming. They knew what to do with the device the moment they laid eyes on it. Others (like me) are relatively new to parallel programming. We see Parallella as an inexpensive tool for hands-on learning.</p>

<!--more-->


<h3>Starting Questions</h3>

<p>A first-time Parallella user might ask questions like:</p>

<ul>
<li><p>How do you get Parallella up and running? Covered in the <a href="/blog/2014/07/07/parallella-quick-start-guide-with-gotchas/">Parallella Quick Start Guide</a>. <em>Gotchas</em> are included to save us time.</p></li>
<li><p>What’s next? What can I do with Parallella that I can&rsquo;t do with a single-core system?</p></li>
</ul>


<p>To help answer the second set of questions, <a href="http://adapteva.com">Adapteva</a> gathered some examples that you can run on your own Parallella.</p>

<h3>Community Examples on GitHub</h3>

<p>The <a href="https://github.com/parallella/parallella-examples">parallella-examples repo on GitHub</a> is a great place to start. As of this writing, the examples include matrix multiplication, <a href="https://en.wikipedia.org/wiki/Ray_tracing">ray tracing</a>, and <a href="http://mathworld.wolfram.com/MandelbrotSet.html">Mandelbrot sets</a>. Given the active nature of open source, more examples may appear by the time you read this. Future examples might be created by you!</p>

<h3>Switching to TTY on Parallella</h3>

<p>Some of the examples will not run on the Parallella&rsquo;s Linux X Window desktop. Instead, TTY (teletype) mode is required. I will update this article when I find out why we need TTY. In the meantime, here&rsquo;s how to switch to TTY mode and back on Parallella:</p>

<ul>
<li><p>Switch to TTY by pressing <code>Ctrl</code> + <code>Alt</code> + <code>F2</code>.</p></li>
<li><p>The first time you switch to TTY, you will need to log in. Use the default Parallella credentials: login = linaro, password = linaro.</p></li>
<li><p>Switch back to X Window by pressing <code>Ctrl</code> + <code>Alt</code> + <code>F7</code>.</p></li>
</ul>


<p>Interesting observation: On my Parallella, pressing <code>Ctrl</code> + <code>Alt</code> + <code>F[any number except 7]</code> shifts the device to TTY mode. Only <code>Ctrl</code> + <code>Alt</code> + <code>F7</code> switches it back to X Window.</p>

<h3>Running the Mandelbrot Example</h3>

<p>To run the Mandelbrot example, switch to TTY mode and then&hellip;</p>

<p>&#8220;`bash</p>

<p>$ cd parallella-examples/mandelbrot</p>

<p>$ make     # You&rsquo;ll only need to run make once.</p>

<p>$ ./run.sh</p>

<p>&#8220;`</p>

<p>You&rsquo;ll see an animated graphic showing the Mandelbrot calculations in real time.</p>

<p>So, what&rsquo;s a Mandelbrot set and why do we care?</p>

<h3>About Mandelbrot Sets</h3>

<p><span class='caption-wrapper middle'><img class='caption' src='/images/mandelbrot-parallella.jpg' width='' height='' alt='Mandelbrot example calculated by Parallella.' title='Mandelbrot example calculated by Parallella.'><span class='caption-text'>Mandelbrot example calculated by Parallella.</span></span></p>

<blockquote><p>Clouds are not spheres, mountains are not cones, coastlines are not circles, and bark is not smooth, nor does lightning travel in a straight line.<br/>&nbsp;<br/>~Benoit Mandelbrot</p></blockquote>

<p>A Mandelbrot set is a group of numbers that displays a certain unusual property. Each member of the set is based on a calculation performed on the previous member, and an infinite number of members can be plotted within a finite area of a plane. Since humans are visual, we can easily recognize a Mandelbrot set that has been plotted on a graph, like the Mandelbrot diagram in this article.</p>

<p>For a 15-minute explanation of the Mandelbrot set, check out <a href="https://www.youtube.com/watch?v=0YaYmyfy9Z4&amp;list=PLOnWKC1gI_OPU8SDIBnCLHsgzNLSbnPJQ&amp;index=2">The Amazing Mandelbrot Set Tutorial</a>. The video covers imaginary numbers, complex numbers, and iterative functions with just enough depth to explain how the Mandelbrot set gets generated.</p>

<p>A Mandelbrot algorithm designed for and executed on a parallel system will run faster than a similar algorithm running in serial. The algorithm and the code must be tailored for a parallel system in order for the advantage to be realized.</p>

<h3>Other Parallella Examples</h3>

<p>As of this writing, the other graphical programs in the <a href="https://github.com/parallella/parallella-examples">parallella-examples repo</a> can be run in a similar fashion. <code>cd</code> into the directory, run <code>make</code>, and then <code>./run.sh</code>.</p>

<h3>Next steps</h3>

<p>Parallella is a learning tool. A learning lab. When we are learning, we ask questions like:</p>

<ul>
<li><p>How can we measure the difference in performance between serial and parallel versions of different algorithms?</p></li>
<li><p>Why do the graphics-oriented examples require TTY mode?</p></li>
<li><p>Scrot works on several single-board computers, including Parallella and Raspberry Pi. Why won&rsquo;t <a href="/blog/2013/03/19/how-to-take-a-raspberry-pi-screenshot/">Scrot</a> work in TTY mode on Parallella?</p></li>
<li><p>Once we get the graphics examples (like Mandelbrot and ray tracing) working in X Window, what&rsquo;s the best way to record the on-screen animation? Holding a camera in front of the monitor will work, but it seems archaic.</p></li>
</ul>


<p>And, the biggest questions of all:</p>

<ul>
<li><p>What can we do with Parallella that we cannot do with a single-core computer?</p></li>
<li><p>How can we demonstrate the difference visually?</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3D Printing at BLUE1647]]></title>
    <link href="http://RayHightower.com/blog/2015/06/25/3d-printing-at-blue1647/"/>
    <updated>2015-06-25T17:11:35-05:00</updated>
    <id>http://RayHightower.com/blog/2015/06/25/3d-printing-at-blue1647</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper middle'><img class='caption' src='/images/parallella_3d_print_blue1647.jpg' width='' height='' alt='Parallella with a 3D-printed case.' title='Parallella with a 3D-printed case.'><span class='caption-text'>Parallella with a 3D-printed case.</span></span></p>

<p>Every visit to <a href="http://blue1647.com">BLUE1647</a> is full of pleasant surprises. There’s new equipment, a new opportunity to learn new technology, new people to learn from, or all of the above.</p>

<p>I recently bought a second <a href="/blog/2015/05/27/massively-parallel-parallella/">Parallella</a> for a WisdomGroup project. Since it&rsquo;s important to protect the device with a case, this seemed like a good time to try one of the 3D printers at BLUE1647. The result is in the photo, above.</p>

<!--more-->


<h3>Why 3D Printing Matters</h3>

<p>The current state of 3D printing feels like laser printing in the 1980s. Back then, laser printers were big and expensive. Sharing the printer among many users made the cost easier to justify. 3D printers are in a similar position in the year 2015. And, as with most new technology, prices are on a downward slope.</p>

<p>The 3D printers at BLUE1647 are available to any member. Talk to <a href="http://www.rashadglover.com/">Rashad Glover</a> or <a href="http://imagine-it-tech.com/">Patrick Harris</a> to get started.</p>

<h3>What to Know about 3D Printing</h3>

<p>Printing any object in three dimensions takes a <em>long</em> time. The case in the photo took over four hours to print. The <a href="http://www.thingiverse.com/">MakerBot Thingiverse</a> has a wide variety of STL files to choose from. <a href="http://www.thingiverse.com/thing:273701/">This particular STL file</a> was created by Ben Reed, a maker in Calgary, Alberta, Canada.</p>

<p><span class='caption-wrapper middle'><img class='caption' src='/images/blue1647_glover_3d_printer.jpg' width='' height='' alt='Industrial engineer Rashad Glover prepares the STL files for the 3D printer.' title='Industrial engineer Rashad Glover prepares the STL files for the 3D printer.'><span class='caption-text'>Industrial engineer Rashad Glover prepares the STL files for the 3D printer.</span></span></p>

<h3>STL File Internals</h3>

<p>Instructions for 3D printing an object are stored in a <a href="http://bit.ly/1FFzX20">STereoLithography (STL)</a> file. Open an STL file in <a href="http://rayhightower.com/blog/2013/01/12/why-i-use-vim/">your favorite text editor</a> and you&rsquo;ll see something like this:</p>

<p>&#8220;` bash
solid OpenSCAD_Model
  facet normal -0.998027 0 -0.0627913</p>

<pre><code>outer loop
  vertex 0 66.2 1.95
  vertex 0 124 1.95
  vertex 0.020502 66.2 1.62413
endloop
</code></pre>

<p>  endfacet
  facet normal -0.998027 0 -0.0627913</p>

<pre><code>outer loop
  vertex 0.020502 66.2 1.62413
  vertex 0 124 1.95
  vertex 0.020502 124 1.62413
endloop
</code></pre>

<p>  endfacet</p>

<p>  &hellip;Skip about 58,000 lines&hellip;</p>

<p>  facet normal 0.803458 -0.261061 -0.535072</p>

<pre><code>outer loop
  vertex 91.7184 1.76127 0.69744
  vertex 91.5557 1.82567 0.421758
  vertex 91.6374 2.0769 0.421758
endloop
</code></pre>

<p>  endfacet
  facet normal 0.803459 -0.261059 -0.535071</p>

<pre><code>outer loop
  vertex 91.7184 1.76127 0.69744
  vertex 91.6374 2.0769 0.421758
  vertex 91.8068 2.03339 0.69744
endloop
</code></pre>

<p>  endfacet
endsolid OpenSCAD_Model</p>

<p>&#8220;`</p>

<p>The objects described in an STL file can be viewed through a free online tool like <a href="http://www.viewstl.com/">ViewSTL.com</a>.</p>

<h3>Next Steps</h3>

<p>3D printing is still in its infancy. Next time you visit BLUE1647, maybe for a <a href="/blog/2015/04/10/chicagoruby-blue1647-1871/">ChicagoRuby</a> meeting, check it out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Massively Parallel Parallella]]></title>
    <link href="http://RayHightower.com/blog/2015/05/27/massively-parallel-parallella/"/>
    <updated>2015-05-27T13:15:27-05:00</updated>
    <id>http://RayHightower.com/blog/2015/05/27/massively-parallel-parallella</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper middle'><img class='caption' src='/images/parallella_perspective.jpg' width='' height='' alt='Parallella with 18 cores: 2 ARM + 16 RISC' title='Parallella with 18 cores: 2 ARM + 16 RISC'><span class='caption-text'>Parallella with 18 cores: 2 ARM + 16 RISC</span></span></p>

<p><a href="http://supercomputer.io/">Supercomputer.io</a> is the first technical conference for <a href="http://rayhightower.com/blog/2014/07/07/parallella-quick-start-guide-with-gotchas/">Parallella</a>, to be held May 30, 2015 in Tokyo, Japan.</p>

<p>You can participate even if you’re not in Tokyo. Parallella owners around the world will connect their boards via the Internet to create the most efficient supercomputer on the planet. <a href="http://resin.io/">Resin.io</a> has built a special micro-SD-card image (using <a href="https://www.docker.com/">Docker</a>) so adding your Parallella to the mix is relatively quick.</p>

<p>This article includes detailed steps plus a few <em>gotchas</em>.</p>

<!--more-->


<h3>First: Why?</h3>

<p>Some problems are too thorny for a typical computer to solve in a reasonable amount of time. Supercomputers might solve these problems quicker, but they cost <em>millions of dollars</em>. Solution: Link a bunch of $100, 18-core Parallella computers together via the Internet to amplify our compute power while saving money. This shared computing technique has worked in the past:</p>

<ul>
<li><p>Through <a href="https://folding.stanford.edu/">Stanford Folding@home</a>, computer owners around the world are using excess CPU cycles to search for cures for diseases like Alzheimer’s, Huntington’s, and Parkinson&rsquo;s.</p></li>
<li><p>The <a href="http://setiathome.ssl.berkeley.edu/">SETI@home</a> project uses computers around the world to download and analyze radio telescope data to help with the search for extraterrestrial intelligence.</p></li>
</ul>


<p>The benefits are clear. Let&rsquo;s get started.</p>

<h3>Materials Required</h3>

<p><span class='caption-wrapper right'><img class='caption' src='/images/supercomputer-dot-io-logo.png' width='' height='' alt='Resin.io &amp; Parallella' title='Resin.io &amp; Parallella'><span class='caption-text'>Resin.io &amp; Parallella</span></span>
Here&rsquo;s what you need to participate:</p>

<ul>
<li>Parallella board. You can buy one for about $100 at <a href="http://www.parallella.org/buy/">these retailers</a>.</li>
<li>Ethernet connection to the Internet.</li>
<li>4 GB (or larger) micro-SD card.</li>
</ul>


<p>This procedure is has been tested on Mac OS X Yosemite (10.10.3). Linux instructions are probably similar.</p>

<h3><em>Gotcha:</em> Headless Parallella</h3>

<p>Something that tripped me up until I learned more: A Parallella configured for Supercomputer.io will run headless. <em>There will be no HDMI output.</em> When my HDMI monitor showed <code>No Signal</code>, I thought that I had broken something. No worries. This is just a headless system.</p>

<p>I don&rsquo;t know if that will change.</p>

<h3>Download the Image</h3>

<p><a href="http://supercomputer.io/">Download the Resin.io image</a> from the Supercomputer.io site. <a href="http://resin.io/">Resin.io</a> has created a special SD-card image (using Docker) for this project. As you can see below, I stored mine in a directory called <code>~/Downloads/Parallella$</code>.</p>

<p>&#8220;` bash
~/Downloads/Parallella$ ls -al
total 2678784
drwxr-xr-x   3 rth  staff         102 May 26 10:53 .
drwx&mdash;-r-x+ 86 rth  staff        2924 May 26 11:00 ..
-rw-r&mdash;&mdash;&ndash;@  1 rth  staff  1371537408 May 26 10:56 resin-supercomputer-0.1.0-0.0.14-Z7010-16.img</p>

<p>~/Downloads/Parallella$</p>

<p>&#8220;`</p>

<h3>Prep for Burning the SD Card</h3>

<p><span class='caption-wrapper right'><img class='caption' src='/images/micro_sd_plus_adapter.jpg' width='' height='' alt='Micro SD card and adapter.' title='Micro SD card and adapter.'><span class='caption-text'>Micro SD card and adapter.</span></span>
Burning the SD card took about sixteen minutes (once I got the procedure right, as described below). Suggestion: Start the burn process, make sure it&rsquo;s progressing, and then go work on something else. A watched pot never boils.</p>

<p>Insert your SD card into your Mac&rsquo;s SD card reader, and use the Mac OS X <code>diskutil list</code> command to determine the designation of the SD card. If you use portable hard drives with your primary machine, the SD card designation could change from time to time, so it&rsquo;s important to perform this step each time you burn an SD card.</p>

<p>&#8220;` bash
~/Downloads/Parallella$ diskutil list
/dev/disk0
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:      GUID_partition_scheme                        <em>960.2 GB   disk0
   1:                        EFI EFI                     209.7 MB   disk0s1
   2:                  Apple_HFS MacSSD                  959.3 GB   disk0s2
   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
/dev/disk2
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:     FDisk_partition_scheme                        </em>8.0 GB     disk2
   1:               Windows_NTFS Parallella              8.0 GB     disk2s1</p>

<p>~/Downloads/Parallella$</p>

<p>&#8220;`</p>

<p>From this <code>diskutil</code> report, we can see that we want to burn the SD image to <code>/dev/disk2</code>. The other device is the hard drive for my primary machine. Burning the wrong device will destroy data.</p>

<h3>Burning the Card, Skipping the <em>Gotcha</em></h3>

<p>To burn the SD card&hellip;</p>

<ol>
<li>Change into the directory where you downloaded the <code>resin.io</code> image.</li>
<li>Unmount the destination partition on the SD card.</li>
<li>Use the the <code>dd</code> command to copy the <code>resin.io</code> image to the SD card.</li>
</ol>


<p><em>Gotcha alert:</em> The first time I attempted to burn the image, I used a block size of 64k (<code>bs=64k</code>) for the <code>dd</code> operation. Big mistake on my part because the write operation took almost <em>four hours</em>. On my second attempt, I used a 1 megabyte block size (<code>bs=1m</code>) and the write operation finished in a speedy <em>16 minutes</em>. So, learn from my pain and use <code>bs=1m</code>.</p>

<p>Burn your micro-SD card like so:</p>

<p>&#8220;` bash
$ cd [directory containing the resin.io image file]</p>

<p>$ diskutil unmountDisk /dev/disk2</p>

<p>$ sudo dd if=resin-supercomputer-0.1.0-0.0.14-Z7010-16.img of=/dev/disk2 bs=1m
Password:
1308+0 records in
1308+0 records out
1371537408 bytes transferred in 960.001945 secs (1428682 bytes/sec)</p>

<p>$</p>

<p>&#8220;`</p>

<p><span class='caption-wrapper right'><img class='caption' src='/images/activity_monitor_resin_image.png' width='' height='' alt='Burn progress.' title='Burn progress.'><span class='caption-text'>Burn progress.</span></span>
If you want to make sure that <code>dd</code> is running properly, use OS X&rsquo;s <code>Activity Monitor</code> utility to monitor burn progress (see the &lsquo;burn progress&rsquo; diagram). Here&rsquo;s a quick run-through of the <code>dd</code> command options:</p>

<ul>
<li><code>sudo</code> gives you <a href="/sudo-disclaimer/">super powers</a>.</li>
<li><code>dd</code> is the &ldquo;copy and convert&rdquo; command. The letters &ldquo;dd&rdquo; have nothing to do with what the tool actually does. It&rsquo;s just a command name. And like so many things in computer science, the name might be based on a pun.</li>
<li><code>if=</code> specifies the input file. You can include the full path, or if the file is in your current directory, you can omit the path as shown in this example.</li>
<li><code>of=</code> specifies the output file. We know that the SD card is located at <code>/dev/disk</code> so that&rsquo;s where the results of this command are headed.  Note that your destination directory may differ from this one.</li>
<li><code>bs=1m</code> specifies the block size used for the destination file. 1 megabyte worked well on my machine.</li>
</ul>


<h3>About the New Resin.io Image</h3>

<p><span class='caption-wrapper right'><img class='caption' src='/images/parallella_resin_image_files.png' width='' height='' alt='Image files.' title='Image files.'><span class='caption-text'>Image files.</span></span>
The new image will be called <code>boot-parall</code> as shown in the diagram.  Depending on your particular image, your list of files may be the same as mine.</p>

<h3>Boot Parallella with the Resin.io Image</h3>

<p>Once the micro-SD card has been burned, eject it from the Mac and insert it into the Parallella. Then apply power to the Parallella.</p>

<h3>Working Headless</h3>

<p>As mentioned above, a Parallella configured this way will run headless, without HDMI output. So, how do you know if the Resin.io image is working?</p>

<p>First, get a network scanner and use it to locate your Parallella on your local area network. I use an iPad app called <a href="https://itunes.apple.com/us/app/fing-network-scanner/id430921107?mt=8">Fing</a>, but any good network scanner will do. Your Parallella will appear as <code>parallella-hdmi-resin</code>, along with its corresponding IP and MAC addresses.</p>

<p>Ping the IP address given by your network scanning tool like so:</p>

<p>&#8220;` bash
~$ ping 192.168.11.132
PING 192.168.11.132 (192.168.11.132): 56 data bytes
64 bytes from 192.168.11.132: icmp_seq=0 ttl=64 time=4.767 ms
64 bytes from 192.168.11.132: icmp_seq=1 ttl=64 time=3.694 ms
64 bytes from 192.168.11.132: icmp_seq=2 ttl=64 time=4.057 ms
64 bytes from 192.168.11.132: icmp_seq=3 ttl=64 time=3.969 ms
^C
&mdash;&ndash; 192.168.11.132 ping statistics &mdash;&ndash;
4 packets transmitted, 4 packets received, 0.0% packet loss
round-trip min/avg/max/stddev = 3.694/4.122/4.767/0.396 ms</p>

<p>~$</p>

<p>&#8220;`</p>

<p>If your Parallella is up, running, and attached to your network, your
output will look similar to what you see above. But if <code>ping</code> can&rsquo;t find
your Parallella, you&rsquo;ll get&hellip;</p>

<p>&#8220;` bash</p>

<p>~$ ping 192.168.11.199
PING 192.168.11.199 (192.168.11.199): 56 data bytes
Request timeout for icmp_seq 0
Request timeout for icmp_seq 1
Request timeout for icmp_seq 2
^C
&mdash;&ndash; 192.168.11.199 ping statistics &mdash;&ndash;
4 packets transmitted, 0 packets received, 100.0% packet loss</p>

<p>~$</p>

<p>&#8220;`</p>

<h3>Connect to Supercomputer.io</h3>

<p>After you have successfully connected your Parallella to your LAN and the Internet, visit <a href="http://supercomputer.io/#/devices/">http://supercomputer.io/#/devices/</a> from a computer other than your Parallella (because the Parallella is headless). This page will tell you when your Parallella has connected to the Supercomputer.io mothership.</p>

<p>To do this, you will need the media access control (MAC) address (also known as the hardware address) for your Parallella&rsquo;s network interface. I used my network scanning tool, Fing, to find the MAC address for the Parallella. You should be able to do the same with your network scanning tool.</p>

<p>Enter your Parallella&rsquo;s MAC address in the field on the form, and click <code>search</code> to determine whether your device has connected.</p>

<p><span class='caption-wrapper middle'><img class='caption' src='/images/parallella_no_device_yet.png' width='' height='' alt='Supercomputer.io searching for your Parallella.' title='Supercomputer.io searching for your Parallella.'><span class='caption-text'>Supercomputer.io searching for your Parallella.</span></span></p>

<p>Your first connection attempt might not be successful. It takes awhile for the first connection to happen because the Parallella might need to download software updates first.</p>

<p>It took about 30 minutes for Supercomputer.io to recognize my Parallella. The successful connection was cause for celebration:</p>

<p><span class='caption-wrapper middle'><img class='caption' src='/images/parallella_device_connected.png' width='' height='' alt='Parallella connected w/MAC address and city. Celebrate!' title='Parallella connected w/MAC address and city. Celebrate!'><span class='caption-text'>Parallella connected w/MAC address and city. Celebrate!</span></span></p>

<h3>What&rsquo;s Next?</h3>

<p>I&rsquo;m not sure what&rsquo;s next for Supercomputer.io and Parallella. I would imagine that <code>Status = idle</code> will be replaced by something more interesting, and <code>images processed</code> will eventually be greater than zero.</p>

<p>Engineers at Parallella and Resin.io have done a great job so far. Now, since it&rsquo;s likely that they enjoy ideas from the peanut gallery, here are a few suggestions for them:</p>

<ul>
<li><p>Consider a version of the Resin.io image with HDMI support. Like many in the Parallella community, I&rsquo;m willing to share CPU cycles for the greater good. And I want to see what&rsquo;s running on my Parallella, too.</p></li>
<li><p>Add more metrics to the Supercomputer.io site. It&rsquo;s nice to see the number of cores that have connected to Supercomputer.io. How about a map showing where the different Parallella devices are located? How about a dashboard that shows the number of cores currently in use?</p></li>
</ul>


<p>Hats off to the Parallella and Resin.io teams. Looking forward to more!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solar Powered Parallella]]></title>
    <link href="http://RayHightower.com/blog/2014/09/09/solar-powered-parallella/"/>
    <updated>2014-09-09T09:18:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/09/09/solar-powered-parallella</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper middle'><img class='caption' src='/images/parallella_solar.jpg' width='' height='' alt='Give solar power to your Parallella with a few simple components.' title='Give solar power to your Parallella with a few simple components.'><span class='caption-text'>Give solar power to your Parallella with a few simple components.</span></span></p>

<p>This article describes a simple hardware hack: Making the <a href="/blog/2014/07/07/parallella-quick-start-guide-with-gotchas/">Parallella</a> run on solar energy.</p>

<p>Motivation: The fastest computers in the world gulp electricity at an alarming rate. For example, <a href="http://www.top500.org/system/177999">Tianhe-2</a> at the National Super Computer Center in Guangzhou, China uses 17.8 megawatts of energy per year. In dollars, that’s roughly $17 million spent on electricity spent each year, depending on how the electricity is sourced.</p>

<p>Scientists at <a href="http://www.sandia.gov/">Sandia National Laboratories</a> estimate that the earth&rsquo;s surface absorbs enough solar energy in ninety minutes to power every electrical device on the planet for a full year. A year&rsquo;s worth of energy in ninety minutes! Surely we can use some of that energy to power our supercomputers.</p>

<!--more-->


<h3>Observations</h3>

<p>The solar Parallella idea was driven by a few observations:</p>

<ul>
<li><p>Parallella only needs five watts of power, five volts at 1 ampere. The device might spike at startup or during heavy calculations, but not by much.</p></li>
<li><p>USB provides electrical power at five volts, typically less than 2 amperes.</p></li>
<li><p>Cell phone solar chargers are easy to find. These pocket-sized chargers provide power over USB.</p></li>
</ul>


<p>Can a cell phone solar charger be hacked to power Parallella? Yes!</p>

<h3>Building the Hybrid Cable</h3>

<p>Here&rsquo;s how to get started&hellip;</p>

<p><span class='caption-wrapper middle'><img class='caption' src='/images/parallella_usb_solar.jpg' width='' height='' alt='Making the connections.' title='Making the connections.'><span class='caption-text'>Making the connections.</span></span></p>

<ul>
<li><p>First, get an off-the-shelf solar device capable of providing 5 volts at 2 amperes. Many cell phone solar chargers will do this, but some will only provide 1 ampere of current. You will need 2 amperes. As of this writing, Amazon sells solar cell phone chargers for about $35.00. Note that the model shown in this article combines a photovoltaic panel with a lithium ion battery. Energy provided by the sun can be stored by the battery for later use.</p></li>
<li><p>Cut open a USB cable to expose power (red), ground (black), and signal cables (green and white) as shown in the photo.</p></li>
<li><p>Find an old AC adapter cable that fits the Parallella power connection. Cut it open to expose the power and ground wires as shown in the photo.</p></li>
<li><p>Solder the USB power to the old adapter power wire, and USB ground to the adapter&rsquo;s ground.</p></li>
<li><p>Cover everything with heat shrink tubing or electrical tape. Heat shrink is preferred since it will last longer.</p></li>
</ul>


<p>You&rsquo;re done! Plug everything in and watch your Parallella boot up. Note that this configuration will also power the Parallella&rsquo;s cooling fan.</p>

<p><span class='caption-wrapper middle'><img class='caption' src='/images/parallella_solar_complete.jpg' width='' height='' alt='Parallella running on solar power.' title='Parallella running on solar power.'><span class='caption-text'>Parallella running on solar power.</span></span></p>

<h3>Proof of Concept</h3>

<p>It probably doesn’t make sense to call this a project. It&rsquo;s more of a proof of concept. Scaling up will cost money and time. But the benefits of solar energy, including cost savings and reduced carbon footprint, make this a worthwhile path to pursue.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM and Parallella: What a Difference a Shell Makes]]></title>
    <link href="http://RayHightower.com/blog/2014/07/21/rvm-and-parallella-what-a-difference-a-shell-makes/"/>
    <updated>2014-07-21T21:46:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/07/21/rvm-and-parallella-what-a-difference-a-shell-makes</id>
    <content type="html"><![CDATA[<p><a href="/blog/2013/05/16/upgrading-ruby-with-rvm/">RVM</a> is an effective way to manage Ruby versions on Linux or OS X. RVM was working well on my Ubuntu-based <a href="/blog/2014/07/07/parallella-quick-start-guide-with-gotchas/">Parallella</a>, until one day it stopped:</p>

<p>&#8220;` bash
linaro-nano:~> rvm list
rvm: Command not found.
linaro-nano:~></p>

<p><code>``
</code>rvm: Command not found.` Fortunately, <a href="https://twitter.com/theotherzach">Zach Briggs</a> and I were pairing at a joint OpenHack &ndash; ChicagoRuby event when the problem occurred. Zach is an ideal pairing partner; troubleshooting was smooth because he was there. Time to investigate.</p>

<!--more-->


<h3>Explicit Path</h3>

<p>After a few experiments, we discovered that we could run RVM by explicitly specifying the path to the executable:</p>

<p>&#8220;` bash
linaro-nano:~> ~/.rvm/bin/rvm list</p>

<p>rvm rubies</p>

<p>   ruby-2.0.0-p481 [ armv7l ]</p>

<h1>Default ruby not set. Try &lsquo;rvm alias create default <ruby>&rsquo;.</h1>

<h1>=> &ndash; current</h1>

<h1>=* &ndash; current &amp;&amp; default</h1>

<h1>* &ndash; default</h1>

<p>linaro-nano:~></p>

<p>&#8220;`</p>

<p>Therefore, it appeared that the Ubuntu/Linux <code>$PATH</code> variable was being ignored. Google led us to consider the shell in use on the Parallella.</p>

<h3>Which Shell Is In Use?</h3>

<p>The shell is just a program that lets humans talk to the Linux operating system through a command line interface. Several shell programs exist. Linux users tend to prefer one shell or another. The <code>$SHELL</code> environmental variable points to the one in use.</p>

<p>&#8220;` bash
linaro-nano:~> echo $SHELL
/bin/tcsh
linaro-nano:~></p>

<p>&#8220;`</p>

<p>Very interesting. <code>tcsh</code> was the current Parallella shell. I&rsquo;m more accustomed to <code>bash</code>. Could RVM prefer <code>bash</code> too? We changed one line of <code>/etc/passwd</code> to tell the Parallella to start with <code>bash</code> instead of <code>tcsh</code> and rebooted the Parallella.</p>

<p>&#8220;` bash
linaro-nano:~> echo $SHELL
/bin/bash
linaro-nano:~></p>

<p>&#8220;`
&hellip;and now RVM works normally.</p>

<p>&#8220;` bash
linaro-nano:~> rvm list</p>

<p>rvm rubies</p>

<p>   ruby-2.0.0-p481 [ armv7l ]</p>

<h1>Default ruby not set. Try &lsquo;rvm alias create default <ruby>&rsquo;.</h1>

<h1>=> &ndash; current</h1>

<h1>=* &ndash; current &amp;&amp; default</h1>

<h1>* &ndash; default</h1>

<p>linaro-nano:~></p>

<p>&#8220;`</p>

<h3>Consider Fish?</h3>

<p>Right after this exercise, Zach and <a href="http://twitter.com/josh_cheek">Josh Cheek</a> had a Twitter conversation about a shell called <a href="http://fishshell.com/">fish</a>. Something new and shiny to explore!</p>

<h3>Original Plan: Rubinius</h3>

<p>Did I mention that we originally planned to install <a href="/blog/2014/02/06/installing-rubinius-using-rvm/">Rubinius</a> on the Parallella? Where there are goals, there are yaks waiting to be shaved!</p>
]]></content>
  </entry>
  
</feed>
