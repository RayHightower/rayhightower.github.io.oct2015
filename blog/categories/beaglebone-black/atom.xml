<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: BeagleBone Black | RayHightower.com]]></title>
  <link href="http://RayHightower.com/blog/categories/beaglebone-black/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2014-01-03T02:37:18-06:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[BeagleBone Black Running Ubuntu: Part 1]]></title>
    <link href="http://RayHightower.com/blog/2014/01/02/beaglebone-black-ubuntu/"/>
    <updated>2014-01-02T15:59:00-06:00</updated>
    <id>http://RayHightower.com/blog/2014/01/02/beaglebone-black-ubuntu</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper center'><img class='caption' src='/images/beaglebone-black-ubuntu-ruby-rails.jpg' width='' height='' alt='BeagleBone Black running Ubuntu, Ruby, &amp; Rails.' title='BeagleBone Black running Ubuntu, Ruby, &amp; Rails.'><span class='caption-text'>BeagleBone Black running Ubuntu, Ruby, &amp; Rails.</span></span></p>

<p>The above screenshot shows a BeagleBone Black running Ubuntu, Ruby, and Rails. Why Ubuntu? The Bone comes pre-installed with <a href="http://www.angstrom-distribution.org/">Ångström</a>. Why not stick with Ångström?</p>

<p>My opinion: The factory standard is fine, but it&rsquo;s always good to have options. Here&rsquo;s why I decided to try Ubuntu on the BeagleBone Black:</p>

<ul>
<li>Ubuntu documentation is plentiful. Books, blogs, and videos are readily available.</li>
<li>The Ubuntu community is huge. When a dev runs into an Ubuntu-related snag, it&rsquo;s likely that another dev has encountered a similar problem, and they can collaborate on a solution.</li>
<li>Ubuntu is the distro that I&rsquo;m most familiar with. <a href="http://wisdomgroup.com">WisdomGroup</a> uses Ubuntu for multiple projects. With a common operating system, knowledge gained in one environment is immediately useful in another.</li>
<li>Prepping for <a href="/blog/2013/06/22/preparing-for-parallella-64-cores-installing-go-on-mac-os-x/">Parallella</a>, the 64-core single-board computer that will cost about two hundred bucks. The Parallella is currently in short supply. When it becomes available, it will run Ubuntu. Experience with other single-board computers, especially those running Ubuntu, will prove useful.</li>
</ul>


<p>This article will show how to install Ubuntu on the BeagleBone Black. <em>Gotchas</em> will be pointed out along the way. Where possible, I will explain the reasons behind my decisions so that you can make different choices if you like.</p>

<!--more-->


<p>For a comparable examination of the Raspberry Pi, take a look at <a href="/blog/2012/12/03/ruby-on-raspberry-pi/">Ruby on Raspberry Pi</a>.</p>

<h3>Sudo Disclaimer: You Could Destroy Everything</h3>

<p>Procedures described here will ask you to use the <code>sudo</code> command. <a href="http://xkcd.com/149/">Sudo endows users with great power</a>. You could destroy all of the data on your computer by using <code>sudo</code> incorrectly. Further, since technology changes rapidly, everything you see here could be out of date by the time you read this. Please be careful, and double-check these steps through your own sources.</p>

<h3>First Gotcha: Ubuntu 13 on the Bone</h3>

<p>As of this writing, Ubuntu 12 runs well on the BeagleBone Black, but Ubuntu 13 does not. My Ubuntu 13 installation appeared to be successful, but the Ubuntu 13 GUI hung up immediately after login. The Ubuntu 13 command line interface worked fine.</p>

<p>A quick search on Google reveals that others encountered similar roadblocks with version 13. One successful Bone/13 installation was used via SSH, not interactively via keyboard and GUI. Hopefully this will change with future updates. Or, since we&rsquo;re dealing in the open source world, maybe I can pitch in and help.</p>

<p>Due to the issues encountered with version 13, everything in this article will focus on Ubuntu 12.</p>

<h3>Materials Needed for Installing Ubuntu 12</h3>

<p>In addition to the BeagleBone Black, the following items should be gathered before installation:</p>

<ul>
<li>Micro SD card of at least 8GB. It&rsquo;s possible to perform the installation with a 4GB card, but that won&rsquo;t leave much room for Ubuntu applications.</li>
<li>SD card reader/writer. Recent versions of Apple&rsquo;s MacBook Pro come with an SD reader/writer built in.</li>
<li>SD to Micro-SD card adapter. The Bone is designed for micro SD, and the MacBook Pro is designed for full-sized SD. Some micro SD packages come with the adapter.</li>
<li>A monitor that accepts HDMI input.</li>
<li>Micro HDMI to HDMI adapter. The Bone uses micro HDMI for video output, but your monitor probably uses full-sized HDMI.</li>
<li>External 5V power adapter for the Bone. Personally, I trust the standard 5v power input more than I trust the power provided via USB. One never knows if USB can provide sufficient (and stable) amperage for a circuit board. Power fluctuations can lead to strange behavior, including video flickering.</li>
<li>Ethernet cable with RJ-45 ends.</li>
<li>A fast internet connection.</li>
</ul>


<h3>Hombrew Required</h3>

<p>Homebrew is the easiest way to install &lsquo;nix utilities on Mac OS X. We need Homebrew in order to install some of the utilities needed to burn the SD card. The one-line Homebrew installation command is given on the  <a href="http://brew.sh/">Homebrew site</a>.</p>

<p>Each time we use Homebrew, we run <code>$ brew doctor</code> and <code>$ brew update</code> to make sure the packages are up-to-date.</p>

<p><code>``bash
$ brew doctor
Warning: Your Homebrew is outdated.
You haven't updated for at least 24 hours, this is a long time in brewland!
To update Homebrew, run</code>brew update`.</p>

<p>$ brew update
Updated Homebrew from a2e44659 to 4c7bc9ec.</p>

<p>$ brew doctor
Your system is ready to brew.
```</p>

<h3>The xz Extraction Utility</h3>

<p>Disk image files are downloaded in a compressed format. We need the <code>xz</code> utility in order to extract the files into something usable. If you already have Homebrew installed, this command will install <code>xz</code> for you.</p>

<p><code>bash
$ brew install xz
</code></p>

<h3>Test the BeagleBone Black First</h3>

<p>Power up your BeagleBone Black and make sure it runs with the built-in Ångström Linux installation. One great thing about the Bone is that it will <a href="/blog/2013/05/22/beaglebone-black-running-ruby-on-rails/">boot to the Ångström GUI</a> straight out of the box, with no prior configuration.</p>

<p>If the GUI boots, then you&rsquo;re in good shape.</p>

<p>If the GUI doesn&rsquo;t boot, it may have been damaged in a prior experiement. Embarassing note: I started looking for a way to install Ubuntu on the Bone because I broke my Ångström installation. What can I say&hellip; I learn more from destructive experiments. Faced with a non-booting Bone, I had two choices.</p>

<ol>
<li>Re-build Ångström.</li>
<li>Try something different, like Ubuntu.</li>
</ol>


<p>Option two worked well!</p>

<h3>Prep the SD Card</h3>

<p>Apple&rsquo;s Disk Utility is a convenient tool for wiping the SD card.  Standard warnings about any disk utility apply. Double-check everything, and make sure you&rsquo;re wiping the right volume, or you could lose all of your data.</p>

<p>Next, download the Ubuntu 12.04 image from <a href="http://s3.armhf.com/debian/precise/bone/ubuntu-precise-12.04.3-armhf-3.8.13-bone30.img.xz">http://armhf.com</a>.</p>

<p>Extract the image using the <code>xz</code> utility.
<code>bash
$ xz ubuntu-precise-12.04.3-armhf-3.8.13-bone30.img.xz
</code></p>

<p>The extracted image will have a <code>.img</code> file extension. We will use the <code>dd</code> utility to burn the disk image to the SD card. But first, we need to determine the designation of the SD card.</p>

<p>Additional details for all of the above are at <a href="http://www.armhf.com/index.php/boards/beaglebone-black/#precise">http://armhf.com</a>.</p>

<h3>Find the SD Card Designation</h3>

<p>In order to burn the SD card, we need to make sure we target it correctly. Here&rsquo;s how to figure out which device to target.</p>

<p><code>$ diskutil list</code> will show all of the partitions mounted on the system.</p>

<p><code>bash
$ diskutil list
/dev/disk0
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:      GUID_partition_scheme                        *500.3 GB   disk0
   1:                        EFI                         209.7 MB   disk0s1
   2:                  Apple_HFS Macintosh HD            499.4 GB   disk0s2
   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
/dev/disk1
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:     FDisk_partition_scheme                        *8.0 GB     disk1
</code>
I happen to know that my SD Card is 8.0 GB in capacity, and my system also has a 500 GB SSD. The goal is to burn the SD card while leaving the 500 GB SSD (home of the Mac OS X operating system and all of my data) intact. From the <code>$ diskutil list</code> report, I can see that the SD card&rsquo;s designation <em>in my system</em> is <code>/dev/disk1</code>.</p>

<p>Note the italicized words <em>in my system</em>. Your system is probably different, especially if you have a DVD drive or a second hard drive. I have neither of those. The SD card&rsquo;s designation will be different in each system where it is mounted depending on the number and location of the drives that are already there.</p>

<p>Now that we know the SD card&rsquo;s designation, we can unmount it. We unmount the drive (but leave the card inserted in the reader) so that it can be written with the Ubuntu disk image.</p>

<p><code>bash
$ diskutil unmountDisk /dev/disk1
Unmount of all volumes on disk1 was successful
</code></p>

<p>Looks like the SD card was unmounted successfully. Now we can write the
Ubuntu image with the <code>dd</code> utility.</p>

<h3>Writing the Ubuntu Image</h3>

<p>The following command will write the decompressed Ubuntu image to the SD
card.</p>

<p>```bash
$ sudo dd bs=1m if=ubuntu-precise-12.04.3-armhf-3.8.13-bone30.img of=/dev/disk1</p>

<p>```</p>

<p>Note that it may take up to an hour for the image to be written.</p>

<p>One drawback of using the command line is that there is no gauge to tell you how much progress the utility is making. Fortunately, I stumbled upon a way to measure progress at <a href="http://elinux.org">eLinux.org</a>. While the command line utility is running, and while that window has focus, type <code>control-T</code>. A few seconds later, the terminal window will show a brief activity report.</p>

<p>Here&rsquo;s a report from the first time I struck <code>Control-T</code> &hellip;</p>

<p><code>bash
load: 2.03  cmd: dd 75608 uninterruptible 0.00u 0.54s
40+0 records in
39+0 records out
</code></p>

<p>We can strike <code>Control-T</code> again to receive additional updates. The numbers will tell us if we are making progress. Don&rsquo;t get carried away with <code>Control-T</code>. A watched pot never boils :&ndash;)</p>

<h3>Booting with the New SD Card</h3>

<p>The terminal will return to the command prompt after the Ubuntu image has been written to the SD card. Now it&rsquo;s time to boot with the new image.</p>

<ol>
<li>Eject the SD card from the Mac.</li>
<li>Remove power from the BeagleBone Black, and insert the micro SD card.</li>
<li>Note the location of the &ldquo;boot&rdquo; button on the Bone. It&rsquo;s the micro switch closest to the USB port. We will need to hold this switch down while powering up the Bone.</li>
</ol>


<p>A few notes about item #3. It takes some juggling to hold down a micro switch while plugging in power to the board. I found it easier to plug the power adapter into a powered-off surge suppressor, hold down the microswitch, and then power-on the surge suppressor with my elbow.  Sounds ridiculous, but it worked.</p>

<p>About sixty seconds after boot, the Linux penguin appeared in the upper left corner of the Bone display. And then the login prompt appeared.</p>

<p>Another note about the &ldquo;boot&rdquo; switch: It looks like the Bone will boot into the SD&rsquo;s operating system without the micro switch if the switch was used in the previous boot. I havn&rsquo;t rebooted enough times to test this, yet.</p>

<h3>Default Credentials for Ubuntu on BeagleBone Black</h3>

<p>Ubuntu&rsquo;s default BeagleBone Black login credentials are shown here because I always end up hunting for these when I need them. It&rsquo;s much easier to have information at one&rsquo;s fingertips.</p>

<p><code>bash
login: ubuntu
pw: ubuntu
</code></p>

<h3>End of Part One</h3>

<p>This marks the end of part one of this post about BeagleBone Black and Ubuntu.</p>

<p>Part two will cover&hellip;</p>

<ul>
<li>Getting the GUI running, including a disk resizing <em>gotcha</em>.</li>
<li>Installing Ruby, including an RVM <em>gotcha</em>.</li>
<li>Installing Rails, and how to handle a JavaScript runtime <em>gotcha</em>.</li>
</ul>


<p>Stay tuned!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Portable Hack for Parallella]]></title>
    <link href="http://RayHightower.com/blog/2013/11/10/a-portable-hack-for-parallella/"/>
    <updated>2013-11-10T23:05:00-06:00</updated>
    <id>http://RayHightower.com/blog/2013/11/10/a-portable-hack-for-parallella</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper left'><img class='caption' src='/images/parallella-portable.png' width='' height='' alt='Portability for Parallella-sized devices.' title='Portability for Parallella-sized devices.'><span class='caption-text'>Portability for Parallella-sized devices.</span></span>
<a href="/blog/2013/05/22/beaglebone-black-running-ruby-on-rails/">Beaglebone Black</a>, <a href="/blog/2012/12/03/ruby-on-raspberry-pi/">Raspberry Pi</a>, and <a href="/blog/2013/06/22/preparing-for-parallella-64-cores-installing-go-on-mac-os-x/">Parallella</a> are three small, powerful Linux-based computers. But in order to make these devices truly portable, we need a way to carry a monitor and keyboard along. This article describes one hack that works.</p>

<h3>Inspiration in a Suitcase</h3>

<p>The HP 5036 Microprocessor Lab gave me my first exposure to assembler language. I was eighteen, working my first software internship, and loving every minute of it. When I devised ways to complete my <em>regular work</em> faster than management expected, I had some time on my hands. So I spent time learning assembler with the HP 5036.</p>

<!--more-->


<p><span class='caption-wrapper'><img class='caption' src='/images/hp-5036.png' width='' height='' alt='HP 5036 Microprocessor Lab' title='HP 5036 Microprocessor Lab'><span class='caption-text'>HP 5036 Microprocessor Lab</span></span></p>

<p>The entire 5036 fits in a suitcase&hellip; how cool is that! Here&rsquo;s how the 5036 works:</p>

<ol>
<li>Start by writing assembler-level code by hand on paper.</li>
<li>Grab the reference book for the microprocessor running on the
board, Intel 8080.</li>
<li>For each assembler-level command, find the corresponding 2-digit
hexidecimal operation code.</li>
<li>Key the op code into the 5036 by hand.</li>
<li>Run the program.</li>
</ol>


<p>Working with the 5036 was addictive in a positive way. In a subsequent job, where I wrote assembler to drive hardware devices, I was ready.</p>

<h3>Portability Needed</h3>

<p>Fast forward a few decades. We now have the Raspberry Pi, BeagleBone Black, and Parallella. Wonderful devices with one flaw in common: No portability. That&rsquo;s when I had a flashback to my days with the 5036.</p>

<p>I bought a $35 technician box from Home Depot and I ripped out the insides. Micro Center had 720p LCD monitors on sale for $90, so I bought one of those. I didn&rsquo;t want to spend the extra bucks for a 1080p LCD because you never know how something like this might work out! Finally, I topped everything off with a $25 keyboard/trackpad combo from Amazon.  The result appears in the photo at the top of this article. Special thanks to Ericka [last name unknown] from Home Depot who gave me tons of ideas on how to securely fasten the monitor to the case.</p>

<h3>Why?</h3>

<p>Why did I spend the time and money to assemble this kit? It&rsquo;s all about learning. Devs learn more when we interact with other devs &ndash; people who are learning some of the same things that we&rsquo;re wrestling with. And sometimes the things we need to learn are too new for books.</p>

<p>By carrying my Raspberry Pi, BeagleBone Black, and Parallella with me in a portable unit, I can share my experiences with other devs and learn more in the process. Everybody wins when that happens.</p>

<h3>Thanks SCNA!</h3>

<p>The organizers of <a href="http://scna.softwarecraftsmanship.org/">Software Craftsmanship North America (SCNA)</a> gave me the opportunity to present this story as a lightning talk at the conference. Slides are here:</p>

<center><script async class="speakerdeck-embed" data-id="b3558fd02cac0131cfc62a9baba32394" data-ratio="1.29456384323641" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script></center>


<p>Thank you SCNA! As I shared with the other devs at SCNA, I will gladly post my mistakes and <em>gotchas</em> here for people who want to build a unit like this. Let&rsquo;s build!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PechaKucha: Developer Education at TableXI]]></title>
    <link href="http://RayHightower.com/blog/2013/06/27/pechakucha-developer-education-at-tablexi/"/>
    <updated>2013-06-27T15:13:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/06/27/pechakucha-developer-education-at-tablexi</id>
    <content type="html"><![CDATA[<p><a href="http://pechakucha.org">PechaKucha</a> is a concise presentation style developed in Japan. The PechaKucha format is 20x20: The presenter must share an idea in twenty slides, each displayed for exactly twenty seconds, advancing automatically. Total presentation time = six minutues, forty seconds.</p>

<!--more-->


<p><a href="http://www.tablexi.com/blog/2013/06/practice-begins-with-play-a-table-talk/developers/">TableXI</a> hosted a PechaKucha on June 13th with the theme <em>Developer Education</em>. I was one of six presenters invited to speak. Video:</p>

<center><iframe width='460' height='345' src="http://www.pechakucha.org/presentations/51b92936dbdd200cbc000011/embed" frameborder="0"></iframe></center>


<p>One highlight from the PechaKucha presentation: This year&rsquo;s <a href="http://windycityrails.org">WindyCityRails</a> will include a youth program on Thursday afternoon. Details will be announced in July. Follow <a href="http://twitter.com/windycityrails">@WindyCityRails</a> for the latest news on the program.</p>

<p>Thanks TableXI for the PechaKucha invitation, and for sponsoring WindyCityRails 2013!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BeagleBone Black, Up & Running]]></title>
    <link href="http://RayHightower.com/blog/2013/05/22/beaglebone-black-running-ruby-on-rails/"/>
    <updated>2013-05-22T22:13:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/05/22/beaglebone-black-running-ruby-on-rails</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/BeagleBoneBlack.jpg" width="372" height="600" title="BeagleBone Black" alt="BeagleBone Black" align="right">
<a href="http://beagleboard.org/Products/BeagleBone%20Black">BeagleBone Black</a>, like the <a href="/blog/2012/12/03/ruby-on-raspberry-pi/">Raspberry Pi</a>, is a small, inexpensive computer that runs Linux. It&rsquo;s smaller than a deck of cards and you can buy one for about forty-five dollars ($45.00). The device is made by <a href="http://circuitco.com">CircuitCo</a> in Richardson, TX, USA.</p>

<h3>It Just Works</h3>

<p>BeagleBone Black runs Linux right out of the box. Steps required:</p>

<ul>
<li>Plug in the micro-HDMI cable for the monitor. See the &ldquo;Gotchas&rdquo;
section about micro-HDMI below.</li>
<li>Plug in the keyboard &amp; mouse via the USB port. You might need a USB hub because the board only has one USB port.</li>
<li>Add power via the mini-USB port or the 5v power connection.</li>
</ul>


<p>After a few minutes of boot time, we have a fully-functioning Linux computer with a GUI, Firefox browser, and other tools.</p>

<!--more-->


<p>The BeagleBone Black has 2GB of flash storage on the board, and part
of that is used for Linux. Here&rsquo;s a screenshot after just a few minutes of ownership.</p>

<center><img src="http://RayHightower.com/images/BeagleBoneBlack-WindyCityRails.png" width="600" height="338" title="BeagleBone Black Firefox WindyCityRails" alt="BeagleBone Black Firefox WindyCityRails" align="center"></center>


<h3>Documentation</h3>

<p><img src="http://RayHightower.com/images/BeagleBoneBlack-USB.png" width="250" height="200" title="BeagleBone Black USB" alt="BeagleBone Black USB" align="right">
All of the paper documentation for the BeagleBone Black fits on a slip of paper roughly the size of two business cards. The meat of the documentation resides on the device itself. To reach the electronic documentation:</p>

<ol>
<li>Plug the BeagleBone Black into a USB port on your laptop.</li>
<li>The board will appear as a USB storage device. One of the files at the
root of the storage device, <code>START.htm</code>, contains the documentation. It
can be viewed in a web browser.</li>
</ol>


<p>The documentation recommends against <a href="http://en.wikipedia.org/wiki/Internet_Explorer">MSIE</a>.</p>

<h3>Gotchas</h3>

<p><img src="http://RayHightower.com/images/micro-HDMI-home-depot.jpg" width="400" height="300" title="Micro HDMI Home Depot" alt="Micro HDMI Home Depot" align="right">
The manufacturer included a mini-USB cable with the device, so you can power it up right after you rip open the package. Gotcha: You need a micro-HDMI cable (or adapter) if you want to attach a monitor. I would have preferred a micro-HDMI-to-HDMI adapater in the box instead of the mini-USB cable. That&rsquo;s a little nit-picky on my part since micro-HDMI cables are easy to find at Home Depot.</p>

<p>A quick shout-out to Home Depot: Their store-brand cables let you test the cable end without opening the package, right in the store. Excellent package design by Home Depot.</p>

<p>My second &ldquo;gotcha&rdquo; is more important: The <code>curl</code> command did not behave as flawlessly as it did with the Raspberry Pi, so I was not able to install Ruby as quickly as planned. Details below.</p>

<h3>Installing Rails</h3>

<p>I will have to cover Ruby and Rails installation in a future blog post because my initial attempts were not successful. <a href="/blog/2012/12/03/ruby-on-raspberry-pi/">RVM, Ruby, and Rails installed easily with Raspberry Pi</a>, even though the compilation time was long. With the BeagleBone Black, I received the following in response to the <code>curl</code> command:</p>

<p>```bash
sh-4.2# curl -L <a href="https://get.rvm.io">https://get.rvm.io</a> | bash -s stable &mdash;ruby
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</p>

<pre><code>                             Dload  Upload   Total   Spent    Left  Speed
</code></pre>

<p>  0     0    0     0    0     0      0      0 &mdash;:&mdash;:&mdash; &mdash;:&mdash;:&mdash; &mdash;:&mdash;:&mdash;     0
curl: (77) Problem with the SSL CA cert (path? access rights?)
sh-4.2#
```</p>

<p>Maybe it&rsquo;s time to try <a href="https://github.com/sstephenson/rbenv">RBEnv</a>? I&rsquo;ll post a solution when I find it. Or&hellip; if a reader of this blog already has a solution for the BeagleBone Black Rails installation challenge, please post in the comments below and I&rsquo;ll credit you here.</p>

<h4>BeagleBone Black vs. Raspberry Pi</h4>

<p>Which is better, BeagleBone Black or Raspberry Pi? There&rsquo;s no clear winner in my opinion. It&rsquo;s a matter of trade-offs:</p>

<ul>
<li>The &lsquo;Bone runs Linux right out of the box, while it takes some time to get Linux running on the Pi, unless you buy a card pre-configured for the Pi.</li>
<li>RVM, Ruby, and Rails installation was painless on the Pi even though compilation time was long. The jury is still out w/r/t RVM on the &lsquo;Bone.</li>
<li>Cost-wise, they&rsquo;re within ten bucks of each other. That&rsquo;s a wash.</li>
<li>The &lsquo;Bone has more Ardunio-like provisions for digital projects.</li>
<li>The Pi includes an RCA output for older TVs. Plus the Pi uses standard HDMI, so there&rsquo;s no need to get a special micro-HDMI cable.</li>
</ul>


<p>I&rsquo;ve owned my &lsquo;Bone for just over 24 hours. Lots more to learn. Looking forward to it!</p>
]]></content>
  </entry>
  
</feed>
