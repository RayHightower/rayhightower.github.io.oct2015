<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: education | RayHightower.com]]></title>
  <link href="http://RayHightower.com/blog/categories/education/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2014-12-31T17:22:43-06:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Be Awesome. Tackle Big League Problems at WindyCityRails]]></title>
    <link href="http://RayHightower.com/blog/2014/08/05/be-awesome-tackle-big-league-problems-at-windycityrails/"/>
    <updated>2014-08-05T16:21:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/08/05/be-awesome-tackle-big-league-problems-at-windycityrails</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='/images/big_league_problems_windycityrails.jpg' width='' height='' alt='Be awesome.' title='Be awesome.'><span class='caption-text'>Be awesome.</span></span>
Do you see yourself in any of these scenarios?</p>

<ul>
<li><p>You have already built a successful Rails app. Now that you&rsquo;re &ldquo;done&rdquo;, you know you can make it better, but you&rsquo;re not sure how. You want to take your skills to the next level.</p></li>
<li><p>You recently graduated from <a href="http://devbootcamp.com">Dev Bootcamp</a>, <a href="http://thestarterleague.com">Starter League</a>, <a href="http://www.mobilemakers.co/">Mobile Makers</a> or another school. You&rsquo;re ready to meet and interact with your next generation of mentors.</p></li>
<li><p>You are no longer a beginner. You have seen <em>advanced</em> developers in action, and you are determined to get there yourself.</p></li>
<li><p>Software development is relatively new to you, and you built a successful track record in another profession. You want to meet people who can help you accelerate through the beginner phase so you can launch something useful.</p></li>
</ul>


<p>Common thread: It&rsquo;s time to unleash the awesomeness in your bones. You want to take your skills to the next level, and you are ready to tackle <em>Big League Problems</em>. <a href="http://windycityrails.org">WindyCityRails</a> is for you.</p>

<!--more-->


<h3>What are Big League Problems?</h3>

<p>You might think of a big league problem as a good problem. For example, the Rails app you built is pulling in customers, and you&rsquo;re bumping into the limits of your software architecture. Who knew that so many people would buy from you?</p>

<p>Now&hellip; How do you scale? Do you buy more hardware, change your architecture, choose a new platform, or some combination of these? <a href="http://www.windycityrails.org/schedule/#williams">Dr. Nic Williams</a>, <a href="http://www.windycityrails.org/schedule/#shirai">Brian Shirai</a>, <a href="http://www.windycityrails.org/schedule/#light">Evan Light</a>, <a href="http://www.windycityrails.org/schedule/#menard">Mark Menard</a> deal with scaling problems. Learn from them.</p>

<p>Maybe you built a gem to solve a problem for yourself, and now you want to release your gem to the world. What legal questions do you need to consider? Did Rails face similar challenges in the beginning? <a href="http://www.windycityrails.org/schedule/#saper">Daliah Saper</a> is an attorney who specializes in intellectual property and other open source software issues. Put her team to work for you.</p>

<p>How about security? Have you outgrown the <code>Devise</code> gem? Or do you simply need to know more about <code>Devise</code> internals so that you can use it more effectively? Maybe it&rsquo;s time to abandon username/password logins altogether and go with SQRL. <a href="http://www.windycityrails.org/schedule/#love">Justin Love</a> and <a href="http://www.windycityrails.org/schedule/#mazza">Lucas Mazza</a> might have some ideas for you.</p>

<h3>Awesome Speakers. Awesome Audience.</h3>

<p>This year&rsquo;s WindyCityRails features the most powerful collection of speakers we&rsquo;ve ever assembled. Check out the <a href="http://www.windycityrails.org/schedule/">complete list of WindyCityRails speakers</a> and ask yourself what you can learn from each one.</p>

<p>Even better: Only 300 WindyCityRails tickets will be sold. Our speakers enjoy interacting with audience members throughout the conference. As professionals, they are always learning, too! So if you want some face time with people who understand Big League Problems (and more importantly, Big League Solutions) WindyCityRails is the place for you to be.</p>

<h3>Get Tickets Now</h3>

<p>Tickets are selling fast. Get yours now at <a href="http://www.windycityrails.org/register/">http://www.windycityrails.org/register/</a>. Use the promo code AWESOME to save $75.00 on the standard price.</p>

<p>We look forward to seeing you at WindyCityRails!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get Back to Making Things]]></title>
    <link href="http://RayHightower.com/blog/2014/06/28/get-back-to-making-things/"/>
    <updated>2014-06-28T16:25:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/06/28/get-back-to-making-things</id>
    <content type="html"><![CDATA[<blockquote><p>You know what the trouble is? We used to make things in this country, build things. Now we just put our hand in the next guy’s pocket.
<br/>~Frank Sobatka</p></blockquote>

<p><span class='caption-wrapper right'><img class='caption' src='/images/zero-to-maker.gif' width='' height='' alt='' title=''><span class='caption-text'></span></span>
David Lang is a maker. After a stint with a struggling Silicon Valley startup, David teamed up with former NASA engineer <a href="http://openrov.com/profile/1gupl83kvnk8f">Eric Stackpole</a> to build an underwater robot called <a href="/blog/2014/06/16/citizen-science-with-openrov/">OpenROV</a>. That&rsquo;s a two-sentence oversimplification of David&rsquo;s maker journey, detailed in his book: <a href="http://shop.oreilly.com/product/0636920028284.do">Zero to Maker: Learn (Just Enough) to Make (Just About) Anything</a>.</p>

<p>The book starts off like a novel, with the exploration of the mysterious Hall City Cave and an 1840s-era gold robbery. Fast-forward to the present day where a multi-disciplinary team of makers joins forces to create an inexpensive vehicle for underwater exploration.</p>

<p>The author was not a born maker. But through force of will, discipline, and the right mentorship, he grew from non-maker to co-founder of the OpenROV company in roughly one year.</p>

<!--more-->


<h3>Making is a Team Sport</h3>

<p><em>Zero to Maker</em> will not teach you how to use tools, what to make, or what manuals to read. But it will put you on the path to learning. For example, the author shares his first experience at a <a href="http://makerfaire.com/">Maker Faire</a>, a gathering for people who make things. Many of the exhibitors have spent decades honing their skills, while some are brand new and full of enthusiasm. Everyone shares knowledge in the Maker community. And as a result, everyone grows.</p>

<p>Maker Spaces are places where tools and expertise are shared on a regular basis. <a href="https://www.noisebridge.net/">Noisebridge</a> is a maker space in San Francisco where the author got some of his early experience with specialized tools. <a href="http://pumpingstationone.org/">Pumping Station One</a> and <a href="http://www.sshchicago.org/">Southside Hackerspace Chicago</a> shoot for similar goals in Chicago.</p>

<p>The author points out that no matter what you&rsquo;re trying to make, chances are that someone else has made something similar and they can share experience with you. Likewise, you have experience that other makers may find valuable, even on day one of your maker journey. Sometimes we don&rsquo;t know what we know. Maker communities remove the friction so that knowledge can be shared more freely.</p>

<h3>The IKEA Effect</h3>

<p>Why is the maker movement so powerful? The author explores this question in one very interesting section of the book. As it turns out, Researchers at the Harvard Business School think they have the answer. When we put our sweat and effort into building a project, we perceive the project to be more valuable. The researchers refer to this phenomenon as the IKEA effect. If we sweat to build something, it becomes valuable to us.</p>

<h3>Recommendation</h3>

<p>If you are a maker, or if you want to become a maker, this book is worth reading. And once you&rsquo;re done reading, go make something!</p>

<p><em>Note: A version of this article is also posted at <a href="http://www.chicagoruby.org/book-reviews/">http://www.chicagoruby.org/book-reviews/</a>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Grow a User Group]]></title>
    <link href="http://RayHightower.com/blog/2014/05/30/how-to-grow-a-user-group/"/>
    <updated>2014-05-30T17:34:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/05/30/how-to-grow-a-user-group</id>
    <content type="html"><![CDATA[<p>The current team of <a href="http://chicagoruby.org">ChicagoRuby</a> organizers assumed leadership in August 2007. Back then, typical monthly attendance was about five people and the group&rsquo;s <a href="http://meetup.com/chicagoruby">Meetup.com</a> database contained 78 members. The previous organizer was swamped with work at his day job, so he handed the baton to a new crew.</p>

<p>Today, the <em>new crew</em> has grown ChicagoRuby to over 2,700 members. The group hosts three meetups every month, and the downtown meetings consistently max out the 100-person RSVP limit. Bonus: ChicagoRuby hosts two conferences, <a href="http://windycityrails.org">WindyCityRails</a> in Chicago and <a href="http://rubycaribe.com">RubyCaribe</a> on the Caribbean island of Barbados.</p>

<p>How does ChicagoRuby do it? Through consistency, teamwork, iteration, and learning from mistakes.</p>

<!--more-->


<h3>Be Consistent With Meetings</h3>

<p>Consistency is very difficult in the beginning, especially on that night when only three people show up for the meeting. I have hosted a 3-person ChicagoRuby meeting before. Consistency is hard, and it is also the most important factor in user group success.</p>

<p>People trust consistency. Consistent meetings grow groups.</p>

<p>Members of ChicagoRuby know that we meet on the first Tuesday of every month downtown, the third Saturday of every month in Elmhurst, and one evening per month for the hack night. Members can plan their schedules months in advance because the ChicagoRuby calendar is consistent. Consistency builds trust.</p>

<p>ChicagoRuby cancelled one meeting in January 2011 due to a killer snow storm in Chicago. We were forced to cancel because the property manager shut the entire building down. We&rsquo;re a little bit stubborn about consistency. And that&rsquo;s how we build trust.</p>

<p>Yes, there will be times when the organizer is too exhausted to run an upcoming meeting. That&rsquo;s why it&rsquo;s important to share the work by building a team.</p>

<h3>Build the Team</h3>

<p>ChicagoRuby believes in sharing the work amongst multiple organizers. The group is stronger with several brains at the helm. Today we have eight organizers. Working as a team enables us to benefit from each other’s strengths. Some organizers have strong design skills, others are strong developers. And some are good at asking members for help.</p>

<h3>Ask for Help</h3>

<blockquote><p>I guarantee you that any favor he asks of you, you will offer to do before he requests it.
<br/>~Tom Hagen, Consigliere</p></blockquote>

<p>One way to ask for help: Encourage members to help in their area of enthusiasm. For example, organizer <a href="https://twitter.com/ginnyhendry">Ginny Hendry</a> runs the ChicagoRuby hack nights every month. Ginny got started when she approached the organizers after a meeting and said, &ldquo;We should have hack nights.&rdquo; Clearly, she was enthused about hack nights, so we asked her to take the lead in that area.</p>

<p>Today, Ginny’s hack nights are the highest rated of all ChicagoRuby events. In January, she will be a lab advisor at RubyCaribe.</p>

<p>Before he moved to Florida, <a href="http://twitter.com/mattpolito">Matt Polito</a> was part of the ChicagoRuby organizer team. Matt wanted ChicagoRuby to have a logo. I was against it. We were planning the first WindyCityRails and I wanted everyone to focus on the conference. Matt went out and got the logo done anyway. Everybody likes it. Matt, thank you for ignoring me!</p>

<p>Members who have ideas for improvement tend to be strong leaders. The whole group benefits when we get out of the way and let them lead.</p>

<p>The current members of the ChicagoRuby organizer team are:</p>

<ul>
<li><a href="https://twitter.com/ginnyhendry">Ginny Hendry</a>, mentioned above.</li>
<li><a href="http://twitter.com/wondible">Justin Love</a> is a developer and an organizer of the <a href="http://www.meetup.com/js-chi/">Chicago JavaScript Meetup Group (JS-Chi)</a>. Justin will also be a lab advisor for RubyCaribe in January 2015.</li>
<li><a href="http://twitter.com/hugocorbucci">Hugo Corbucci</a>, <a href="http://www.meetup.com/ChicagoRuby/members/42800032/">Emily Rosengren</a>, and <a href="http://www.meetup.com/ChicagoRuby/members/135529442/">Sam Jacobs</a> are developers at <a href="http://thoughtworks.com">ThoughtWorks</a>. Since ThoughtWorkers travel often, ChicagoRuby always invites two or more to be on the organizer team.</li>
<li><a href="http://twitter.com/themccreefiles">Alonda McCree</a> manages the downtown meetups, including logistics and video. Alonda is the conference manager for RubyCaribe.</li>
<li><a href="http://www.meetup.com/ChicagoRuby/members/1345203/">Marty Lavin</a> manages ChicagoRuby&rsquo;s Elmhurst meetups, including logistics and scheduling. Marty is consistently active in Elmhurst, so we asked him to join the team.</li>
<li><a href="http://twitter.com/rayhightower">Ray Hightower</a>, author of this
article.</li>
</ul>


<p>In addition to the core group of ChicagoRuby organizers, one person deserves special mention. <a href="http://twitter.com/zolk">Kevin Zolkiewicz</a> has managed every WindyCityRails since the first one in 2008. Kevin&rsquo;s project management, design, and leadership skills are enjoyed by everyone who attends WindyCityRails.</p>

<p>The <a href="http://www.chicagoruby.org/about/organizers/">ChicagoRuby Organizer Page</a> contains the list of current and past organizers. Many of the former organizers remain active in an emeritus role. Every mind helps to make the group stronger.</p>

<h3>Automate Everything</h3>

<p>Managing a database of 2,700+ members could be drudgery. Fortunately, <a href="http://meetup.com/chicagoruby">Meetup.com</a> makes the process easy. Meetup handles RSVPs, membership additions and deletions, and reminders. Sometimes, the 2-week automated reminder from Meetup.com reminds the organizers to get a speaker for the next meeting!</p>

<p>Early in our history, someone suggested that ChicagoRuby should not use Meetup.com because it&rsquo;s written in PHP, and we&rsquo;re a Ruby group. We see things differently. ChicagoRuby is a Ruby group that uses the best tool for the job, regardless of language. Meetup.com has proven itself useful for eight years and counting.</p>

<h3>Choose a Short Name</h3>

<p>Growth is an ongoing priority for ChicagoRuby. In order to grow, a group has to attract new members. New members who are looking for a group to join are likely to start with a search engine, and search engines adore simplicity.</p>

<p>Our group was originally called <em>The Chicago Area Ruby on Rails Meetup Group</em>. Accurate, and a mouthful. We discovered that a simple domain name, <a href="http://chicagoruby.org">ChicagoRuby.org</a>, was available. So we grabbed it, along with the <a href="http://twitter.com/chicagoruby">@ChicagoRuby</a> Twitter handle.</p>

<h3>Be Easy to Find</h3>

<p>To make the group even easier to find, every web site in the ChicagoRuby ecosystem points to all of the group&rsquo;s other web sites. For example, all of the conference sites point to the ChicagoRuby site, and vice versa. A new member who finds one part of the ecosystem will find the whole thing. People feel welcome when information is easy to find.</p>

<p>Making future members feel welcome is key to growth. Free monthly events are another way to make people feel welcome.</p>

<h3>Keep Monthly Events Free</h3>

<p>I firmly believe that monthly user group meetings should be free. We never know what a member of our community is going through financially. Therefore, ChicagoRuby&rsquo;s monthly meetings have always been free.</p>

<p>My personal history includes times when I was dead broke due to one entrepreneurial setback or another. So I have emotional reasons for keeping ChicagoRuby’s monthly events free of charge.</p>

<p>Of course, the money to pay for the meetings has to come from somewhere. That’s where sponsors can help.</p>

<h3>Cover Monthly Costs Through Sponsorships</h3>

<p>Companies will gladly sponsor a group that gives them a return on their investment. Sponsorships don&rsquo;t always come in the form of money.</p>

<p>For example, ChicagoRuby’s first sponsor was <a href="http://www.deforestgroup.com/">DeForest Group</a>. Owners <a href="https://www.linkedin.com/in/leedeforest">Lee DeForest</a> and <a href="http://www.linkedin.com/pub/james-deforest/40/57a/881">Jim DeForest</a> provide ChicagoRuby with free space and WiFi for our Saturday meetings. Lee was one of the five people in the room when the current organizers took over, and we will always be grateful for his early support.</p>

<p>ChicagoRuby’s downtown sponsors are <a href="http://enova.com">Enova</a> and <a href="http://thoughtworks.com">ThoughtWorks</a>. Each company provides space, WiFi, pizza, and beverages on a monthly basis. Sponsors get to address the group at the beginning of the meeting. More important, by sponsoring ChicagoRuby over time, a company can build trust within the membership.</p>

<p><a href="http://oreilly.com">O&#8217;Reilly Media</a> was our first publishing sponsor.  O&#8217;Reilly, <a href="http://www.informit.com/user_groups/">Pearson Education</a>, and <a href="http://pragprog.com/">The Pragmatic Programmers</a> provide books for ChicagoRuby members to <a href="http://www.chicagoruby.org/book-reviews/">review</a>.</p>

<p>Sponsors get involved with user groups for two main reasons: To recruit developers, or to market products to developers. Everybody wins when sponsors get involved with user groups, financially or otherwise.</p>

<h3>Vet Speakers</h3>

<p>Members of ChicagoRuby trust the organizers to deliver quality events every month. I dropped the ball one month when I failed to properly vet a speaker. After that meeting, organizer <a href="https://twitter.com/dgiunta">Dave Giunta</a> wrote the first draft of the ChicagoRuby <a href="http://www.chicagoruby.org/about/speaker-guidelines/">speaker guidelines</a>. We&rsquo;ve word-smithed the guidelines over the years, but the most important parts were created by Dave.</p>

<h3>Make Members Feel Awesome</h3>

<p>We humans have a need to belong to something. The feeling of belonging (awesomeness) can be strengthened when we go out for drinks after an event. Drinks are not necessarily alcohol; when we go to a bar together, some members will have a soda, juice, or coffee. Informal camaraderie makes members feel like members.</p>

<p>ChicagoRuby members gather together at a bar for an hour or so after our downtown meetings. In Elmhurst, the meetings end at noon, so we grab lunch together at a local restaurant. The conversation continues, and bonds are formed.</p>

<h3>Maintain Focus, and Explore New Areas</h3>

<p>Focus can lead to excellence. But if our focus is too tight, we might miss the Next Great Thing. How does a group balance between focus and exploration?</p>

<p>Over the years, ChicagoRuby has struggled with focus. We&rsquo;ve experimented with other ventures. We ran a job board for awhile. We ran conferences related to NoSQL and mobile. We moved away from these because they drained our resources, and pulled us away from our core, which is Ruby.</p>

<p>Here&rsquo;s how we balance between focus and exploration. The monthly user group meetings are for exploration. Monthly events take minimal resources, so they&rsquo;re ideal for experiments. For example, <a href="http://www.chicagoruby.org/videos/archives/2013/12/03/ployglot-night/">Polyglot Night</a> in Jan 2014 was very successful. Monthly meetings might explore NoSQL, mobile, or IoT. The Ruby community remains vibrant because we <em>borrow</em> ideas from other communities.</p>

<p>Our conferences focus on Ruby. Conferences require more planning and resources than monthly meetups. So, to maximize efficiency, we build our conferences around our core strength: Ruby. RubyCaribe is the newest example of this focused approach.</p>

<h3>Collaborate With Other Groups</h3>

<p>Collaboration stretches our brains in unexpected and wonderful ways. For our newest ventures, ChicagoRuby is collaborating with developers in the Caribbean, in the island nation of Barbados.</p>

<ul>
<li><a href="http://linuxbarbados.org">LinuxBarbados</a> is a monthly user group for open source enthusiasts.</li>
<li><a href="http://rubycaribe.com">RubyCaribe</a> is a brand new conference for intermediate and advanced Ruby developers.</li>
</ul>


<p>Through the new ventures, ChicagoRuby has been introduced to work done by the <a href="https://www.cavehill.uwi.edu/">University of the West Indies at Cave Hill (UWI)</a>.</p>

<p><a href="http://www.cavehill.uwi.edu/fst/cmp/staff/colin-depradine.aspx">Dr. Colin Depradine</a>, Dean of the University’s Faculty of Science and Technology, is growing the next generation of scientists and engineers in the Caribbean. Under Dr. Depradine&rsquo;s leadership, UWI encourages collaboration between the sciences. For example, computer scientists are writing software to crunch data related to solar energy research. Looking even further into the future, the UWI team has introduced children as young as eight to programming.</p>

<p>UWI also serves as host to LinuxBarbados. The group is organized by <a href="http://www.meetup.com/LinuxBarbados/members/143194822/">Maurice Beckles</a>, a Barbados-based open source enthusiast and IT technician at UWI. If you&rsquo;re in Barbados, be sure to ask him about his sink-or-swim introduction to Linux when he worked at a bank!</p>

<p>Notice the pattern: The conference (RubyCaribe) focuses on ChicagoRuby&rsquo;s core strength, Ruby. The monthly user group, LinuxBarbados, is a vehicle for exploring a wide range of topics including Linux, Ruby, embedded devices, and anything related to open source.</p>

<h3>Conclusion</h3>

<p>A better title for this post might have been <em>One Way to Grow a User Group</em>. Every group will grow differently depending on its particular strengths and interests. Of course, groups that grow are likely to have a few things in common. When a group is built on the pillars of consistency and teamwork, they are likely to succeed in a big way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrading to Git 2.0]]></title>
    <link href="http://RayHightower.com/blog/2014/05/30/upgrading-to-git-2-dot-0/"/>
    <updated>2014-05-30T11:33:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/05/30/upgrading-to-git-2-dot-0</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/git_200.png">
Developers of Git are making a serious effort to improve intuitiveness for first-time users. Of course, all users benefit from intuitive tools. When our tools <em>just work</em>, we spend less time sifting through documentation and more time solving problems for our customers.</p>

<!--more-->


<h3>How to Upgrade</h3>

<p>If you’re on Mac OS X, make sure you’re using <a href="/blog/2014/02/12/homebrew-fundamentals/">Homebrew</a>. It’s the easiest way to install and manage Unix libraries on the Mac.</p>

<p>It’s a good idea to check your current version before upgrading.</p>

<p>&#8220;` bash
$ git &mdash;version
git version 1.9.2</p>

<p>$</p>

<p>&#8220;`
Next, make sure that Homebrew is current.</p>

<p>&#8220;` bash
$ brew doctor</p>

<p>Warning: Your Homebrew is outdated.
You haven&rsquo;t updated for at least 24 hours, this is a long time in brewland!
To update Homebrew, run <code>brew update</code>.</p>

<p>$</p>

<p>&#8220;`</p>

<p>My Homebrew was outdated, so I used <code>brew update</code> to grab the new packages.</p>

<p>&#8220;` bash
$ brew update
Updated Homebrew from b46160b8 to afff2b23.
==> New Formulae
aces_container                    git-number                      picolisp
apache-spark                    homebrew/versions/mongodb24       probatron4j</p>

<p>&hellip;</p>

<p>$</p>

<p>&#8220;`</p>

<p>Next, use Homebrew to upgrade Git.</p>

<p>&#8220;` bash
$ brew upgrade git
==> Upgrading 1 outdated package, with result:
git 2.0.0
==> Upgrading git
==> Downloading <a href="https://downloads.sf.net/project/machomebrew/Bottles/git-2.0.0.mavericks.bottle.tar.gz">https://downloads.sf.net/project/machomebrew/Bottles/git-2.0.0.mavericks.bottle.tar.gz</a></p>

<h6>################################################################## 100.0%</h6>

<p>==> Pouring git-2.0.0.mavericks.bottle.tar.gz
==> Caveats
The OS X keychain credential helper has been installed to:
  /usr/local/bin/git-credential-osxkeychain</p>

<p>The &lsquo;contrib&rsquo; directory has been installed to:
  /usr/local/share/git-core/contrib</p>

<p>Bash completion has been installed to:
  /usr/local/etc/bash_completion.d</p>

<p>zsh completion has been installed to:
  /usr/local/share/zsh/site-functions
==> Summary
🍺  /usr/local/Cellar/git/2.0.0: 1324 files, 31M</p>

<p>$
&#8220;`</p>

<p>Finished. Let&rsquo;s check the Git version to confirm that the upgrade went properly.</p>

<p>&#8220;` bash
$ git &mdash;version
git version 2.0.0</p>

<p>$</p>

<p>&#8220;`</p>

<p>Future articles will examine the this latest version of Git in detail. For now, enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recursion and Memoization]]></title>
    <link href="http://RayHightower.com/blog/2014/04/12/recursion-and-memoization/"/>
    <updated>2014-04-12T10:48:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/04/12/recursion-and-memoization</id>
    <content type="html"><![CDATA[<blockquote><p>To iterate is human, to recurse divine.
&nbsp;<br/>
~ L. Peter Deutsch</p></blockquote>

<p>Recursion is available in many high-level languages, including Ruby. Recursive solutions can be joyfully elegant. At the same time, the pursuit of elegance can lead to unexpected performance pitfalls.</p>

<p>Fortunately, we can use optimization techniques to address performance problems before they occur. Memoization is one technique in our arsenal.</p>

<!--more-->


<h3>Before Memoization</h3>

<p>Memoization was designed to solve a particular kind of problem. Consider a method called <code>fibo(n)</code> that calculates the <em>nth</em> number of the <a href="http://en.wikipedia.org/wiki/Fibonacci_number">Fibonacci</a> sequence.</p>

<p>&#8220;` ruby</p>

<h1>Calculate the nth Fibonacci number, f(n).</h1>

<p>def fibo (n)
  if n &lt;= 1</p>

<pre><code>return n
</code></pre>

<p>  else</p>

<pre><code>value = fibo(n-1) + fibo(n-2)
return value
</code></pre>

<p>  end
end</p>

<h1>Display the Fibonacci sequence.</h1>

<p>(1..40).each do |number|
  puts &ldquo;fibo(#{number}) = #{fibo(number)}&rdquo;
end</p>

<p>&#8220;`</p>

<p>The example runs, but performance slows down as <em>n</em> gets larger. Why? Because this method re-calculates all preceeding Fibonacci numbers every time it calculates a new <code>fibo(n)</code>. When we calculate Fibonacci numbers manually, we know better. Humans are smart enough to refer to earlier work. But the <code>fibo(n)</code> method does not manage time very well.</p>

<p>Is it possible for the <code>fibo(n)</code> method to remember the results of earlier calculations so that it can avoid doing work that is already done? Yes, through <a href="http://en.wikipedia.org/wiki/Memoization">memoization</a>.</p>

<h3>Memoization</h3>

<p>Memoization means recording the results of earlier calculations so that we don&rsquo;t have to repeat the calculations later. If our code depends on the results of earlier calculations, and if the same calculations are performed over-and-over again, then it makes sense to store interim results (jot results down on a &lsquo;memo&rsquo; = memoization) so that we can avoid repeating the math.</p>

<p>The Fibonacci example can be improved through memoization as follows.</p>

<ul>
<li>Create a place to store temporary results.</li>
<li>Before performing a calculation, find out if the calculation has
already been done. If so, use the stored result.</li>
<li>If this is our first time calculating a particular <code>fibo(n)</code>, store
the results for future use.</li>
</ul>


<p>Here&rsquo;s how memoization is implemented in the Fibonacci example:</p>

<p>&#8220;` ruby</p>

<h1>Fibonacci numbers WITH memoization.</h1>

<h1>Initialize the memoization array.</h1>

<p>@scratchpad = []
@max_fibo_size = 50
(1..@max_fibo_size).each do |i|
  @scratchpad[i] = :notcalculated
end</p>

<h1>Calculate the nth Fibonacci number, f(n).</h1>

<p>def fibo (n)
  if n > @max_fibo_size</p>

<pre><code>return "n must be #{@max_fibo_size} or less."
</code></pre>

<p>  elsif n &lt;= 1</p>

<pre><code>return n
</code></pre>

<p>  elsif @scratchpad[n] != :notcalculated</p>

<pre><code>return @scratchpad[n]
</code></pre>

<p>  else</p>

<pre><code>@scratchpad[n] = fibo(n-1) + fibo(n-2)
return @scratchpad[n]
</code></pre>

<p>  end
end</p>

<h1>Display the Fibonacci sequence.</h1>

<p>(1..50).each do |number|
  puts &ldquo;fibo(#{number}) = #{fibo(number)}&rdquo;
end</p>

<p>&#8220;`</p>

<p>Walking through the code&hellip; First we create a memoization array, a place to store the pre-calculated values. In this example, <code>@scratchpad[]</code> serves as our memoization array.</p>

<p>The <code>fibo(n)</code> method is similar to the one in the earlier example, with a few subtle differences. First, we need to determine whether we&rsquo;ve already calculated a particular value. Since we initialized all elements of the <code>@scratchpad</code> array with the <code>:notcalculated</code> symbol, it&rsquo;s easy to figure out where work needs to be done. If a Fibonacci number <code>fibo(n)</code> has already been calculated, we return the value stored at <code>@scratchpad[n]</code>. Otherwise, we calculate the new <code>fibo(n)</code> and store that value at <code>@scratchpad[n]</code> for later use.</p>

<h3>Performance Comparison</h3>

<p>The performance of the two programs is compared in this 1-minute video.</p>

<center><iframe src="//player.vimeo.com/video/91841948" width="500" height="313" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></center>


<p>As the video shows, memoization is a performance booster.</p>

<h3>Sample Code</h3>

<p>Sample code related to this article can be found on <a href="https://github.com/RayHightower/fibonacci">GitHub</a>.</p>
]]></content>
  </entry>
  
</feed>
