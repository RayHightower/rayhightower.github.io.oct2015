<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | RayHightower.com]]></title>
  <link href="http://RayHightower.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2014-08-07T09:57:03-05:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LinuxBarbados is Global]]></title>
    <link href="http://RayHightower.com/blog/2014/07/25/linuxbarbados-is-global/"/>
    <updated>2014-07-25T15:36:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/07/25/linuxbarbados-is-global</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='/images/LinuxBarbados-tux-logo_300.png' width='' height='' alt='' title=''><span class='caption-text'></span></span>
<a href="http://linuxbarbados.org">LinuxBarbados</a> is a user group for open source enthusiasts. The group meets monthly, offering solid knowledge for anyone who wants to ramp up their open source skills. For example, yesterday’s meeting featured a presentation on <a href="http://xbmc.org/">XBMC</a> by Michael Layne. The presenter dug deep into the tool, offering tips on how to write plugins in C++ or Python.</p>

<!--more-->


<h3>Global Reach</h3>

<p>The group is based in Barbados on the campus of the <a href="http://www.cavehill.uwi.edu/">University of the West Indies (UWI) at Cave Hill</a>. Enthusiasts who don’t live in Barbados can participate <em>live</em> online. So far the group has used Google Hangout for video. Other video solutions will be considered as the group continues to grow.</p>

<h3>Next Steps</h3>

<p>Organizers <a href="http://www.meetup.com/LinuxBarbados/members/143194822/">Maurice Beckles</a> and <a href="http://www.meetup.com/LinuxBarbados/members/153574612/">Michael Layne</a> have exciting plans for the group. Take a look at the LinuxBarbados calendar, and join <a href="http://linuxbarbados.org">LinuxBarbados</a> online if you want to hear about future events.</p>

<p>Whether you live in the Caribbean or in Antarctica, we look forward to seeing you!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM and Parallella: What a Difference a Shell Makes]]></title>
    <link href="http://RayHightower.com/blog/2014/07/21/rvm-and-parallella-what-a-difference-a-shell-makes/"/>
    <updated>2014-07-21T21:46:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/07/21/rvm-and-parallella-what-a-difference-a-shell-makes</id>
    <content type="html"><![CDATA[<p><a href="/blog/2013/05/16/upgrading-ruby-with-rvm/">RVM</a> is an effective way to manage Ruby versions on Linux or OS X. RVM was working well on my Ubuntu-based <a href="/blog/2014/07/07/parallella-quick-start-guide-with-gotchas/">Parallella</a>, until one day it stopped:</p>

<p>```bash
linaro-nano:~> rvm list
rvm: Command not found.
linaro-nano:~></p>

<p><code>``
</code>rvm: Command not found.` Fortunately, <a href="https://twitter.com/theotherzach">Zach Briggs</a> and I were pairing at a joint OpenHack &ndash; ChicagoRuby event when the problem occurred. Zach is an ideal pairing partner; troubleshooting was smooth because he was there. Time to investigate.</p>

<!--more-->


<h3>Explicit Path</h3>

<p>After a few experiments, we discovered that we could run RVM by explicitly specifying the path to the executable:</p>

<p>```bash
linaro-nano:~> ~/.rvm/bin/rvm list</p>

<p>rvm rubies</p>

<p>   ruby-2.0.0-p481 [ armv7l ]</p>

<h1>Default ruby not set. Try &lsquo;rvm alias create default <ruby>&rsquo;.</h1>

<h1>=> &ndash; current</h1>

<h1>=* &ndash; current &amp;&amp; default</h1>

<h1>* &ndash; default</h1>

<p>linaro-nano:~></p>

<p>```</p>

<p>Therefore, it appeared that the Ubuntu/Linux <code>$PATH</code> variable was being ignored. Google led us to consider the shell in use on the Parallella.</p>

<h3>Which Shell Is In Use?</h3>

<p>The shell is just a program that lets humans talk to the Linux operating system through a command line interface. Several shell programs exist. Linux users tend to prefer one shell or another. The <code>$SHELL</code> environmental variable points to the one in use.</p>

<p>```bash
linaro-nano:~> echo $SHELL
/bin/tcsh
linaro-nano:~></p>

<p>```</p>

<p>Very interesting. <code>tcsh</code> was the current Parallella shell. I&rsquo;m more accustomed to <code>bash</code>. Could RVM prefer <code>bash</code> too? We changed one line of <code>/etc/passwd</code> to tell the Parallella to start with <code>bash</code> instead of <code>tcsh</code> and rebooted the Parallella.</p>

<p>```bash
linaro-nano:~> echo $SHELL
/bin/bash
linaro-nano:~></p>

<p>```
&hellip;and now RVM works normally.</p>

<p>```bash
linaro-nano:~> rvm list</p>

<p>rvm rubies</p>

<p>   ruby-2.0.0-p481 [ armv7l ]</p>

<h1>Default ruby not set. Try &lsquo;rvm alias create default <ruby>&rsquo;.</h1>

<h1>=> &ndash; current</h1>

<h1>=* &ndash; current &amp;&amp; default</h1>

<h1>* &ndash; default</h1>

<p>linaro-nano:~></p>

<p>```</p>

<h3>Consider Fish?</h3>

<p>Right after this exercise, Zach and <a href="http://twitter.com/josh_cheek">Josh Cheek</a> had a Twitter conversation about a shell called <a href="http://fishshell.com/">fish</a>. Something new and shiny to explore!</p>

<h3>Original Plan: Rubinius</h3>

<p>Did I mention that we originally planned to install <a href="/blog/2014/02/06/installing-rubinius-using-rvm/">Rubinius</a> on the Parallella? Where there are goals, there are yaks waiting to be shaved!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Internet of Things at ACM]]></title>
    <link href="http://RayHightower.com/blog/2014/06/27/internet-of-things-at-acm/"/>
    <updated>2014-06-27T18:08:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/06/27/internet-of-things-at-acm</id>
    <content type="html"><![CDATA[<p>How many motors are in the typical automobile? The knee-jerk response might be “one, the big metal thing under the hood”. Upon further reflection, we may recall the motors that operate many devices in today’s automobile: windshield wipers, power windows, door locks, sun roof, reclining seats, and so on. Power devices were once luxury equipment. Today, since motors have fallen in price, most cars include these <em>luxury</em> items as standard equipment.</p>

<p>We take motors for granted, therefore motors have disappeared. And now, as it becomes possible to add a computer and an IP address to almost anything electronic, we bring about the Internet of Things (IoT). Computers are disappearing too.</p>

<!--more-->


<h3>ACM Presents Disruptive IoT</h3>

<p>Steven Loving is a director at <a href="http://www.arrayent.com/">Arrayent</a>. Arrayent makes a platform for companies that want their products to be IoT-aware. For example, a garage door company that wants to offer iPhone control to their customers can do so without re-inventing TCP/IP themselves. Arrayent handles the IoT portion so the maker can focus on their core business. Steven shared his vision of the IoT future at <a href="http://www.meetup.com/chicagoacm/events/184091062/">Tuesday&rsquo;s ACM meeting</a>. Some of his ideas are summarized here.</p>

<h3>Don&rsquo;t Leave Home Without It</h3>

<p><em>Don&rsquo;t leave home without it</em> was once the catch phrase of a major charge card. Today, many of us leave home with just three things in our pockets:</p>

<ul>
<li>Wallet</li>
<li>Keys</li>
<li>Smartphone</li>
</ul>


<p>As near-field communication (or one of its descendants) becomes prevalent, we may only need the smartphone.</p>

<h3>Products Don&rsquo;t Matter Any More?</h3>

<p>Products don&rsquo;t matter any more? I immediately wanted to argue against this idea. Everyone wants quality products, right? The point: As manufacturing techniques become common knowledge, companies need to come up with new ways to differentiate themselves from the competition.</p>

<p>Connected products are special. For example, consider an ordinary sump pump. How does a buyer distinguish one from another? If one sump pump contains a tiny embedded Linux system with an IP address, it can alert the owner when water has approached a dangerous level, if there is a power outage, or if flood conditions are simply too strong for the pump to handle. Bad news does not get better with time, and if the sump pump can send bad news early, the owners can take corrective action while there&rsquo;s still time to do so.</p>

<h3>Mobile First</h3>

<p>A great quote from the presentation&hellip;</p>

<blockquote><p>Do you know anybody building a product with an LCD on it? Shoot them.  I have an LCD in my pocket. It&rsquo;s called a phone.
<br/>~Steven Loving</p></blockquote>

<p>In other words, the mobile-first strategy that many developers apply to apps also applies to IoT.</p>

<p>Side note: Clearly, Apple gets it. That&rsquo;s one reason why they released <a href="https://developer.apple.com/homekit/">HomeKit</a>.</p>

<h3>Incumbent Companies Are Scrambling</h3>

<p>Why are cable companies offering security services in addition to standard packages of television and movies? Because users are moving to Netflix and Amazon Prime. Cable companies that offer internet service must come up with other services if they expect to survive. IoT might offer a way. Self-installed home monitoring services will give customers a reason to stick with their old cable provider. Of course, this will force security companies like ADT to come up with something new, too.</p>

<h3>IoT Progression</h3>

<p>What opportunities will become available when every device has an IP
address? Tuesday&rsquo;s presenter predicts the following sequence of
events:</p>

<ol>
<li>Connected products.</li>
<li>Connected systems &ndash; products talking to other products.</li>
<li>Communities of systems talking to each other.</li>
<li>Network effects.</li>
</ol>


<p>We&rsquo;re currently experiencing &#35;1 and &#35;2. What will happen as &#35;3 and &#35;4 begin to roll out? We cannot be sure. However, we can be certain that this will be an exciting time for software developers, electrical engineers, and entrepreneurs who build companies in those areas.</p>

<h3>Thanks Chicago ACM</h3>

<p>Thanks again Chicago ACM for putting on a great program.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Citizen Science With OpenROV]]></title>
    <link href="http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov/"/>
    <updated>2014-06-16T17:46:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov</id>
    <content type="html"><![CDATA[<blockquote><p>In the early days of robots people said, &lsquo;Oh, let&rsquo;s build a robot&rsquo; and what&rsquo;s the first thought? You make a robot look like a human and do human things. That&rsquo;s so 1950s. We are so past that.
<br/>~Neil deGrasse Tyson</p></blockquote>

<p><span class='caption-wrapper right'><img class='caption' src='/images/openrov-uw.jpg' width='' height='' alt='OpenROV: Underwater robot running Node.js.' title='OpenROV: Underwater robot running Node.js.'><span class='caption-text'>OpenROV: Underwater robot running Node.js.</span></span>
<a href="http://openrov.com">OpenROV</a> is an underwater robot, roughly the size of a toaster, and definitely not human-shaped. The device is controlled through a Node.js-based web app. Former NASA researcher Eric Stackpole and Make Magazine columnist David Lang are on a mission to democratize ocean exploration in the same way that Jobs and Woz sparked the democratization of  computing. Eric and David pooled their talents to launch OpenROV, building on the foundation laid by Moore’s Law and the open source software movement.</p>

<p>OpenROV&rsquo;s ingredients are an impressive mix of open source goodness&hellip;</p>

<ul>
<li>BeagleBone Black &ndash; an open-source single-board computer, smaller than a deck of cards, running Linux.</li>
<li>Linux &ndash; specifically, the Ubuntu distribution.</li>
<li>Node.js &ndash; platform for building web applications, based on Google’s V8 JavaScript engine. Thanks to Node.js, any laptop running a web browser can control the OpenROV.</li>
<li>Arduino &ndash; inexpensive micro-controller commonly used in robotics projects.</li>
<li>TCP/IP &ndash; the communication protocol of the Internet. TCP/IP handles all communications (commands, video) between the OpenROV and the pilot’s laptop.</li>
</ul>


<p>The OpenROV team has released all of their <a href="https://github.com/openrov">schematics and source code</a> to the open source community, hence the word “open” in the company name. If you think the open source aspects of OpenROV are exciting, wait until you hear about the company&rsquo;s main mission: Underwater exploration.</p>

<!--more-->


<p>Eric and David were kind enough to invite me to their lab/manufacturing facility in Berkeley, California recently. Thank you, OpenROV makers!</p>

<h3>Remotely Operated Vehicles</h3>

<p><span class='caption-wrapper right'><img class='caption' src='/images/controller.jpg' width='' height='' alt='Laptop, browser, and game controller.' title='Laptop, browser, and game controller.'><span class='caption-text'>Laptop, browser, and game controller.</span></span>
ROV is short for remotely operated vehicle, an underwater robot. Scientists use ROVs to study marine life. Oil companies use ROVs for underwater construction and inspections. Industry-grade ROVs are priced at $30,000 on the low-end, while a <a href="http://www.mbari.org/twenty/Tiburon.htm">custom ROV can cost several million dollars</a>.</p>

<p>The OpenROV team was convinced that they could design and build an ROV small enough to fit in a suitcase, and easy enough for a citizen scientist to assemble and maintain. Targeting the general public meant achieving a relatively low price point: under one thousand dollars ($1,000.00).</p>

<p>They did it. The device is successful, and you can <a href="http://store.openrov.com/">buy an OpenROV</a> kit today for $849.00.</p>

<p>Movements are controlled via a USB-connected video game controller. A Bluetooth-equipped controller should work just as well. Some users will prefer the laptop keyboard; that works too.</p>

<p>In other words, the computer that you’re using to read this article can probably control the OpenROV.</p>

<h3>Citizen Science</h3>

<p>Our world will always need professional scientists, people working in academia and in industry to push the frontier of knowledge. Some scientific problems require the attention of PhD-level professionals, while other problems are better solved through crowdsourcing. Enter the <a href="http://en.wikipedia.org/wiki/Citizen_science">citizen scientist</a>.</p>

<p>Professional scientists are good at analyzing data, because that&rsquo;s what they have trained themselves to do. But data gathering requires less training than analysis. Citizen science and crowdsourcing work when there&rsquo;s an overwhelming volume of data to gather. Or when the breakthrough is beyond the reach of current scientific knowledge.</p>

<p>Citizen scientists may be constrained by money, but they tend to be unconstrained by expertise. Therefore they are likely to try solutions that experts would never consider. <a href="http://en.wikipedia.org/wiki/Wright_brothers">Orville and Wilbur Wright</a> were citizen scientists. Professional scientists pursued solutions for fixed-wing flight prior to the Wright brothers' success. But since the flight problem defied the known science of the day, new approaches were required.</p>

<p>Amusingly, successful citizen scientists can be outwitted by their own expertise, just like the professionals. For example&hellip;</p>

<blockquote><p>No flying machine will ever fly from New York to Paris &hellip;[because] no known motor can run at the requisite speed for four days without stopping.
<br/>~Orville Wright</p></blockquote>

<p>Shifting back to the 21st century: Thousands of citizen scientists are using OpenROV to explore oceans and lakes more thoroughly than ever before.</p>

<h3>Open Source On-Site</h3>

<p><span class='caption-wrapper right'><img class='caption' src='/images/ui-discussion-2.jpg' width='' height='' alt='Enthusiasts collaborate on the next UI.' title='Enthusiasts collaborate on the next UI.'><span class='caption-text'>Enthusiasts collaborate on the next UI.</span></span>
On the day I visited the OpenROV factory, other underwater enthusiasts were on-site, working with company engineers on product improvements. One enthusiast is a professional pilot of manned submersibles, underwater vehicles large enough to hold people. This pilot has traveled as deep as 2,000 meters below the ocean&rsquo;s surface! &ldquo;We&rsquo;re always looking at amperage&rdquo;, she said in a discussion with another enthusiast. A spike in amperage could indicate a ground fault, and batteries drain rapidly when that happens. You do not want to be stuck underwater when the batteries run out.</p>

<p>Another member of the open source community, an engineering veteran with decades of experience at <a href="http://apple.com">Apple</a> and <a href="http://oracle.com">Oracle</a>, translates the operator&rsquo;s feedback into code that might drive the next OpenROV user interface.</p>

<p>That&rsquo;s how open source works at OpenROV.</p>

<h3>Hardware Testing</h3>

<p><span class='caption-wrapper right'><img class='caption' src='/images/testing-motor-controller.jpg' width='' height='' alt='Testing new hardware.' title='Testing new hardware.'><span class='caption-text'>Testing new hardware.</span></span>
I offered to leave when the OpenROV team prepared to test some new components. After working in tech for decades, I&rsquo;ve learned to respect a company&rsquo;s right to protect secrets.</p>

<p>&ldquo;You forget that this is all open source,&rdquo; they told me. &ldquo;The schematics are already online, so there&rsquo;s nothing to hide. Come and watch the test.&rdquo;</p>

<p>Yes, they had to remind me about the real meaning of open source!</p>

<p>Four OpenROV makers gathered around a tank of water to test a new motor, controller, and propeller combination. They measured power utilization, propulsion, and temperature. Power utilization is important because the batteries need to last. Temperature matters because we don&rsquo;t want the OpenROV to melt underwater (or fry the fish). And propulsion matters because if the unit can&rsquo;t move, what&rsquo;s the point?</p>

<p>From the reaction of the team, it looks like they found some good components for the next batch of OpenROV kits.</p>

<h3>Strong Minds Coming Together</h3>

<p>The mood in the OpenROV lab is a blend of excitement and technical expertise. Some of the people in the lab are members of the company. Others are adventurers fascinated with this inexpensive, effective way to explore. All are united in the quest to do something awesome with technology.</p>

<p>OpenROV is what we get when the thirst for exploration blends with the open source movement. What a wonderful combination.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Managing Dotfiles]]></title>
    <link href="http://RayHightower.com/blog/2014/04/15/managing-dotfiles/"/>
    <updated>2014-04-15T17:13:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/04/15/managing-dotfiles</id>
    <content type="html"><![CDATA[<p>Dotfiles, the configuration files used by Unix-like machines, can become disorganized over time. Entropy rules! This article describes my recent attempt to bring order to dotfile chaos. The steps can be summarized as follows:</p>

<ul>
<li>Move the non-private dotfiles (dotfiles that will be viewed by others on Github) into a directory called <code>~/.dotfiles</code>.</li>
<li>From the <code>home</code> directory, create a symbolic link to each dotfile in the <code>~/.dotfiles</code> directory.</li>
<li>Use Git to manage the <code>~/.dotfiles</code> directory, and share it on GitHub.</li>
</ul>


<p>Dotfiles are normally hidden when you try to view them in the Mac OS X Finder. To view them from the command prompt, use <code>$ ls -al</code>.</p>

<!--more-->


<p>```bash
~/.dotfiles[master]$ ls -al
total 40
drwxr-xr-x   8 rth  staff   272 Apr 14 01:44 .
drwxr-xr-x+ 71 rth  staff  2414 Apr 14 02:12 ..
-rwxr-xr-x   1 rth  staff  3455 Apr 13 16:01 .bash_profile
drwxr-xr-x  14 rth  staff   476 Apr 14 02:25 .git
-rw-r&mdash;r&mdash;   1 rth  staff  1649 Apr 13 16:44 .gitk
-rw-r&mdash;r&mdash;   1 rth  staff  1760 Apr 13 16:10 .irbrc
-rw-r&mdash;r&mdash;   1 rth  staff   118 Aug 22  2013 .zprofile
-rw-r&mdash;r&mdash;   1 rth  staff   375 Apr 14 01:44 README.mdown</p>

<p>~/.dotfiles[master]$
```</p>

<p>The <a href="https://github.com/RayHightower/.dotfiles/blob/master/.bash_profile">.bash_profile</a> in this example has grown to include aliases, path specifications, and a script that shows the current Git branch as part of the command prompt. The file also contains two aliases useful for showing or hiding dotfiles in the Finder: <code>showdots</code> and <code>hidedots</code>.</p>

<h3>Putting Dotfiles in One Directory</h3>

<p>Dotfiles are normally created in the user&rsquo;s home directory. For organization purposes, I moved my non-private dotfiles into a directory called <code>.dotfiles</code>, listed above. Unix makes this easy. First, move to the home directory and create <code>~/.dotfiles</code>.</p>

<p>```bash
~$ cd ~</p>

<p>~$ mkdir .dotfiles</p>

<p>~$</p>

<p>```</p>

<p><em>Note: Dotfiles can sometimes include private information. If you don&rsquo;t want to share information in a particular dotfile, don&rsquo;t put it on GitHub!</em></p>

<p>In this example, we&rsquo;ll only move one file, <code>.bash_profile</code>.</p>

<p>```bash</p>

<p>~$ cd .dotfiles/</p>

<p>$ mv ../.bash_profile .</p>

<p>$</p>

<p>```</p>

<h3>Symbolic Links</h3>

<p>Symbolic links ensure that executables can find our dotfiles as needed.</p>

<p>```bash</p>

<p>$ cd ~</p>

<p>$ ln -s ~/.dotfiles/.bash_profile</p>

<p>$ ls -al
total 8
drwxr-xr-x   3 rth  staff   102 Apr 14 19:48 .
drwxr-xr-x+ 73 rth  staff  2482 Apr 14 19:47 ..
lrwxr-xr-x   1 rth  staff    34 Apr 14 19:48 .bash_profile &ndash;> /Users/rth/.dotfiles/.bash_profile</p>

<p>$</p>

<p>```</p>

<p>In the above example, we created a symbolic link called <code>.bash_profile</code> to the real <code>~/.dotfiles/.bash_profile</code> located in the <code>.dotfiles</code> directory. That way, any program that&rsquo;s looking for the <code>.bash_profile</code> file in the home directory will find what it needs, even though the file is somewhere else.</p>

<h3>Why Use Git to Manage Dotfiles?</h3>

<p>Git is a great tool for managing files that change over time. Dotfiles can change as we install new software or tweak our development environment. If we make a mistake, or if an installation script makes a mistake, we can use Git to roll back in history to a pre-mistake version of the dotfile.</p>

<h3>Don&rsquo;t Make All Dotfiles Public</h3>

<p>There are some dotfiles that you don&rsquo;t want to share publicly. For example, <code>.bash_history</code> contains all of the commands that have been executed in the shell. Do you really want the world that you sometimes <code>$ ssh myuserid@[embarassingdomainname].com</code>? Probably not. If you think that a dotfile might contain personal or confidential information, no need to broadcast it.</p>

<h3>Learning More About Dotfiles</h3>

<p>Most of my dotfiles, like <code>.bash_profile</code>, don&rsquo;t contain anything private. In fact, most of what I know about dotfiles has come from other developers via books, user groups, blogs, and spelunking through GitHub. Dotfile collections by <a href="https://github.com/hashrocket/dotmatrix">Hashrocket</a> and <a href="https://github.com/thoughtbot/dotfiles">Thoughtbot</a> are  especially good. My <code>~/.dotfiles</code> directory is available for public viewing on <a href="https://github.com/RayHightower/.dotfiles">GitHub</a>.</p>

<p>If you&rsquo;re doing something especially cool with your dotfiles, let&rsquo;s hear about it!</p>
]]></content>
  </entry>
  
</feed>
