<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RayHightower.com]]></title>
  <link href="http://RayHightower.com/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2013-11-20T18:03:23-06:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OS X and RubyMotion, Finishing Up]]></title>
    <link href="http://RayHightower.com/blog/2013/11/11/os-x-and-rubymotion-finishing-up/"/>
    <updated>2013-11-11T19:03:00-06:00</updated>
    <id>http://RayHightower.com/blog/2013/11/11/os-x-and-rubymotion-finishing-up</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/show-package-contents.png' width='' height='' alt='' title=''><span class='caption-text'></span></span>
There is something I neglected to cover in a previous blog post, <a href="http://RayHightower.com/blog/2013/11/01/building-an-os-x-app-with-rubymotion/">Building an OS X App With RubyMotion</a>. Once you&rsquo;ve written the OS X app, where do you find the executable, and how do you add it to the <code>Applications</code> folder on the Mac?</p>

<p>Long-time Mac enthusiasts may already know how to do this. The information is included here for completeness.</p>

<h3>Find, Drag, and Drop</h3>

<p>First thing to note: A Mac app named [random-app].app is actually a directory, even though it appears to be a file when viewed in the <code>Applications</code> folder. If you&rsquo;re curious, right-click on any app in the <code>Applications</code> folder and choose <code>Show Package Contents</code> from the speed menu.</p>

<!--more-->


<p>After compilation, RubyMotion puts all of the executables in the app&rsquo;s <code>build/</code> directory. Using Finder, drag the folder named <code>[your-app-name].app</code> into the <code>Applications</code> folder.</p>

<p>Or, if you prefer the command line…</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> <span class="o">[</span>root-directory-of-your-app<span class="o">]</span>
</span><span class='line'><span class="nv">$ </span>cp build/MacOSX-10.8-Development/<span class="o">[</span>your-app-name<span class="o">]</span>.app /Applications
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>It doesn&rsquo;t really matter whether we copy the file or move it.  RubyMotion creates a new one with every build, when we type <code>rake</code>.</p>

<h3>Launch at Login</h3>

<p>I want the EjectDisks utility to be always available, so it would be good to have it launch automatically at login. That behavior is managed in the <code>Users and Groups</code> preference pane, shown below:</p>

<p><span class='caption-wrapper'><img class='caption' src='http://RayHightower.com/images/launch-at-login.png' width='' height='' alt='' title=''><span class='caption-text'></span></span></p>

<p>Click the <code>+</code> sign, navigate to the app you want to launch at login time (in this case, EjectDisks) and select it. Done.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Portable Hack for Parallella]]></title>
    <link href="http://RayHightower.com/blog/2013/11/10/a-portable-hack-for-parallella/"/>
    <updated>2013-11-10T23:05:00-06:00</updated>
    <id>http://RayHightower.com/blog/2013/11/10/a-portable-hack-for-parallella</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper left'><img class='caption' src='http://RayHightower.com/images/parallella-portable.png' width='' height='' alt='Portability for Parallella-sized devices.' title='Portability for Parallella-sized devices.'><span class='caption-text'>Portability for Parallella-sized devices.</span></span>
<a href="http://RayHightower.com/blog/2013/05/22/beaglebone-black-running-ruby-on-rails/">Beaglebone Black</a>, <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">Raspberry Pi</a>, and <a href="http://RayHightower.com/blog/2013/06/22/preparing-for-parallella-64-cores-installing-go-on-mac-os-x/">Parallella</a> are three small, powerful Linux-based computers. But in order to make these devices truly portable, we need a way to carry a monitor and keyboard along. This article describes one hack that works.</p>

<h3>Inspiration in a Suitcase</h3>

<p>The HP 5036 Microprocessor Lab gave me my first exposure to assembler language. I was eighteen, working my first software internship, and loving every minute of it. When I devised ways to complete my <em>regular work</em> faster than management expected, I had some time on my hands. So I spent time learning assembler with the HP 5036.</p>

<!--more-->


<p><span class='caption-wrapper'><img class='caption' src='http://RayHightower.com/images/hp-5036.png' width='' height='' alt='HP 5036 Microprocessor Lab' title='HP 5036 Microprocessor Lab'><span class='caption-text'>HP 5036 Microprocessor Lab</span></span></p>

<p>The entire 5036 fits in a suitcase&hellip; how cool is that! Here&rsquo;s how the 5036 works:</p>

<ol>
<li>Start by writing assembler-level code by hand on paper.</li>
<li>Grab the reference book for the microprocessor running on the
board, Intel 8080.</li>
<li>For each assembler-level command, find the corresponding 2-digit
hexidecimal operation code.</li>
<li>Key the op code into the 5036 by hand.</li>
<li>Run the program.</li>
</ol>


<p>Working with the 5036 was addictive in a positive way. In a subsequent job, where I wrote assembler to drive hardware devices, I was ready.</p>

<h3>Portability Needed</h3>

<p>Fast forward a few decades. We now have the Raspberry Pi, BeagleBone Black, and Parallella. Wonderful devices with one flaw in common: No portability. That&rsquo;s when I had a flashback to my days with the 5036.</p>

<p>I bought a $35 technician box from Home Depot and I ripped out the insides. Micro Center had 720p LCD monitors on sale for $90, so I bought one of those. I didn&rsquo;t want to spend the extra bucks for a 1080p LCD because you never know how something like this might work out! Finally, I topped everything off with a $25 keyboard/trackpad combo from Amazon.  The result appears in the photo at the top of this article.</p>

<h3>Why?</h3>

<p>Why did I spend the time and money to assemble this kit? It&rsquo;s all about learning. Devs learn more when we interact with other devs &ndash; people who are learning some of the same things that we&rsquo;re wrestling with. And sometimes the things we need to learn are too new for books.</p>

<p>By carrying my Raspberry Pi, BeagleBone Black, and Parallella with me in a portable unit, I can share my experiences with other devs and learn more in the process. Everybody wins when that happens.</p>

<h3>Thanks SCNA!</h3>

<p>The organizers of <a href="http://scna.softwarecraftsmanship.org/">Software Craftsmanship North America (SCNA)</a> gave me the opportunity to present this story as a lightning talk at the conference. Slides are here:</p>

<center><script async class="speakerdeck-embed" data-id="b3558fd02cac0131cfc62a9baba32394" data-ratio="1.29456384323641" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script></center>


<p>Thank you SCNA! As I shared with the other devs at SCNA, I will gladly post my mistakes and <em>gotchas</em> here for people who want to build a unit like this. Let&rsquo;s build!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building an OS X App With RubyMotion]]></title>
    <link href="http://RayHightower.com/blog/2013/11/01/building-an-os-x-app-with-rubymotion/"/>
    <updated>2013-11-01T00:15:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/11/01/building-an-os-x-app-with-rubymotion</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/time-machine-backup-disks.png' width='' height='' alt='Redundancy rocks.' title='Redundancy rocks.'><span class='caption-text'>Redundancy rocks.</span></span>
<a href="http://RayHightower.com/blog/2012/10/29/building-ios-apps-with-ruby-motion/">RubyMotion</a>&rsquo;s OS X support enabled me to solve a small problem yesterday.  Here&rsquo;s the story.</p>

<h3>Background on Backup</h3>

<p>No matter how much money we spend on computers, the data we create is worth more. The best data protection employs several levels of redundancy.</p>

<p>My backup system starts with Apple&rsquo;s <a href="http://www.apple.com/findouthow/mac/#timemachinebasics">Time Machine</a>, which handles first level backups painlessly in the background. Time machine is even more effective when multiple disks are used. I like to combine that with online solutions. Redundancy is a good thing.</p>

<p>USB-attached drives work great with Time Machine. I found that Time Machine was inconsistent over WiFi, and when it failed, troubleshooting took too much time. That was a few years ago and things have probably improved since then. I&rsquo;ve never had to troubleshoot a USB-attached Time Machine drive. USB just works. Except when it doesn&rsquo;t. And that&rsquo;s where RubyMotion proved helpful.</p>

<!--more-->


<h3>Disconnecting USB in a Hurry</h3>

<p>My only problem with USB-attached drives comes when I need to leave my desk in a hurry. You may have seen this message before:</p>

<p><span class='caption-wrapper'><img class='caption' src='http://RayHightower.com/images/disk-not-ejected-properly.png' width='' height='' alt='In a hurry to eject?' title='In a hurry to eject?'><span class='caption-text'>In a hurry to eject?</span></span></p>

<p>All three of my USB drives are attached through a single USB hub. Yanking the cable while running for a meeting is… bad! Forgetting to eject even one of the USB drives is also bad.</p>

<p>I solved the problem about a year ago by writing a command line tool that ejects all three drives with one double-click of an icon. Yesterday I deciced to improve my command line tool with RubyMotion.</p>

<h3>Ejecting in a Hurry</h3>

<p><code>EjectDisks</code> is a simple OS X program written with the RubyMotion toolchain for Mac OS X. It uses the <code>osx-status-bar-app-template</code> gem created by <a href="https://github.com/kickcode/osx-status-bar-app-template">Elliott Draper</a>. Here&rsquo;s a 10-second demo.</p>

<center><iframe name="eject-disks-osx" src="http://RayHightower.com//player.vimeo.com/video/78349497" width="560" height="315" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></center>


<h3>The Code</h3>

<p>The latest version of the EjectDisk code is on <a href="https://github.com/RayHightower/EjectDisks">GitHub</a>. The <code>app_delegate.rb</code> file appears below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AppDelegate</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:status_menu</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">applicationDidFinishLaunching</span><span class="p">(</span><span class="n">notification</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@app_name</span> <span class="o">=</span> <span class="no">NSBundle</span><span class="o">.</span><span class="n">mainBundle</span><span class="o">.</span><span class="n">infoDictionary</span><span class="o">[</span><span class="s1">&#39;CFBundleDisplayName&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@status_menu</span> <span class="o">=</span> <span class="no">NSMenu</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@status_item</span> <span class="o">=</span> <span class="no">NSStatusBar</span><span class="o">.</span><span class="n">systemStatusBar</span><span class="o">.</span><span class="n">statusItemWithLength</span><span class="p">(</span><span class="no">NSVariableStatusItemLength</span><span class="p">)</span><span class="o">.</span><span class="n">init</span>
</span><span class='line'>    <span class="vi">@status_item</span><span class="o">.</span><span class="n">setMenu</span><span class="p">(</span><span class="vi">@status_menu</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@status_item</span><span class="o">.</span><span class="n">setHighlightMode</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@status_item</span><span class="o">.</span><span class="n">setTitle</span><span class="p">(</span><span class="vi">@app_name</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="vi">@status_menu</span><span class="o">.</span><span class="n">addItem</span> <span class="n">createMenuItem</span><span class="p">(</span><span class="s2">&quot;About </span><span class="si">#{</span><span class="vi">@app_name</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="s1">&#39;orderFrontStandardAboutPanel:&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@status_menu</span><span class="o">.</span><span class="n">addItem</span> <span class="n">createMenuItem</span><span class="p">(</span><span class="s2">&quot;Custom Action&quot;</span><span class="p">,</span> <span class="s1">&#39;pressAction&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@status_menu</span><span class="o">.</span><span class="n">addItem</span> <span class="n">createMenuItem</span><span class="p">(</span><span class="s2">&quot;Eject Three Disks&quot;</span><span class="p">,</span> <span class="s1">&#39;ejectThreeDisks&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@status_menu</span><span class="o">.</span><span class="n">addItem</span> <span class="n">createMenuItem</span><span class="p">(</span><span class="s2">&quot;Say Something&quot;</span><span class="p">,</span> <span class="s1">&#39;sayDroid&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@status_menu</span><span class="o">.</span><span class="n">addItem</span> <span class="n">createMenuItem</span><span class="p">(</span><span class="s2">&quot;Sing&quot;</span><span class="p">,</span> <span class="s1">&#39;singSomething&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@status_menu</span><span class="o">.</span><span class="n">addItem</span> <span class="n">createMenuItem</span><span class="p">(</span><span class="s2">&quot;Greetings&quot;</span><span class="p">,</span> <span class="s1">&#39;greetings&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@status_menu</span><span class="o">.</span><span class="n">addItem</span> <span class="n">createMenuItem</span><span class="p">(</span><span class="s2">&quot;Quit&quot;</span><span class="p">,</span> <span class="s1">&#39;terminate:&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">createMenuItem</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="n">action</span><span class="p">)</span>
</span><span class='line'>    <span class="no">NSMenuItem</span><span class="o">.</span><span class="n">alloc</span><span class="o">.</span><span class="n">initWithTitle</span><span class="p">(</span><span class="nb">name</span><span class="p">,</span> <span class="ss">action</span><span class="p">:</span> <span class="n">action</span><span class="p">,</span> <span class="ss">keyEquivalent</span><span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">pressAction</span>
</span><span class='line'>    <span class="n">alert</span> <span class="o">=</span> <span class="no">NSAlert</span><span class="o">.</span><span class="n">alloc</span><span class="o">.</span><span class="n">init</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">setMessageText</span> <span class="s2">&quot;Action triggered from status bar menu&quot;</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">addButtonWithTitle</span> <span class="s2">&quot;OK&quot;</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">runModal</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">sayDroid</span>
</span><span class='line'>    <span class="sx">%x(say -v cello droid)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">singSomething</span>
</span><span class='line'>    <span class="sx">%x(say -v cello da da da da da da da da da da da da da da da da da da da da da da da da da da)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">greetings</span>
</span><span class='line'>    <span class="sx">%x(say -v cello Greetings to the members of Chippewa Valley Code Camp &amp;)</span>
</span><span class='line'>    <span class="n">alert</span> <span class="o">=</span> <span class="no">NSAlert</span><span class="o">.</span><span class="n">alloc</span><span class="o">.</span><span class="n">init</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">setMessageText</span> <span class="s2">&quot;Greetings to the members of Chippewa Valley Code Camp!&quot;</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">addButtonWithTitle</span> <span class="s2">&quot;OK&quot;</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">runModal</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">ejectThreeDisks</span>
</span><span class='line'>    <span class="n">alert</span> <span class="o">=</span> <span class="no">NSAlert</span><span class="o">.</span><span class="n">alloc</span><span class="o">.</span><span class="n">init</span>
</span><span class='line'>    <span class="n">response</span> <span class="o">=</span> <span class="sx">%x(/usr/sbin/diskutil eject SiiGBlack)</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">response</span> <span class="o">+=</span> <span class="sx">%x(/usr/sbin/diskutil eject Ultra3TB)</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">response</span> <span class="o">+=</span> <span class="sx">%x(/usr/sbin/diskutil eject WDSilver)</span> <span class="o">+</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">setMessageText</span> <span class="n">response</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">addButtonWithTitle</span> <span class="s2">&quot;OK&quot;</span>
</span><span class='line'>    <span class="n">alert</span><span class="o">.</span><span class="n">runModal</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Next Steps</h3>

<p>Not everything in the EjectDisks tool is business-related. Do we really need to include a greeting to the members of the <a href="http://chippewavalleycodecamp.com/">Chippewa Valley Code Camp</a>?  Yes, we do!</p>

<p>On the serious side, the app should handle disk ejection as a background process. It&rsquo;s not good to tie up the system for a simple task. Look for a forked process in a future version of the app.</p>

<p><em>Update: This article should have included instructions on how to run the executable on any Mac OS X system without having RubyMotion installed. The omission is corrected in a later blog post, <a href="http://RayHightower.com/blog/2013/11/11/os-x-and-rubymotion-finishing-up/">OS X and RubyMotion, Finishing Up</a>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[:TOhtml - Using Vim Code Snippets in Keynote Presentations]]></title>
    <link href="http://RayHightower.com/blog/2013/10/31/tohtml-using-vim-code-snippets-in-keynote-presentations/"/>
    <updated>2013-10-31T16:13:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/10/31/tohtml-using-vim-code-snippets-in-keynote-presentations</id>
    <content type="html"><![CDATA[<p>While finishing my presentation for the upcoming <a href="http://chippewavalleycodecamp.com/">Chippewa Valley Code Camp</a>, I decided to add some blocks of code to my slides. I forgot the name of the tool I used for my last slide deck, and it took several minutes of Google-fu to find it.</p>

<p>Google led me back to <code>:TOhtml</code>. Whew! I&rsquo;m documenting <code>:TOhtml</code> here to avoid wasting time with a future search.</p>

<!--more-->


<h3>Start With a Block of Code</h3>

<p>Fire up Vim and drop the block of code you want to convert into a new Vim buffer. In this example, I&rsquo;ve created a sample <a href="http://RayHightower.com/blog/2012/10/29/building-ios-apps-with-ruby-motion/">RubyMotion</a> OS X app, and I want to show the contents of the Rakefile.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># -*- coding: utf-8 -*-</span>
</span><span class='line'><span class="vg">$:</span><span class="o">.</span><span class="n">unshift</span><span class="p">(</span><span class="s2">&quot;/Library/RubyMotion/lib&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;motion/project/template/osx&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">begin</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;bundler&#39;</span>
</span><span class='line'>  <span class="no">Bundler</span><span class="o">.</span><span class="n">require</span>
</span><span class='line'><span class="k">rescue</span> <span class="no">LoadError</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ss">Motion</span><span class="p">:</span><span class="ss">:Project</span><span class="o">::</span><span class="no">App</span><span class="o">.</span><span class="n">setup</span> <span class="k">do</span> <span class="o">|</span><span class="n">app</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># Use `rake config&#39; to see complete project settings.</span>
</span><span class='line'>  <span class="n">app</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s1">&#39;EjectDisks&#39;</span>
</span><span class='line'>  <span class="n">app</span><span class="o">.</span><span class="n">info_plist</span><span class="o">[</span><span class="s1">&#39;LSUIElement&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, visually select the lines you want to convert. You can do this with shift-V, or with the (gasp!) mouse. Or if you want to convert the entire file, enter <code>:TOhtml</code> in the command area. Vim will convert the highlighted text into HTML in a new buffer. Here&rsquo;s the result:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;content-type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=UTF-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;title&gt;</span>~/Code/Ruby/RubyMotion/EjectDisks/Rakefile.html<span class="nt">&lt;/title&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;Generator&quot;</span> <span class="na">content=</span><span class="s">&quot;Vim/7.4&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;plugin-version&quot;</span> <span class="na">content=</span><span class="s">&quot;vim7.4_v1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;syntax&quot;</span> <span class="na">content=</span><span class="s">&quot;ruby&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;settings&quot;</span> <span class="na">content=</span><span class="s">&quot;number_lines,use_css,no_foldcolumn,expand_tabs,line_ids,prevent_copy=&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;colorscheme&quot;</span> <span class="na">content=</span><span class="s">&quot;darkspectrum&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="o">&lt;!</span><span class="nt">--</span>
</span><span class='line'><span class="nt">pre</span> <span class="p">{</span> <span class="k">font-family</span><span class="o">:</span> <span class="k">monospace</span><span class="p">;</span> <span class="k">color</span><span class="o">:</span> <span class="m">#efefef</span><span class="p">;</span> <span class="k">background-color</span><span class="o">:</span> <span class="m">#2a2a2a</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nt">body</span> <span class="p">{</span> <span class="k">font-family</span><span class="o">:</span> <span class="k">monospace</span><span class="p">;</span> <span class="k">color</span><span class="o">:</span> <span class="m">#efefef</span><span class="p">;</span> <span class="k">background-color</span><span class="o">:</span> <span class="m">#2a2a2a</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="o">*</span> <span class="p">{</span> <span class="k">font-size</span><span class="o">:</span> <span class="m">1em</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nc">.String</span> <span class="p">{</span> <span class="k">color</span><span class="o">:</span> <span class="m">#fce94f</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nc">.Statement</span> <span class="p">{</span> <span class="k">color</span><span class="o">:</span> <span class="m">#ffffff</span><span class="p">;</span> <span class="k">font-weight</span><span class="o">:</span> <span class="k">bold</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nc">.PreProc</span> <span class="p">{</span> <span class="k">color</span><span class="o">:</span> <span class="m">#ffffff</span><span class="p">;</span> <span class="k">font-weight</span><span class="o">:</span> <span class="k">bold</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nc">.LineNr</span> <span class="p">{</span> <span class="k">color</span><span class="o">:</span> <span class="m">#535353</span><span class="p">;</span> <span class="k">background-color</span><span class="o">:</span> <span class="m">#202020</span><span class="p">;</span> <span class="k">padding-bottom</span><span class="o">:</span> <span class="m">1px</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nc">.Comment</span> <span class="p">{</span> <span class="k">color</span><span class="o">:</span> <span class="m">#8a8a8a</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nc">.Type</span> <span class="p">{</span> <span class="k">color</span><span class="o">:</span> <span class="m">#8ae234</span><span class="p">;</span> <span class="k">font-weight</span><span class="o">:</span> <span class="k">bold</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nc">.Special</span> <span class="p">{</span> <span class="k">color</span><span class="o">:</span> <span class="m">#e9b96e</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nc">.Identifier</span> <span class="p">{</span> <span class="k">color</span><span class="o">:</span> <span class="m">#729fcf</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nc">.Constant</span> <span class="p">{</span> <span class="k">color</span><span class="o">:</span> <span class="m">#ef5939</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="nt">--</span><span class="o">&gt;</span>
</span><span class='line'><span class="nt">&lt;/style&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&#39;text/javascript&#39;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="c">&lt;!--</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* function to open any folds containing a jumped-to line before jumping to it */</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">JumpToLine</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">lineNum</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">lineNum</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">lineNum</span> <span class="o">=</span> <span class="nx">lineNum</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="cm">/* strip off &#39;#&#39; */</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">lineNum</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;L&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">lineNum</span> <span class="o">=</span> <span class="s1">&#39;L&#39;</span><span class="o">+</span><span class="nx">lineNum</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">lineElem</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">lineNum</span><span class="p">);</span>
</span><span class='line'>  <span class="cm">/* Always jump to new location even if the line was hidden inside a fold, or</span>
</span><span class='line'><span class="cm">   * we corrected the raw number to a line ID.</span>
</span><span class='line'><span class="cm">   */</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">lineElem</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">lineElem</span><span class="p">.</span><span class="nx">scrollIntoView</span><span class="p">(</span><span class="kc">true</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="s1">&#39;onhashchange&#39;</span> <span class="k">in</span> <span class="nb">window</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nb">window</span><span class="p">.</span><span class="nx">onhashchange</span> <span class="o">=</span> <span class="nx">JumpToLine</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">--&gt;</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body</span> <span class="na">onload=</span><span class="s">&#39;JumpToLine();&#39;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;pre</span> <span class="na">id=</span><span class="s">&#39;vimCodeElement&#39;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L1&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span> 1 <span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Comment&quot;</span><span class="nt">&gt;</span># -*- coding: utf-8 -*-<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L2&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span> 2 <span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Identifier&quot;</span><span class="nt">&gt;</span>$:<span class="nt">&lt;/span&gt;</span>.unshift(<span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Special&quot;</span><span class="nt">&gt;</span><span class="ni">&amp;quot;</span><span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;String&quot;</span><span class="nt">&gt;</span>/Library/RubyMotion/lib<span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Special&quot;</span><span class="nt">&gt;</span><span class="ni">&amp;quot;</span><span class="nt">&lt;/span&gt;</span>)
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L3&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span> 3 <span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;PreProc&quot;</span><span class="nt">&gt;</span>require<span class="nt">&lt;/span&gt;</span> <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Special&quot;</span><span class="nt">&gt;</span>&#39;<span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;String&quot;</span><span class="nt">&gt;</span>motion/project/template/osx<span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Special&quot;</span><span class="nt">&gt;</span>&#39;<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L4&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span> 4 <span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L5&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span> 5 <span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Statement&quot;</span><span class="nt">&gt;</span>begin<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L6&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span> 6 <span class="nt">&lt;/span&gt;</span>  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;PreProc&quot;</span><span class="nt">&gt;</span>require<span class="nt">&lt;/span&gt;</span> <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Special&quot;</span><span class="nt">&gt;</span>&#39;<span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;String&quot;</span><span class="nt">&gt;</span>bundler<span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Special&quot;</span><span class="nt">&gt;</span>&#39;<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L7&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span> 7 <span class="nt">&lt;/span&gt;</span>  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Type&quot;</span><span class="nt">&gt;</span>Bundler<span class="nt">&lt;/span&gt;</span>.require
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L8&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span> 8 <span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Statement&quot;</span><span class="nt">&gt;</span>rescue<span class="nt">&lt;/span&gt;</span> <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Type&quot;</span><span class="nt">&gt;</span>LoadError<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L9&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span> 9 <span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Statement&quot;</span><span class="nt">&gt;</span>end<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L10&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span>10 <span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L11&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span>11 <span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Type&quot;</span><span class="nt">&gt;</span>Motion<span class="nt">&lt;/span&gt;</span>::<span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Type&quot;</span><span class="nt">&gt;</span>Project<span class="nt">&lt;/span&gt;</span>::<span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Type&quot;</span><span class="nt">&gt;</span>App<span class="nt">&lt;/span&gt;</span>.<span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Statement&quot;</span><span class="nt">&gt;</span>setup<span class="nt">&lt;/span&gt;</span> <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Statement&quot;</span><span class="nt">&gt;</span>do<span class="nt">&lt;/span&gt;</span> |<span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Identifier&quot;</span><span class="nt">&gt;</span>app<span class="nt">&lt;/span&gt;</span>|
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L12&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span>12 <span class="nt">&lt;/span&gt;</span>  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Comment&quot;</span><span class="nt">&gt;</span># Use `rake config&#39; to see complete project settings.<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L13&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span>13 <span class="nt">&lt;/span&gt;</span>  app.name = <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Special&quot;</span><span class="nt">&gt;</span>&#39;<span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;String&quot;</span><span class="nt">&gt;</span>EjectDisks<span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Special&quot;</span><span class="nt">&gt;</span>&#39;<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L14&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span>14 <span class="nt">&lt;/span&gt;</span>  app.info_plist[<span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Special&quot;</span><span class="nt">&gt;</span>&#39;<span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;String&quot;</span><span class="nt">&gt;</span>LSUIElement<span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Special&quot;</span><span class="nt">&gt;</span>&#39;<span class="nt">&lt;/span&gt;</span>] = <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;Constant&quot;</span><span class="nt">&gt;</span>true<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;span</span> <span class="na">id=</span><span class="s">&quot;L15&quot;</span> <span class="na">class=</span><span class="s">&quot;LineNr&quot;</span><span class="nt">&gt;</span>15 <span class="nt">&lt;/span&gt;&lt;span</span> <span class="na">class=</span><span class="s">&quot;Statement&quot;</span><span class="nt">&gt;</span>end<span class="nt">&lt;/span&gt;</span>
</span><span class='line'><span class="nt">&lt;/pre&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span><span class='line'><span class="c">&lt;!-- vim: set foldmethod=manual : --&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Save the new buffer as <code>~/Desktop/convertedstuff.html</code> or any other file name that you choose. In this case, I chose:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>:w ~/Desktop/convertedrakefile.html
</span></code></pre></td></tr></table></div></figure>


<p>Open the converted file in a web browser.</p>

<p><span class='caption-wrapper middle'><img class='caption' src='http://RayHightower.com/images/rakefile-browser.png' width='' height='' alt='Rakefile in Chrome.' title='Rakefile in Chrome.'><span class='caption-text'>Rakefile in Chrome.</span></span></p>

<p>Copy and paste the text from the browser into Keynote.</p>

<h3>Washed Out Code?</h3>

<p>If the code looks washed out when you paste it into Keynote, you have a few alternatives:</p>

<ul>
<li>Start with a different theme in Vim at the beginning, or</li>
<li>Darken/lighten the background in Keynote by using the Keynote inspector.</li>
</ul>


<h3>The Finished Slide</h3>

<p>Here&rsquo;s what the finished product looks like. All the clarity of syntax-highlighted text. You can even adjust font size at will using the Keynote inspector. All set for the presentation.</p>

<p><span class='caption-wrapper middle'><img class='caption' src='http://RayHightower.com/images/osxfinished.png' width='' height='' alt='The final snippet, in Keynote.' title='The final snippet, in Keynote.'><span class='caption-text'>The final snippet, in Keynote.</span></span></p>

<h3>Easier Way?</h3>

<p>Can this process be simplified? If you know the answer, feel free to mention it in the comments below. Thanks!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Youth Program Recap]]></title>
    <link href="http://RayHightower.com/blog/2013/10/30/youth-program-recap-windycityrails-2013/"/>
    <updated>2013-10-30T17:22:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/10/30/youth-program-recap-windycityrails-2013</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/arduino-youth-program.png' width='' height='' alt='Arduino' title='Arduino'><span class='caption-text'>Arduino</span></span>
Planet Earth is facing a shortage of people who make things. People like scientists, software developers, architects, and  engineers. People who use their brains and hands to make greatness happen.</p>

<p>To increase the world&rsquo;s supply of problem solvers, the organizers of <a href="http://windycityrails.org">WindyCityRails</a> partnered with a group of energetic college students, the founders of <a href="http://hackthemonkey.com">Monkey Bars</a>. The result: Together, we launched the first WindyCityRails Youth Program featuring the Arduino microcontroller.</p>

<!--more-->


<h3>Video Summary</h3>

<p>Here&rsquo;s the launch video:</p>

<center><iframe src="http://RayHightower.com//player.vimeo.com/video/74022351" width="500" height="281" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></center>


<h3>Results</h3>

<p>The youth who participated in the program were engaged and enthusiastic. The Monkey Bars team introduced the youth to the Arduino micro-controller and related hardware.</p>

<p>At the end of the program, parents arrived to take their kids home, and the kids were reluctant to leave! They were absorbed in their Arduino projects. Even better, friendships formed between the youth participants.</p>

<p>It&rsquo;s exciting to think about the new companies that may have been launched that day!</p>

<h3>Next Year</h3>

<p>Planning for next year&rsquo;s WindyCityRails, including the Youth Program, is currently underway. If there are things you&rsquo;d like to see in next year&rsquo;s program, feel free to <a href="http://windycityrails.org/contact">contact the WindyCityRails organizers</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You Can Build Things]]></title>
    <link href="http://RayHightower.com/blog/2013/09/02/you-can-build-things/"/>
    <updated>2013-09-02T20:24:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/09/02/you-can-build-things</id>
    <content type="html"><![CDATA[<p>From a video interview with Steve Jobs:</p>

<blockquote><p>When you grow up you tend to get told that the world is the way it is, and your life is just to live your life inside the world. Try not to bash into the walls too much. Try to have a nice family life. Have fun. Save a little money.</p>

<p>That&rsquo;s a very limited life. Life can be much broader once you discover one simple fact.<!--more--></p>

<p>Everything around you that you call life was made up by people who are no smarter than you. And you can change it. You can influence it. You can build other things that other people can use.</p>

<p>Once you learn that, you&rsquo;ll never be the same again.</p></blockquote>

<p>Check out the video:</p>

<center><iframe width="560" height="315" src="http://RayHightower.com//www.youtube.com/embed/GHAJhosbWiM?rel=0" frameborder="0" allowfullscreen></iframe></center>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Madison Ruby 2013]]></title>
    <link href="http://RayHightower.com/blog/2013/08/25/madison-ruby-2013/"/>
    <updated>2013-08-25T01:14:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/08/25/madison-ruby-2013</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/madison-ruby.png' width='' height='' alt='Madison Ruby 2011 T-Shirt Design by Mike Rohde' title='Madison Ruby 2011 T-Shirt Design by Mike Rohde'><span class='caption-text'>Madison Ruby 2011 T-Shirt Design by Mike Rohde</span></span>
<a href="http://madisonruby.com">Madison Ruby</a> 2013 was held this weekend. The conference attracts smart, intellectually curious people who are thirsty to learn more.</p>

<p>By the way, Madison Ruby was a lot of fun, too!</p>

<h3>Speakers: Impressive and Accessible</h3>

<p>First, lets cover the obvious high points so we can focus on those things that make Madison Ruby unique. Organizers <a href="https://twitter.com/jremsikjr">Jim</a> &amp; <a href="https://twitter.com/JenRemsik">Jen Remsik</a> have solidified their reputation for choosing engaging, well-prepared speakers. The Remsik network of speakers includes accomplished developers from around the world. Many are published authors. Some, like <a href="http://madisoncircusspace.com/">Danielle Lee</a> and <a href="https://twitter.com/marteeeen">Martin Atkins</a>, excel in fields outside of software development.</p>

<!--more-->


<p>What the presenters have in common: All are high achievers. All are inspiring. All take time to stick around after their time on stage to interact with attendees. That kind of interaction makes the Madison Ruby community work.</p>

<h3>Community in Madison</h3>

<p>Madison Ruby is unique in the way it brings the local community into the event. Local business and community leaders speak at the conference. The local leaders are enthusiastic about Madison and they engage attendees. One year, a farmer shared her experience growing up in a cheese-producing family business. This year, a biomedical engineering graduate of the University of Wisconsin encouraged the audience to build our creative muscles by having fun. She drove the point home with a hula-hoop demonstration, followed with a <a href="http://madisoncircusspace.com/classes/german-wheel/">German Wheel</a> performance by a colleague.</p>

<p>People from other worlds speaking at a software conference&hellip; it works.</p>

<h3>Meal Time</h3>

<p>Lunch was served by the entire Madison restaurant community. Gift certificates were supplied by Engine Yard, and the certificates were redeemable for meals at local restaurants.  What a wonderful way to put serendipity to work! Attendees who just met formed clusters of lunch parties on a whim. The conversations were rich.</p>

<h3>After-Hours Gatherings</h3>

<p>Thursday night&rsquo;s gathering, <a href="http://hypeharvest.com/">Hype Harvest</a>, had elements of a party but it was so much more. Hype Harvest was held on the roof of the Madison Museum of Modern Art, and it served multiple purposes. First, to raise funds for Nairobi Dev School, founded by <a href="http://www.cnn.com/2013/07/17/tech/teenager-hacker-school-africa-google">Martha Chumo</a>, a 19-year-old software developer in Nairobi, Kenya. Second, to give everyone a taste of the presenters to come. Third, to let the attendees gather, renew old friendships, and begin new ones.</p>

<p>Friday night&rsquo;s party was held at <a href="http://bendyworks.com">Bendyworks</a>. An outdoor concert ran concurrently in the middle of the street next to the office. Bendyworks guests had the best seats around because the second floor office sits right above the musical stage.</p>

<h3>Madison Ruby and My Brother</h3>

<p>As an organizer of WindyCityRails, my relationship with Madison Ruby reminds me of my relationship with my brother, <a href="http://motoringventures.com">Edward Hightower</a>, while we were growing up. Edward and I are one year apart, and we competed aggressively in every way: On the swim team, in the <a href="http://troop534.org">Boy Scouts</a>, in academics&hellip; you name it. Through the competition, we learned to love and respect each other. My brother Edward is one of my closest friends. That doesn&rsquo;t always happen with family!</p>

<p>Madison Ruby competes with WindyCityRails. At the same time, I enjoy the trip to Madison because I get so much from the experience. Congratulations to the Madison Ruby organizer team for running a great event three years in a row. I plan to return next year.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Age vs. Ability]]></title>
    <link href="http://RayHightower.com/blog/2013/08/05/age-vs-ability/"/>
    <updated>2013-08-05T06:34:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/08/05/age-vs-ability</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/Benjamin-Franklin.jpg' width='' height='' alt='Benjamin Franklin: Statesman & Scientist' title='Benjamin Franklin: Statesman & Scientist'><span class='caption-text'>Benjamin Franklin: Statesman &amp; Scientist</span></span>
Age has little to do with ability. Every profession has examples of people who achieve goals even though others consider them <em>too young</em> or <em>too old</em>. People who excel in the face of stereotypes are exciting to watch.</p>

<p><em>The Wall Street Journal</em> listed some examples in a 1980s-era ad for United Technologies Corporation.</p>

<!--more-->


<blockquote><p>It&rsquo;s what you do &ndash; not when you do it.</p>

<ul>
<li>Ted Williams, at age 42, slammed a home run in his last official at bat.</li>
<li>Mickey Mantle, age 20, hit 23 home runs in his first full year in the major leagues.</li>
<li>Golda Meir was 71 when she became Prime Minister of Israel.</li>
<li>William Pitt II was 24 when he became Prime Minister of Great Britain.</li>
<li>George Bernard Shaw was 94 when one of his plays was first produced.</li>
<li>Mozart was just seven when his first composition was published.</li>
<li>Now, how about this? Benjamin Franklin was a newspaper columnist at 16, a framer of The United States Constitution at 81, and a scientist throughout his life.</li>
</ul>


<p>You&rsquo;re never too young or too old if you&rsquo;ve got talent. Let&rsquo;s recognize that age has little to do with ability.</p></blockquote>

<p>Now&hellip; let&rsquo;s get back to work!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why We Need STEM]]></title>
    <link href="http://RayHightower.com/blog/2013/07/29/why-we-need-stem/"/>
    <updated>2013-07-29T00:22:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/29/why-we-need-stem</id>
    <content type="html"><![CDATA[<p><a href="http://ignitechi.org">Ignite Chicago</a> is an evening of 5-minute talks presented by speakers who want to inspire others. Each speaker is allowed twenty slides, and the slides advance automatically every fifteen seconds. The Ignite organizers asked me to present <em>Why We Need STEM</em> at <a href="http://1871.com">1871</a>. I&rsquo;ll post the video when it becomes available. For now, check out the slides&hellip;</p>

<!-- more -->


<center><script async class="speakerdeck-embed" data-id="4c328420da3d01301487425a5f060967" data-ratio="1.29456384323641" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script></center>


<p>Thank you Ignite Chicago organizers (<a href="http://www.goteampete.com">Pete Aiello</a> and <a href="http://clairelew.com">Claire Lew</a>) for the invitation and for hosting a great event.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Petascale Tools Workshop 2013]]></title>
    <link href="http://RayHightower.com/blog/2013/07/19/petascale-tools-workshop-2013/"/>
    <updated>2013-07-19T02:12:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/19/petascale-tools-workshop-2013</id>
    <content type="html"><![CDATA[<p>The <a href="http://www.paradyn.org/CSCADS2013/index.html">Petascale Tools Workshop</a> is for computer scientists who create tools that enable apps to run efficiently on the world&rsquo;s fastest supercomputers. Supercomputer performance is measured in petaflops: 10<sup><sup>15</sup></sup> floating point operations per second. That&rsquo;s blazing speed, thousands of times faster than the fastest MacBook Pro.</p>

<!--more-->


<p><a href="http://WisdomGroup.com">WisdomGroup</a> was invited to attend the workshop because we have a client client, <a href="http://www.wisdomgroup.com/case-studies/texas-am-university/">Texas A &amp; M University</a>, operating in the high performance computing (HPC) space. As the only non-PhD in the room, I was given a chance to exercise Pat Metheny&rsquo;s <a href="http://RayHightower.com/blog/2013/07/17/pat-metheny-be-the-worst/">be-the-worst</a> philosophy in the extreme. The result: I learned things that will help WisdomGroup to deliver better solutions for our clients, especially the TAMU team.</p>

<h3>One Megawatt = $1,000,000.00</h3>

<p>As with other disciplines of engineering, supercomputer design is all about managing trade-offs. If you increase the clock speed, how will that affect your electrical bill? If you increase the size of the cache, how much more will you spend on hardware?</p>

<p>Every Petascale Workshop presenter highlighted the toughest constraint: The cost of electrical power. High performance computers gulp electricity. The wattage numbers were all very abstract to me until one presenter layed out a direct one-to-one correspondence between electricity and money. <em>One megawatt of power used over the course of a year costs one million dollars.</em></p>

<p>Express a constraint in terms of money, and the abstractions melt away.</p>

<p>The debate between the scientists was vigorous yet respectful. After hearing the 1-to-1 rule of thumb, one audience member remarked, &ldquo;I know how to genererate a megawatt for only $865,000.&rdquo; He then outlined his solution, a combination of coal, fossil fuels, and natural gas that would achieve the reduction. The more important point: Electricity is expensive.</p>

<h3>Re-Framing the Power Problem</h3>

<p>There is another way to look at the power problem. Consider it from the perspective of performance, not power. Here&rsquo;s how one presenter put it: No matter where we build a supercomputer, we will only have a limited amount of power. Let&rsquo;s look at the maximum available power as a constraint and go from there.</p>

<p>Rubyists are familiar with the saying &#34;<a href="http://gettingreal.37signals.com/ch03_Embrace_Constraints.php">constraints are liberating</a>&#34;, popularized by 37signals. Since power limitations are real constraints, our next step is to figure out how to extract the best results allowed within the constraints.</p>

<h3>Top Five</h3>

<p>Supercomputer scientists are as competitive as olympic athletes. As of June 2013, the five fastest machines in the world are:</p>

<center>
<table class="table table-condensed">
    <thead>
    <tr>
        <th width="50">Rank</th>
        <th width="75">Site</th>
        <th width="100" style="text-align: right;">Cores</th>
        <th width="75" style="text-align: right;">Rmax (PF/s)</th>
        <th width="75" style="text-align: right;">Power (MW)</th>
    </tr>
    </thead>

    <tr class="sublist odd">
        <td><span class="badge">1</span></td>
        <td>China</td>
        <td style="text-align: right;">3,120,000</td>
        <td style="text-align: right;">33.9</td>
        <td style="text-align: right;">17.8</td>
    </tr>

    <tr class="sublist even">
        <td><span class="badge">2</span></td>
        <td>USA</td>
        <td style="text-align: right;">560,640</td>
        <td style="text-align: right;">17.5</td>
        <td style="text-align: right;">8.2</td>
    </tr>

    <tr class="sublist odd">
        <td><span class="badge">3</span></td>
        <td>USA</td>
        <td style="text-align: right;">1,572,864</td>
        <td style="text-align: right;">17.2</td>
        <td style="text-align: right;">7.9</td>
    </tr>

    <tr class="sublist even">
        <td><span class="badge">4</span></td>
        <td>Japan</td>
        <td style="text-align: right;">705,024</td>
        <td style="text-align: right;">10.5</td>
        <td style="text-align: right;">12.6</td>
    </tr>

    <tr class="sublist odd">
        <td><span class="badge">5</span></td>
        <td>USA</td>
        <td style="text-align: right;">786,432</td>
        <td style="text-align: right;">8.6</td>
        <td style="text-align: right;">3.9</td>
    </tr>
</table>
</center>


<p>&nbsp;<br/>
Scientists determine Rmax by running the <a href="http://en.wikipedia.org/wiki/LINPACK_benchmarks">LINPACK</a> benchmark. <a href="http://top500.org">Top500.org</a> has more information about the fastest
machines.</p>

<h3>Digging Deeper</h3>

<p>Some of the biggest performance gains can be realized through more efficient software. Most supercomputers run some distribution of Linux. Some teams of researchers focus on ways to optimize the Linux kernel for supercomputing.</p>

<p>Optimization is not a one-size-fits all process. The scientists need to consder the type of applications being run, percentage of time spent on I/O, efficiency of algorithms, and so on. Each potential optimization choice is like a node on an ever expanding tree. The choices are endless, and the seasoned expert will know where to focus for the best results.</p>

<p>In the Ruby world, we might use tools like <a href="http://newrelic.com">New Relic</a> or <a href="http://codeclimate.com">Code Climate</a> to identify hot spots in our code, places where re-factoring can reduce CPU utilization or improve I/O. HPC tools tend to be highly customizable because the users are intimately familar with their own hardware. During a lunch conversation, one team of scientists shared how they suspected a defect in hardware counters used to measure the behavior of a supercomputer under study. The instincts of the scientists proved correct, and the errant counters were replaced.</p>

<h3>Conclusion</h3>

<p>When smart people challenge each other to grow, great things happen. The scientists at the Petascale Tools Workshop were clearly helping each other to grow. The next few years in supercomputing will be exciting!</p>

<h3>Acknowledgements</h3>

<p>I am grateful to the organizers of the Petascale Tools Workshop for hosting the event, and to the TAMU team for extending the invitation. Thank you both!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pat Metheny: Be the Worst]]></title>
    <link href="http://RayHightower.com/blog/2013/07/17/pat-metheny-be-the-worst/"/>
    <updated>2013-07-17T07:58:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/17/pat-metheny-be-the-worst</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/PatMethenyGroup.jpg" width="400" height="400"
align="right" alt="Pat Metheny: Be the Worst" title="Pat Metheny: Be the Worst" >
Pat Metheny encourages musicians to &ldquo;be the worst&rdquo; in whatever band they choose to join. Of course, he does not mean to play poorly.</p>

<p>Rather, he encourages us to surround ourselves with the best musicians we can find so that we can learn from them. The concept is explored further in the book <a href="http://RayHightower.com/blog/2013/02/17/apprenticeship-patterns-by-dave-h-hoover-and-adewale-oshineye/">Apprenticeship Patterns</a> by Dave Hoover and Ade Oshineye.</p>

<p>I was reminded to be-the-worst while attending a conference this week, an event where I was surrounded by computer scientists with much more experience than me. I learned a lot his week. I will share details in a future post.</p>

<p>In the meantime, I invite you to join me in a Pat Metheny learning exercise of your choice. Be the worst!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM Saves the Day for Octopress]]></title>
    <link href="http://RayHightower.com/blog/2013/07/15/rvm-saves-the-day-for-octopress/"/>
    <updated>2013-07-15T14:29:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/15/rvm-saves-the-day-for-octopress</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org">Octopress</a> is a lean blogging engine that happens to power <a href="http://rayhightower.com">RayHightower.com</a>. Earlier today, after a quick update to the blog, I encountered the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'>/Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/bundler-1.2.4/lib/bundler/rubygems_integration.rb:187:in <span class="sb">`</span>stub_source_index170<span class="s1">&#39;: uninitialized constant Gem::SourceIndex (NameError)</span>
</span><span class='line'><span class="s1">     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/bundler-1.2.4/lib/bundler/rubygems_integration.rb:353:in `stub_rubygems&#39;</span>
</span><span class='line'>     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/bundler-1.2.4/lib/bundler/rubygems_integration.rb:250:in <span class="sb">`</span>replace_entrypoints<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/bundler-1.2.4/lib/bundler/runtime.rb:14:in `setup&#39;</span>
</span><span class='line'>     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/bundler-1.2.4/lib/bundler.rb:116:in <span class="sb">`</span>setup<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/rubygems-bundler-1.1.0/lib/rubygems-bundler/noexec.rb:77:in `setup&#39;</span>
</span><span class='line'>     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/rubygems-bundler-1.1.0/lib/rubygems-bundler/noexec.rb:89:in <span class="sb">`</span>&lt;top <span class="o">(</span>required<span class="o">)</span>&gt;<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     from /Users/rth/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:116:in `require&#39;</span>
</span><span class='line'>     from /Users/rth/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:116:in <span class="sb">`</span>rescue in require<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     from /Users/rth/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:122:in `require&#39;</span>
</span><span class='line'>     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@octopress/bin/ruby_noexec_wrapper:9:in <span class="sb">`</span>&lt;main&gt;<span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Not good. What happened?</p>

<!--more-->


<h3>The Problem</h3>

<p>From the error message, it appeared that my current version of Bundler was incompatible with Octopress. Googling for the error message (a favorite trick) was unhelpful. Had to try a different line of attack.</p>

<h3>The Solution: Roll Back</h3>

<p>Fortunately, I use <a href="http://rayhightower.com/blog/2013/05/16/upgrading-ruby-with-rvm/">RVM</a>. Currently installed versions of Ruby:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>rvm list
</span><span class='line'>
</span><span class='line'>rvm rubies
</span><span class='line'>
</span><span class='line'>   jruby-1.7.3 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>   macruby-0.12 <span class="o">[</span> i686 <span class="o">]</span>
</span><span class='line'>   ruby-1.8.7-p334 <span class="o">[</span> i686 <span class="o">]</span>
</span><span class='line'>   ruby-1.9.2-p290 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>   ruby-1.9.3-p448 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'><span class="o">=</span>* ruby-2.0.0-p247 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># =&gt; - current</span>
</span><span class='line'><span class="c"># =* - current &amp;&amp; default</span>
</span><span class='line'><span class="c">#  * - default</span>
</span></code></pre></td></tr></table></div></figure>


<p>Since <code>$ rake deploy</code> last worked with Ruby 1.9.2 on my machine, I decided to roll back to that point.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm use ruby-1.9.2-p290
</span></code></pre></td></tr></table></div></figure>


<p>Next, I built another <code>octopress</code> gemset to work with this version of Ruby, pointed to the gemset, and used Bundler to add the necessary gems.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm gemset create octopress
</span><span class='line'><span class="nv">$ </span>rvm gemset use octopress
</span><span class='line'><span class="nv">$ </span>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>And now <code>$ rake generate</code> works as required.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="c">## Generating Site with Jekyll</span>
</span><span class='line'>identical <span class="nb">source</span>/stylesheets/screen.css
</span><span class='line'>Configuration from /Users/rth/Code/Ruby/apps/rayhightower/_config.yml
</span><span class='line'>Building site: <span class="nb">source</span> -&gt; public
</span><span class='line'>Successfully generated site: <span class="nb">source</span> -&gt; public
</span></code></pre></td></tr></table></div></figure>


<p>Success!</p>

<h3>RVM Saves the Day</h3>

<p>Once again, RVM lets me recover quickly by shifting to an earlier version of Ruby. What&rsquo;s the root cause of the problem? I don&rsquo;t know at this point. But for now, the blog is up &amp; running!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Successful Companies Are Built Around Communities]]></title>
    <link href="http://RayHightower.com/blog/2013/07/09/successful-companies-are-built-around-communities/"/>
    <updated>2013-07-09T23:52:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/09/successful-companies-are-built-around-communities</id>
    <content type="html"><![CDATA[<p><a href="http://www.sethgodin.com">Seth Godin</a> is on a mission. Technology enables us to form communities that stretch beyond traditional boundaries like age and social status. Godin is convinced that revolutions within and between communities will yield huge opportunities for those who have the courage to take action. Don’t waste the revolution!</p>

<p>I had the opportunity to hear Godin speak at a Chicago area event some time ago. This post was inspired by the presentation.</p>

<!--more-->


<h3>Recognizing Change</h3>

<p>Humans rarely recognize change when we’re in the middle of it. We’re too busy living! One example from Chicago history: The advent of the skyscraper. On the surface, a skyscraper is just a tall building… big deal. However, in hindsight we can see that the skyscraper (and the Chicago school of architecture) in the late 1880s led to the expansion of cities. Cities became magnets for <a href="http://en.wikipedia.org/wiki/Knowledge_worker">knowledge workers</a>. As cities grew to accommodate more people, political power shifted away from farms and toward urban areas. Professional service firms, companies that exist to make other companies better, blossomed &amp; grew. We continue to feel the effects of this trend today, over a century later.</p>

<p>Godin believes that we are now dealing with another catalyst of change, one that is even more powerful than the skyscraper: the community. Communities are growing in size and power. Companies that know how to leverage communities are thriving.</p>

<h3>Threadless is Not About T-Shirts</h3>

<p>Fast forward to the early 21st century where we find a Chicago-area company called Threadless. If you sell a product that is easily copied, how do you differentiate yourself from the competition? By selling something that goes beyond the easily cloned product. <a href="http://threadless.com/">Threadless</a> has created a community around T-shirt sales. When building the company, the founders of Threadless looked at available technology and asked themselves, “What do people really want?” Their answers:</p>

<ul>
<li>To be famous.</li>
<li>To be recognized.</li>
<li>To be talked about.</li>
</ul>


<p>So they built the company to fulfill these basic human needs. If you’re an artist, submit a design. If enough people vote for your design, it gets printed on a shirt. And while you’re looking around the Threadless site, you’re welcome to buy any of the other designs for about $20 each.</p>

<p>While other t-shirt companies are trying to undercut each other on price, Threadless gives customers what they really want, customers gladly pay a premium, and everybody wins.</p>

<p><img src="http://RayHightower.com/images/rails_logo.jpg" width="200" height="285" align="right" title="Ruby on Rails Logo" alt="Ruby on Rails Logo"></p>

<h3>We Don’t Pay for Software. We Pay for Results</h3>

<p>Godin cites <a href="http://37signals.com">37signals</a> as an example of a company that nutures a community of software developers by giving away software for free. 37signals extracted the <a href="http://rubyonrails.org">Ruby on Rails</a> web framework from their Basecamp project management tool. Rather than charge for Rails, the company makes it available to the open source community at no charge. 37signals benefits because the people who use Rails, software developers, end up trying, buying and recommending the paid products to their colleagues. This results in an upward spiral in revenue for the company. To top it off, 37signals benefits from the open source community in ways that are not easily measured in dollars.</p>

<p>WisdomGroup is grateful to the entire Ruby on Rails community, including 37signals. We express our gratitude through <a href="http://chicagoruby.org">ChicagoRuby</a> and <a href="http://windycityrails.org">WindyCityRails</a>. Contributing to the open source community has enabled us to develop wonderful relationships with contractors, clients, advisors… all sorts of people who have helped us to grow &amp; prosper. User groups and conferences enable the software community to come together – creating something far beyond the grasp of an individual genius.</p>

<h3>The Bottom Line</h3>

<p>Seth Godin’s point: Our most successful companies are built around communities. Companies that know how to build &amp; nurture communities will thrive &amp; grow. Companies stuck in the old paradigm (massive advertising on a massive scale) might survive, but they will be easily eclipsed by companies that understand the value of strong communities. The revolution is here, and Seth Godin urges all of us not to waste it.</p>

<p><em>Note: An earlier version of this article was published at <a href="http://wisdomgroup.com">WisdomGroup.com</a>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FeeddlerPro for RSS]]></title>
    <link href="http://RayHightower.com/blog/2013/07/04/feeddlerpro-for-rss/"/>
    <updated>2013-07-04T15:07:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/04/feeddlerpro-for-rss</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/FeeddlerPro-accounts.png" width="300" height="258"
align="right" alt="FeeddlerPro Accounts" title="FeeddlerPro Accounts">
Yes, the name appears misspelled. But <a href="https://itunes.apple.com/us/app/feeddler-rss-reader-pro/id365710282?mt=8">FeeddlerPro</a> is my choice for RSS on iPhone and iPad. Feeddler has long been my favorite RSS reader. The developer&rsquo;s decision to add support for services beyond Google Reader (Bazqux Reader, FeedHQ, and The OldReader) sealed the decision for me.</p>

<h3>Second Choice</h3>

<p><a href="http://RayHightower.com/blog/2013/06/21/replacing-google-reader-with-feed-wrangler/">Feed Wrangler</a> was a close second. I like Feed Wrangler&rsquo;s minimalist approach to RSS. However, the app is missing a few features that FeeddlerPro already has baked in.</p>

<!--more-->


<h3>Server-Side Synchronization</h3>

<p>Of course, an RSS client is nothing without the server-side to keep everything synchronized. I chose <a href="http://theoldreader.com">The Old Reader</a> because it syncs between iPhone, iPad, and web without extra fluff.</p>

<p>Other RSS providers probably offer the same level of service. Fortunately, Feeddler makes it easy to switch between RSS services seamlessly.</p>

<p>Google Reader is history, but RSS marches on.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PechaKucha: Developer Education at TableXI]]></title>
    <link href="http://RayHightower.com/blog/2013/06/27/pechakucha-developer-education-at-tablexi/"/>
    <updated>2013-06-27T15:13:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/06/27/pechakucha-developer-education-at-tablexi</id>
    <content type="html"><![CDATA[<p><a href="http://pechakucha.org">PechaKucha</a> is a concise presentation style developed in Japan. The PechaKucha format is 20x20: The presenter must share an idea in twenty slides, each displayed for exactly twenty seconds, advancing automatically. Total presentation time = six minutues, forty seconds.</p>

<!--more-->


<p><a href="http://www.tablexi.com/blog/2013/06/practice-begins-with-play-a-table-talk/developers/">TableXI</a> hosted a PechaKucha on June 13th with the theme <em>Developer Education</em>. I was one of six presenters invited to speak. Video:</p>

<center><iframe width='460' height='345' src="http://www.pechakucha.org/presentations/51b92936dbdd200cbc000011/embed" frameborder="0"></iframe></center>


<p>One highlight from the PechaKucha presentation: This year&rsquo;s <a href="http://windycityrails.org">WindyCityRails</a> will include a youth program on Thursday afternoon. Details will be announced in July. Follow <a href="http://twitter.com/windycityrails">@WindyCityRails</a> for the latest news on the program.</p>

<p>Thanks TableXI for the PechaKucha invitation, and for sponsoring WindyCityRails 2013!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prep for Parallella's 64 Cores: Installing Go on Mac OS X]]></title>
    <link href="http://RayHightower.com/blog/2013/06/22/preparing-for-parallella-64-cores-installing-go-on-mac-os-x/"/>
    <updated>2013-06-22T12:58:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/06/22/preparing-for-parallella-64-cores-installing-go-on-mac-os-x</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/parallella.jpg" width="450" height="257" alt="Parallella 64-core supercomputer" title="Parallella 64-core supercomputer" align="right" imgcap="Parallella Board">
The idea of owning a 64-core parallel system for two hundred dollars (yes, $200.00) is exciting. <a href="http://www.parallella.org/introduction/">Parallella</a> is working to make that happen, perhaps as early as August 2013. To prepare for that day, I&rsquo;ve decided to introduce myself to the Go language.</p>

<!--more-->


<h3>What is Go?</h3>

<p><a href="http://golang.org">The Go language</a> is designed for parallel systems. Why does Go exist? One developer sums it up this way:</p>

<blockquote><p>Go was created at Google, by Google, for Google-size problems.<br/>~Dave Astels</p></blockquote>

<p>Google writes software that runs on thousands of machines in parallel. As the number of concurrent operations increases, new challenges are encountered. Google addressed those challenges by creating Go.</p>

<h3>Why Does a Rubyist Learn Go?</h3>

<p>The team at <a href="http://wisdomgroup.com">WisdomGroup</a> writes web and mobile apps, mainly in Ruby. So why am I learning Go?</p>

<p>Because the best developers are polyglot. When we learn a new language, we cause ourselves to see old problems in new ways and we strengthen our ability to solve new problems. It&rsquo;s like cross-training for  athletes. In the end, we become better developers.</p>

<h3>How to Install Go on Mac OS X</h3>

<ol>
<li><a href="https://code.google.com/p/go/downloads/list">Download the binary of Go that matches your system</a> <i>but don&#8217;t install it yet</i>. You will need to complete the rest of these steps before installation. For my 2010 i5-based 15-inch MacBook Pro, I chose <code>go1.1.1.darwin-amd64.pkg</code>. I was concerned about the reference to <code>amd64</code> in the name. But the description includes <code>Mac OS X (x86 64-bit)</code>, and the binary worked for me.</li>
<br/>
<li>If you are upgrading from a previous version of Go, you will need to remove the old Go directory. You can do this while the new binary is downloading in the background:</li>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rm -rf /usr/local/go
</span></code></pre></td></tr></table></div></figure>

<li>Define the <code>GOROOT</code> and <code>GOPATH</code> environmental variables. My system uses <code>~/.bash_profile</code> to define environmental variables, so I added the following lines to the end of that file:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">GOROOT</span><span class="o">=</span>/usr/local/go
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$GOROOT</span>/bin
</span><span class='line'><span class="nb">export </span><span class="nv">GOPATH</span><span class="o">=</span>~/Code/gocode
</span></code></pre></td></tr></table></div></figure>
Note: I&#8217;m using the default <code>GOROOT</code> variable, but your <code>GOPATH</code> may differ from mine. I store all of my source code in a subdirectory of home:<code>~/Code</code>. My complete Go directory structure is given below. By looking at my structure, you can adjust these steps to fit your system.</li>
<br/>
<li>Tell your terminal session to recognize the new environmental variables. You can either restart terminal, or if your environmental variables are in <code>~/.bash_profile</code> like mine, you can do the following:</li>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bash_profile
</span></code></pre></td></tr></table></div></figure>
<li>Run the package installation program, <code>go1.1.1.darwin-amd64.pkg</code>, that was downloaded in Step 1.</li>
</ol>


<p>Now, let&rsquo;s Go for a test drive.</p>

<h3>Creating a Go Workspace</h3>

<p>Before you can run a Go program on your system, you have to create a Go workspace. A workspace is a directory structure that contains source code and binaries that a Go program needs in order to compile and execute.</p>

<p>We can examine the Go Workspace on my system with the Unix <code>tree</code> command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Code/gocode<span class="nv">$ </span>tree
</span><span class='line'>.
</span><span class='line'>└── src
</span><span class='line'>    └── github.com
</span><span class='line'>        └── rayhightower
</span><span class='line'>            └── hello
</span><span class='line'>                └── hello.go
</span><span class='line'>
</span><span class='line'>4 directories, 1 file
</span><span class='line'>
</span><span class='line'>~/Code/gocode<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here&rsquo;s a brief description of the directories:</p>

<ul>
<li>Code = root directory for all source code on my system. Yours may differ.</li>
<li>gocode = where I store all of the Go code on my system. I&rsquo;m following the structure recommended by the Go documentation. I may alter this as I learn more about the language.</li>
<li>src = source code</li>
<li>github.com = directory named after the place where I store repos</li>
<li>rayhightower = my GitHub profile name</li>
<li>hello = directory named for our first Go application</li>
<li>hello.go = the Go source file for our <code>Hello World</code> program</li>
</ul>


<p>All structure below the <code>gocode</code> directory is mandated by Go.</p>

<h3>Writing &lsquo;Hello World!&rsquo; in Go</h3>

<p>Google&rsquo;s official installation instructions include a simple &lsquo;Hello World&rsquo; program for testing the installation. A slightly modified version appears below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;\n****** Hey Parallella enthusiasts: Learn Go! ******\n&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Compiling and Running</h3>

<p>We drop the code into a file called <code>hello.go</code> in the <code>hello</code> directory. To compile the program:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Code/gocode/src/github.com/rayhightower/hello<span class="nv">$ </span>go install
</span><span class='line'>
</span><span class='line'>~/Code/gocode/src/github.com/rayhightower/hello<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>If the Go compiler responds with a blank prompt (like above) then the program compiled successfully and a <code>bin</code> directory has been created inside the Go workspace. Run the <code>tree</code> command from the <code>gocode</code> directory to see how the structure has changed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Code/gocode<span class="nv">$ </span>tree
</span><span class='line'>.
</span><span class='line'>├── bin
</span><span class='line'>│   └── hello
</span><span class='line'>└── src
</span><span class='line'>    └── github.com
</span><span class='line'>        └── rayhightower
</span><span class='line'>            └── hello
</span><span class='line'>                └── hello.go
</span><span class='line'>
</span><span class='line'>5 directories, 2 files
</span><span class='line'>
</span><span class='line'>~/Code/gocode<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>The newly created <code>bin/</code> directory contains our <code>hello</code> executable. And now, let&rsquo;s cut the suspense and <em>run the program</em>. To do so, change into the <code>bin/</code> directory and type <code>./hello</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Code/gocode/src/github.com/rayhightower/hello<span class="nv">$ </span><span class="nb">cd</span> ~/Code/gocode/bin
</span><span class='line'>
</span><span class='line'>~/Code/gocode/bin<span class="nv">$ </span>./hello
</span><span class='line'>
</span><span class='line'>****** Hey Parallella enthusiasts: Learn Go! ******
</span><span class='line'>
</span><span class='line'>~/Code/gocode/bin<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Success!</p>

<h3>It&rsquo;s Not Official, But It Makes Sense</h3>

<p>As of this writing, Parallella does not officially support the Go language. So why go through all of this trouble? Because&hellip;</p>

<ul>
<li>A 64-core Parallella is just too cool to pass up. And it&rsquo;s open source.</li>
<li>Go is designed for parallel systems. And it&rsquo;s open source.</li>
<li>Open source devs are working on a Go compiler for Parallella right now. If you&rsquo;re reading this, and you&rsquo;re one of the devs, thank you!</li>
</ul>


<p>The Go-Parallella match makes sense. It&rsquo;s always good to skate where the puck is going.</p>

<h3>Next Steps</h3>

<p>Now it&rsquo;s time to explore the Go language. The real adventure begins when the 64-core Parallella arrives. Looking forward to it!</p>

<h3>Acknowledgements</h3>

<p>I was inspired to explore Go by <a href="https://twitter.com/blakesmith">Blake Smith&rsquo;s</a> presentation at <a href="http://www.meetup.com/ChicagoSC/events/120658422/">8th Light</a>. <a href="http://twitter.com/wondible">Justin Love</a> introduced me to Parallella last month at ChicagoRuby.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Replacing Google Reader with Feed Wrangler]]></title>
    <link href="http://RayHightower.com/blog/2013/06/21/replacing-google-reader-with-feed-wrangler/"/>
    <updated>2013-06-21T18:52:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/06/21/replacing-google-reader-with-feed-wrangler</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/feedwrangler-gil.jpg" height="600" width="450" align="right" alt="Google Reader Replacement: Feed Wrangler - iPad" title="Google Reader Replacement: Feed Wrangler - iPad">
Google Reader, the RSS product, shuts down on July 1st. I consume most news via RSS, and the ability to sync multiple RSS clients between iPhone, iPad, and desktop with Google Reader in the background saved time while keeping me informed. Finding a replacement is critical.</p>

<p>Fortunately, strong alternatives are emerging. <a href="http://feedwrangler.net">Feed Wrangler</a> is a Google Reader replacement by independent developer <a href="http://david-smith.org">David Smith</a>. Here are my first impressions.</p>

<!--more-->


<h3>Pros</h3>

<p>After using the service for a few hours, I can already see some things that I like. Specifically:</p>

<ul>
<li>Minimal fluff. Other RSS clients feature big photos and page-flipping special effects. That&rsquo;s not for me. Just the facts, RSS.</li>
<li>Easy RSS import from Google Reader. Just log in with your Google account and follow the prompts. After you import your feeds into Feed Wrangler&rsquo;s web app, you will never need Google Reader again.</li>
<li>Reasonable cost. The Feed Wrangler service costs $19/year. Google dropped Reader because they couldn&rsquo;t make money from the free product. You can&rsquo;t fix that with volume! When an app makes money (directly or indirectly) then the app is more likely to stick around.</li>
<li>iPhone and iPad apps. Feed Wrangler&rsquo;s native apps for <a href="https://itunes.apple.com/us/app/feed-wrangler/id634486174?mt=8">iPhone and iPad</a> sync with the web app. This is important for me because I consume most RSS on-the-go. A screenshot from the iPad app appears above.</li>
</ul>


<h3>Cons</h3>

<p>Like most users, I want the developer to add &ldquo;just one or two more features&rdquo; to make the app perfect for me. Of course that&rsquo;s the slippery slope to bloatware since every user has a different set of one-or-two features.</p>

<p>The developer can avoid bloatware by ignoring all other users and focusing on <em>my</em> feature requests:</p>

<ul>
<li>Evernote integration. My current RSS client lets me drop an article into Evernote with a few taps on the screen. Sometimes I want to re-read an article or think about it more deeply at a later time. Evernote lets me do this.</li>
<li>Organized imports. While Feed Wrangler imports feeds from Google Reader, it does not maintain Reader&rsquo;s organization. So I had to organize my feeds manually with Feed Wrangler&rsquo;s &ldquo;Smart Stream&rdquo; feature. If Reader&rsquo;s folders could be imported as Feed Wrangler&rsquo;s Smart Streams, that would be cool.</li>
<li>Feed counter. Sometimes I prioritize my reading by the number of unread articles. A counter next to each feed would be helpful.</li>
</ul>


<h3>Summary</h3>

<p>I plan to try other RSS readers before Google Reader shuts down on July 1st. Feed Wrangler is making a good impression so far.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Practice Begins With Play]]></title>
    <link href="http://RayHightower.com/blog/2013/06/13/practice-begins-with-play/"/>
    <updated>2013-06-13T10:09:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/06/13/practice-begins-with-play</id>
    <content type="html"><![CDATA[<p>This afternoon I was invited to speak at the June <a href="http://www.tablexi.com/blog/2013/06/developer-education-june-table-talks/developers/">Table Talks</a> hosted by Table XI. Today&rsquo;s theme was developer education. My topic: <em>Practice Begins With Play</em>. Developers who want to achieve mastery have many practice resources to choose from, including open source hardware like <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">Raspbery Pi</a>, <a href="http://RayHightower.com/blog/2013/05/22/beaglebone-black-up-and-running/">BeagleBone Black</a>, and <a href="http://parallella.org">Parallella</a>.</p>

<!--more-->


<h4>PechaKucha</h4>

<p>Presentations were given in the <a href="http://www.pechakucha.org/faq">PechaKucha</a> format, which encourages presenters to deliver the maximimum amount of useful information in a relatively short time. Each presenter is only allowed twenty slides, with twenty seconds per slide. Truly high impact!</p>

<h4>Slides and Video</h4>

<p>Slides from the talk appear below. Video will be posted here as soon as it becomes available. <em>Update: Video has been <a href="http://RayHightower.com/blog/2013/06/27/pechakucha-developer-education-at-tablexi/">posted</a>.</em></p>

<center><script async class="speakerdeck-embed" data-id="391a4b80b66a013009c8226af5af9159" data-ratio="1.29456384323641" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script></center>


<p>Thank you Table XI for the invitation!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kali Linux for Pentesting]]></title>
    <link href="http://RayHightower.com/blog/2013/05/31/kali-linux-pentesting/"/>
    <updated>2013-05-31T00:15:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/05/31/kali-linux-pentesting</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/kali-linux-desktop.png" width="400" height="303" title="Kali Linux - The quieter you become, the more you are able to hear." alt="Kali Linux - The quieter you become, the more you are able to hear." align="right">
<a href="http://getbraintree.com">Braintree</a> hosted a <a href="http://www.meetup.com/braintreepayments/events/119511632/">Hax &lsquo;n Snax</a> event this afternoon. Devs from around Chicago gathered together to hack on code, socialize, trade ideas, and hone skills. Thanks Braintree for putting on a great event.</p>

<p>My Hax &lsquo;n Snax time was spent interacting with other devs and experimenting with a Linux distro that I just discovered, Kali Linux.</p>

<h3>What is Kali Linux?</h3>

<p><a href="http://www.kali.org/">Kali</a> is a fairly new Linux distro designed for digital forensics and penetration testing. If you&rsquo;re looking for a general purpose Linux distro, <a href="http://ubuntu.com">Ubuntu</a> would be a better choice. Kali is the successor of BackTrack. The developers of Kali and BackTrack, <a href="http://www.offensive-security.com/">Offensive Software</a>, state that &ldquo;Kali is a more mature, secure, and enterprise-ready version of BackTrack Linux.&rdquo; You can download it at <a href="http://kali.org">Kali.org</a>.</p>

<!--more-->


<h3>Parallels Installation Gotcha</h3>

<p>I&rsquo;m running Kali Linux inside of Parallels version 7 on Mac OS X 10.8.3 (Mountain Lion). The Linux installation proceeded normally, but when I rebooted the virtual machine, Linux wouldn&rsquo;t come up. Instead, I got the perpetual display of timeouts shown below.</p>

<center><img src="http://RayHightower.com/images/time-out.png" width="754" height="645" title="Kali Linux time out" alt="Kali Linux time out" align="center"></center>


<p>Google led me to a solution on a blog called <a href="http://redrise.wordpress.com/2013/04/02/installing-kali-in-parallels-desktop-7/">redrise</a>. The solution: To make Kali run on Parallels, uncheck the check box labeled &ldquo;Show battery in Linux&rdquo;, as shown below.</p>

<center><img src="http://RayHightower.com/images/show-battery-in-linux.png" width="798" height="653" title="Kali - Show battery in Linux" alt="Kali - Show battery in Linux" align="center"></center>


<p>I&rsquo;m not sure why a battery indicator would prevent Kali from booting in Parallels, but the solution worked. When I installed Kali on VMWare, the OS ran without special configuration changes.</p>

<h3>The Kali Linux Tools</h3>

<p>Kali comes with over 300 penetration tools. It&rsquo;s open source, so if you see room for improvement, <a href="http://git.kali.org/gitweb/">fork the repo</a> and go to work. If your ideas are strong enough, the developers might accept your pull request. There&rsquo;s even a version of Kali for <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">Raspberry Pi</a>. Take a look at the GUI.</p>

<center><img src="http://RayHightower.com/images/kali-linux-security-tools.png" width="798" height="653" title="Kali Linux Security Tools" alt="Kali Linux Security Tools" align="center"></center>


<h3>Using Wireshark on Kali Linux</h3>

<p>Kali includes sniffer tools that can capture WiFi traffic. If the WiFi traffic is &ldquo;protected&rdquo; (note the quotes) with an older method like wireless encryption protocol (WEP), Kali&rsquo;s tools can crack the encryption.</p>

<center><img src="http://RayHightower.com/images/wireshark-kali-linux.png" width="600" height="492" title="Kali Linux Wireshark" alt="Kali Linux Wireshark" align="center"></center>


<p>A screenshot from Wireshark appears above. Wireshark sits and observes network traffic. If a packet looks interesting, drill down to discover the packet&rsquo;s source, destination, and contents.</p>

<h3>Summary</h3>

<p>Kali enables developers and network professionals to protect themselves and their clients from attacks. Kali is powerful, and with great power comes great responsibility.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BeagleBone Black, Up & Running]]></title>
    <link href="http://RayHightower.com/blog/2013/05/22/beaglebone-black-running-ruby-on-rails/"/>
    <updated>2013-05-22T22:13:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/05/22/beaglebone-black-running-ruby-on-rails</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/BeagleBoneBlack.jpg" width="372" height="600" title="BeagleBone Black" alt="BeagleBone Black" align="right">
<a href="http://beagleboard.org/Products/BeagleBone%20Black">BeagleBone Black</a>, like the <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">Raspberry Pi</a>, is a small, inexpensive computer that runs Linux. It&rsquo;s smaller than a deck of cards and you can buy one for about forty-five dollars ($45.00). The device is made by <a href="http://circuitco.com">CircuitCo</a> in Richardson, TX, USA.</p>

<h3>It Just Works</h3>

<p>BeagleBone Black runs Linux right out of the box. Steps required:</p>

<ul>
<li>Plug in the micro-HDMI cable for the monitor. See the &ldquo;Gotchas&rdquo;
section about micro-HDMI below.</li>
<li>Plug in the keyboard &amp; mouse via the USB port. You might need a USB hub because the board only has one USB port.</li>
<li>Add power via the mini-USB port or the 5v power connection.</li>
</ul>


<p>After a few minutes of boot time, we have a fully-functioning Linux computer with a GUI, Firefox browser, and other tools.</p>

<!--more-->


<p>The BeagleBone Black has 2GB of flash storage on the board, and part
of that is used for Linux. Here&rsquo;s a screenshot after just a few minutes of ownership.</p>

<center><img src="http://RayHightower.com/images/BeagleBoneBlack-WindyCityRails.png" width="600" height="338" title="BeagleBone Black Firefox WindyCityRails" alt="BeagleBone Black Firefox WindyCityRails" align="center"></center>


<h3>Documentation</h3>

<p><img src="http://RayHightower.com/images/BeagleBoneBlack-USB.png" width="250" height="200" title="BeagleBone Black USB" alt="BeagleBone Black USB" align="right">
All of the paper documentation for the BeagleBone Black fits on a slip of paper roughly the size of two business cards. The meat of the documentation resides on the device itself. To reach the electronic documentation:</p>

<ol>
<li>Plug the BeagleBone Black into a USB port on your laptop.</li>
<li>The board will appear as a USB storage device. One of the files at the
root of the storage device, <code>START.htm</code>, contains the documentation. It
can be viewed in a web browser.</li>
</ol>


<p>The documentation recommends against <a href="http://en.wikipedia.org/wiki/Internet_Explorer">MSIE</a>.</p>

<h3>Gotchas</h3>

<p><img src="http://RayHightower.com/images/micro-HDMI-home-depot.jpg" width="400" height="300" title="Micro HDMI Home Depot" alt="Micro HDMI Home Depot" align="right">
The manufacturer included a mini-USB cable with the device, so you can power it up right after you rip open the package. Gotcha: You need a micro-HDMI cable (or adapter) if you want to attach a monitor. I would have preferred a micro-HDMI-to-HDMI adapater in the box instead of the mini-USB cable. That&rsquo;s a little nit-picky on my part since micro-HDMI cables are easy to find at Home Depot.</p>

<p>A quick shout-out to Home Depot: Their store-brand cables let you test the cable end without opening the package, right in the store. Excellent package design by Home Depot.</p>

<p>My second &ldquo;gotcha&rdquo; is more important: The <code>curl</code> command did not behave as flawlessly as it did with the Raspberry Pi, so I was not able to install Ruby as quickly as planned. Details below.</p>

<h3>Installing Rails</h3>

<p>I will have to cover Ruby and Rails installation in a future blog post because my initial attempts were not successful. <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">RVM, Ruby, and Rails installed easily with Raspberry Pi</a>, even though the compilation time was long. With the BeagleBone Black, I received the following in response to the <code>curl</code> command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sh-4.2# curl -L https://get.rvm.io | bash -s stable --ruby
</span><span class='line'>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
</span><span class='line'>                                 Dload  Upload   Total   Spent    Left  Speed
</span><span class='line'>  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
</span><span class='line'>curl: <span class="o">(</span>77<span class="o">)</span> Problem with the SSL CA cert <span class="o">(</span>path? access rights?<span class="o">)</span>
</span><span class='line'>sh-4.2#
</span></code></pre></td></tr></table></div></figure>


<p>Maybe it&rsquo;s time to try <a href="https://github.com/sstephenson/rbenv">RBEnv</a>? I&rsquo;ll post a solution when I find it. Or&hellip; if a reader of this blog already has a solution for the BeagleBone Black Rails installation challenge, please post in the comments below and I&rsquo;ll credit you here.</p>

<h4>BeagleBone Black vs. Raspberry Pi</h4>

<p>Which is better, BeagleBone Black or Raspberry Pi? There&rsquo;s no clear winner in my opinion. It&rsquo;s a matter of trade-offs:</p>

<ul>
<li>The &lsquo;Bone runs Linux right out of the box, while it takes some time to get Linux running on the Pi, unless you buy a card pre-configured for the Pi.</li>
<li>RVM, Ruby, and Rails installation was painless on the Pi even though compilation time was long. The jury is still out w/r/t RVM on the &lsquo;Bone.</li>
<li>Cost-wise, they&rsquo;re within ten bucks of each other. That&rsquo;s a wash.</li>
<li>The &lsquo;Bone has more Ardunio-like provisions for digital projects.</li>
<li>The Pi includes an RCA output for older TVs. Plus the Pi uses standard HDMI, so there&rsquo;s no need to get a special micro-HDMI cable.</li>
</ul>


<p>I&rsquo;ve owned my &lsquo;Bone for just over 24 hours. Lots more to learn. Looking forward to it!</p>
]]></content>
  </entry>
  
</feed>
