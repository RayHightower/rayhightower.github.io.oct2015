<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RayHightower.com]]></title>
  <link href="http://RayHightower.com/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2014-06-16T17:53:47-04:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Citizen Science With OpenROV]]></title>
    <link href="http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov/"/>
    <updated>2014-06-16T17:46:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov</id>
    <content type="html"><![CDATA[<blockquote><p>With regard to robots, in the early days of robots people said, &lsquo;Oh, let&rsquo;s build a robot&rsquo; and what&rsquo;s the first thought? You make a robot look like a human and do human things. That&rsquo;s so 1950s. We are so past that.
<br/>~Neil deGrasse Tyson</p></blockquote>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/openrov-uw.jpg' width='' height='' alt='OpenROV: Underwater robot running Node.js.' title='OpenROV: Underwater robot running Node.js.'><span class='caption-text'>OpenROV: Underwater robot running Node.js.</span></span>
<a href="http://openrov.com">OpenROV</a> is an underwater robot, roughly the size of a toaster, and definitely not human-shaped. The device is controlled through a Node.js-based web app. Former NASA researcher Eric Stackpole and Make Magazine columnist David Lang are on a mission to democratize ocean exploration in the same way that Jobs and Woz sparked the democratization of  computing. Eric and David pooled their talents to launch OpenROV, building on the foundation laid by Moore’s Law and the open source software movement.</p>

<p>OpenROV&rsquo;s ingredients are an impressive mix of open source goodness&hellip;</p>

<ul>
<li>BeagleBone Black &ndash; an open-source single-board computer, smaller than a deck of cards, running Linux.</li>
<li>Linux &ndash; specifically, the Ubuntu distribution.</li>
<li>Node.js &ndash; platform for building web applications, based on the Google’s V8 JavaScript engine. Thanks to Node.js, any laptop running a web browser can control the OpenROV.</li>
<li>Arduino &ndash; inexpensive micro-controller commonly used in robotics projects.</li>
<li>TCP/IP &ndash; the communication protocol of the Internet. TCP/IP handles all communications (commands, video) between the OpenROV and the pilot’s laptop.</li>
</ul>


<p>The OpenROV team has released all of their <a href="https://github.com/openrov">schematics and source code</a> to the open source community, hence the word “open” in the company name. If you think the open source aspects of OpenROV are exciting, wait until you hear about the company&rsquo;s main mission: Underwater exploration.</p>

<!--more-->


<p>Eric and David were kind enough to invite me to their lab/manufacturing facility in Berkeley, California recently. Thank you, OpenROV makers!</p>

<h3>Remotely Operated Vehicles</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/controller.jpg' width='' height='' alt='Laptop, browser, and game controller.' title='Laptop, browser, and game controller.'><span class='caption-text'>Laptop, browser, and game controller.</span></span>
ROV is short for remotely operated vehicle, an underwater robot. Scientists use ROVs to study marine life. Oil companies use ROVs for underwater construction and inspections. Industry-grade ROVs are priced at $30,000 on the low-end, while a <a href="http://www.mbari.org/twenty/Tiburon.htm">custom ROV can cost several million dollars</a>.</p>

<p>The OpenROV team was convinced that they could design and build an ROV small enough to fit in a suitcase, and easy enough for a citizen scientist to assemble and maintain. Targeting the general public meant achieving a relatively low price point: under one thousand dollars ($1,000.00).</p>

<p>They did it. The device is successful, and you can <a href="http://store.openrov.com/">buy an OpenROV</a> kit today for $849.00.</p>

<p>Movements are controlled via a USB-connected video game controller. A Bluetooth-equipped controller should work just as well. Some users will prefer the laptop keyboard; that works too.</p>

<p>In other words, the computer that you’re using to read this article can probably control the OpenROV.</p>

<h3>Citizen Science</h3>

<p>Our world will always need professional scientists, people working in academia and in industry to push the frontier of knowledge. Some scientific problems require the attention of PhD-level professionals, while other problems are better solved through crowdsourcing. Enter the <a href="http://en.wikipedia.org/wiki/Citizen_science">citizen scientist</a>.</p>

<p>Professional scientists are good at analyzing data, because that&rsquo;s what they have trained themselves to do. But data gathering requires less training than analysis. Citizen science and crowdsourcing work when there&rsquo;s an overwhelming volume of data to gather. Or when the breakthrough is beyond the reach of current scientific knowledge.</p>

<p>Citizen scientists may be constrained by money, but they tend to be unconstrained by expertise. Therefore they are likely to try solutions that experts would never consider. <a href="http://en.wikipedia.org/wiki/Wright_brothers">Orville and Wilbur Wright</a> were citizen scientists. Professional scientists pursued solutions for fixed-wing flight prior to the Wright brothers&#8217; success. But since the flight problem defied the known science of the day, new approaches were required.</p>

<p>Amusingly, a successful citizen scientist can become constrained by expertise just like the professionals. For example&hellip;</p>

<blockquote><p>No flying machine will ever fly from New York to Paris &hellip;[because] no known motor can run at the requisite speed for four days without stopping.
<br/>~Orville Wright</p></blockquote>

<p>Thousands of professional and citizen scientists are now using OpenROV to explore bodies of water that have never been explored so thoroughly before. Vast portions of our planet&rsquo;s oceans remain unexplored. But not for long.</p>

<h3>Open Source On-Site</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/ui-discussion-2.jpg' width='' height='' alt='Enthusiasts collaborate on the next UI.' title='Enthusiasts collaborate on the next UI.'><span class='caption-text'>Enthusiasts collaborate on the next UI.</span></span>
On the day I visited the OpenROV factory, other OpenROV enthusiasts were on-site, working with company engineers on product improvements. One enthusiast, a professional ROV operator, pilots large human-sized ROVs as deep as 2,000 meters below the ocean&rsquo;s surface. &ldquo;We&rsquo;re always looking at amperage&rdquo;, she said in a discussion with another enthusiast. A spike in amperage could indicate a ground fault, and batteries drain rapidly when that happens. You do not want to be stuck underwater when the batteries run out.</p>

<p>Another member of the open source community, an engineering veteran with decades of experience at <a href="http://apple.com">Apple</a> and <a href="http://oracle.com">Oracle</a>, translates the operator&rsquo;s feedback into code that might drive the next OpenROV user interface.</p>

<p>That&rsquo;s how open source works at OpenROV.</p>

<h3>Hardware Testing</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/testing-motor-controller.jpg' width='' height='' alt='Testing new hardware.' title='Testing new hardware.'><span class='caption-text'>Testing new hardware.</span></span>
I offered to leave when the OpenROV team prepared to test some new components. After working in tech for decades, I&rsquo;ve learned to respect a company&rsquo;s right to protect secrets.</p>

<p>&ldquo;You forget that this is all open source,&rdquo; they told me. &ldquo;The schematics are already online, so there&rsquo;s nothing to hide. Come and watch the test.&rdquo;</p>

<p>Yes, they had to remind me about the real meaning of open source!</p>

<p>Four OpenROV makers gathered around a tank of water to test a new motor, controller, and propeller combination. They measured power utilization, propulsion, and temperature. Power utilization is important because the batteries need to last. Temperature matters because we don&rsquo;t want the OpenROV to melt underwater (or fry the fish). And propulsion matters because if the unit can&rsquo;t move, what&rsquo;s the point?</p>

<p>From the reaction of the team, it looks like they found some good components for the next batch of OpenROV kits.</p>

<h3>Strong Minds, Coming Together</h3>

<p>The mood in the OpenROV lab is a blend of excitement and technical expertise. Some of the people in the lab are members of the company. Others are adventurers fascinated with this inexpensive, effective way to explore. All are united in the quest to do something awesome with technology.</p>

<p>OpenROV is what we get when the thirst for exploration blends with the open source movement. What a wonderful combination.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub Page Build Warning - New CDN]]></title>
    <link href="http://RayHightower.com/blog/2014/05/31/github-page-build-warning-new-cdn/"/>
    <updated>2014-05-31T13:44:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/05/31/github-page-build-warning-new-cdn</id>
    <content type="html"><![CDATA[<p>The <code>RayHightower.com</code> blog is built on <a href="http://octopress.org/">Octopress</a> and hosted on <a href="https://pages.github.com/">GitHub Pages</a>. Recently, after I deployed a site update, GitHub emailed me a <code>Page build warning</code> message. Since this was <em>just a warning</em>, I ignored it while I attacked more pressing tasks (not always a good idea).</p>

<p>Today I finally took the time to research the topic so I could figure out what to do next. This article is the result of that research.</p>

<!--more-->


<h2>What the Message Means</h2>

<p>Here are the important points of the of the <code>Page build warning</code> message:</p>

<ul>
<li>GitHub introduced a <a href="http://en.wikipedia.org/wiki/Content_delivery_network">content delivery network (CDN)</a> for faster page loads and protection against <a href="http://en.wikipedia.org/wiki/Denial-of-service_attack">denial of sevice (DOS)</a> attacks.</li>
<li>If you do nothing to your GitHub Pages site, your pages will continue to load normally. People who visit your site will see no difference.</li>
<li>If you want the benefits of the CDN, follow the instructions given in GitHub&rsquo;s blog articles.</li>
</ul>


<h3>The Original Message</h3>

<p>Here’s the original message. If you’re satisfied with the above translation, you can skip this section.</p>

<blockquote><p>The page build completed successfully, but returned the following warning:</p>

<p>GitHub Pages recently underwent some improvements (<a href="https://github.com/blog/1715-faster-more-awesome-github-pages">https://github.com/blog/1715-faster-more-awesome-github-pages</a>) to make your site faster and more awesome, but we&rsquo;ve noticed that rayhightower.com isn&rsquo;t properly configured to take advantage of these new features. While your site will continue to work just fine, updating your domain&rsquo;s configuration offers some additional speed and performance benefits. Instructions on updating your site&rsquo;s IP address can be found at <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages#step-2-configure-dns-records,">https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages#step-2-configure-dns-records,</a> and of course, you can always get in touch with a human at <a href="&#x6d;&#97;&#x69;&#x6c;&#x74;&#x6f;&#x3a;&#x73;&#117;&#x70;&#112;&#x6f;&#x72;&#x74;&#64;&#x67;&#105;&#116;&#x68;&#x75;&#x62;&#x2e;&#x63;&#111;&#x6d;&#x2e;">&#x73;&#x75;&#x70;&#x70;&#x6f;&#114;&#x74;&#x40;&#103;&#105;&#116;&#x68;&#x75;&#98;&#46;&#99;&#111;&#x6d;&#x2e;</a> For the more technical minded folks who want to skip the help docs: your site&rsquo;s DNS records are pointed to a deprecated IP address.</p>

<p>For information on troubleshooting Jekyll see:</p>

<p> <a href="https://help.github.com/articles/using-jekyll-with-pages#troubleshooting">https://help.github.com/articles/using-jekyll-with-pages#troubleshooting</a></p>

<p>If you have any questions please contact us at <a href="https://github.com/contact.">https://github.com/contact.</a></p></blockquote>

<h3>First: Check the CNAME File</h3>

<p>Since <code>RayHightower.com</code> was configured for Octopress a few years ago, it already had a <code>source/CNAME</code> file. To check the contents:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat <span class="nb">source</span>/CNAME
</span><span class='line'>rayhightower.com
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>CNAME</code> file looks fine, according to the GitHub&rsquo;s blog. Time for the next step.</p>

<h3>Next: Domain Records</h3>

<p>The domain is registered with <a href="http://dnsimple.com">DNSimple</a>, so the process was relatively quick.</p>

<ol>
<li>Go into DNSimple&rsquo;s advanced editor for the domain.</li>
<li>Click <code>Add a Record</code> and select <code>ALIAS</code>.</li>
<li>Leave <code>Name</code> blank.</li>
<li>Next to <code>Alias for</code> enter the GitHub Pages endpoint. In my case, the endpoint is <code>rayhightower.github.io</code>.</li>
</ol>


<p>More information on <a href="http://support.dnsimple.com/articles/github-pages/">GitHub Pages and DNSimple</a>.</p>

<p>I set TTL to 1 minute to encourage the changes to propagate quickly. If you know of a better configuration choice for TTL, please let me know in the comments below.</p>

<h3>Expect Propagation Delays</h3>

<p>DNS changes can take up to a day to propagate. Delays tend to be shorter with DNSimple because time-to-live (TTL) can be set as low as one minute for some records. Updates will be posted here as I learn more.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Grow a User Group]]></title>
    <link href="http://RayHightower.com/blog/2014/05/30/how-to-grow-a-user-group/"/>
    <updated>2014-05-30T17:34:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/05/30/how-to-grow-a-user-group</id>
    <content type="html"><![CDATA[<p>The current team of <a href="http://chicagoruby.org">ChicagoRuby</a> organizers assumed leadership in August 2007. Back then, typical monthly attendance was about five people and the group&rsquo;s <a href="http://meetup.com/chicagoruby">Meetup.com</a> database contained 78 members. The previous organizer was swamped with work at his day job, so he handed the baton to a new crew.</p>

<p>Today, the <em>new crew</em> has grown ChicagoRuby to over 2,700 members. The group hosts three meetups every month, and the downtown meetings consistently max out the 100-person RSVP limit. Bonus: ChicagoRuby hosts two conferences, <a href="http://windycityrails.org">WindyCityRails</a> in Chicago and <a href="http://rubycaribe.com">RubyCaribe</a> on the Caribbean island of Barbados.</p>

<p>How does ChicagoRuby do it? Through consistency, teamwork, iteration, and learning from mistakes.</p>

<!--more-->


<h3>Be Consistent With Meetings</h3>

<p>Consistency is very difficult in the beginning, especially on that night when only three people show up for the meeting. I have hosted a 3-person ChicagoRuby meeting before. Consistency is hard, and it is also the most important factor in user group success.</p>

<p>People trust consistency. Consistent meetings grow groups.</p>

<p>Members of ChicagoRuby know that we meet on the first Tuesday of every month downtown, the third Saturday of every month in Elmhurst, and one evening per month for the hack night. Members can plan their schedules months in advance because the ChicagoRuby calendar is consistent. Consistency builds trust.</p>

<p>ChicagoRuby cancelled one meeting in January 2011 due to a killer snow storm in Chicago. We were forced to cancel because the property manager shut the entire building down. We&rsquo;re a little bit stubborn about consistency. And that&rsquo;s how we build trust.</p>

<p>Yes, there will be times when the organizer is too exhausted to run an upcoming meeting. That&rsquo;s why it&rsquo;s important to share the work by building a team.</p>

<h3>Build the Team</h3>

<p>ChicagoRuby believes in sharing the work amongst multiple organizers. The group is stronger with several brains at the helm. Today we have eight organizers. Working as a team enables us to benefit from each other’s strengths. Some organizers have strong design skills, others are strong developers. And some are good at asking members for help.</p>

<h3>Ask for Help</h3>

<blockquote><p>I guarantee you that any favor he asks of you, you will offer to do before he requests it.
<br/>~Tom Hagen, Consigliere</p></blockquote>

<p>One way to ask for help: Encourage members to help in their area of enthusiasm. For example, organizer <a href="https://twitter.com/ginnyhendry">Ginny Hendry</a> runs the ChicagoRuby hack nights every month. Ginny got started when she approached the organizers after a meeting and said, &ldquo;We should have hack nights.&rdquo; Clearly, she was enthused about hack nights, so we asked her to take the lead in that area.</p>

<p>Today, Ginny’s hack nights are the highest rated of all ChicagoRuby events. In January, she will be a lab advisor at RubyCaribe.</p>

<p>Before he moved to Florida, <a href="http://twitter.com/mattpolito">Matt Polito</a> was part of the ChicagoRuby organizer team. Matt wanted ChicagoRuby to have a logo. I was against it. We were planning the first WindyCityRails and I wanted everyone to focus on the conference. Matt went out and got the logo done anyway. Everybody likes it. Matt, thank you for ignoring me!</p>

<p>Members who have ideas for improvement tend to be strong leaders. The whole group benefits when we get out of the way and let them lead.</p>

<p>The current members of the ChicagoRuby organizer team are:</p>

<ul>
<li><a href="https://twitter.com/ginnyhendry">Ginny Hendry</a>, mentioned above.</li>
<li><a href="http://twitter.com/wondible">Justin Love</a> is a developer and an organizer of the <a href="http://www.meetup.com/js-chi/">Chicago JavaScript Meetup Group (JS-Chi)</a>. Justin will also be a lab advisor for RubyCaribe in January 2015.</li>
<li><a href="http://twitter.com/hugocorbucci">Hugo Corbucci</a>, <a href="http://www.meetup.com/ChicagoRuby/members/42800032/">Emily Rosengren</a>, and <a href="http://www.meetup.com/ChicagoRuby/members/135529442/">Sam Jacobs</a> are developers at <a href="http://thoughtworks.com">ThoughtWorks</a>. Since ThoughtWorkers travel often, ChicagoRuby always invites two or more to be on the organizer team.</li>
<li><a href="http://twitter.com/themccreefiles">Alonda McCree</a> manages the downtown meetups, including logistics and video. Alonda is the conference manager for RubyCaribe.</li>
<li><a href="http://www.meetup.com/ChicagoRuby/members/1345203/">Marty Lavin</a> manages ChicagoRuby&rsquo;s Elmhurst meetups, including logistics and scheduling. Marty is consistently active in Elmhurst, so we asked him to join the team.</li>
<li><a href="http://twitter.com/rayhightower">Ray Hightower</a>, author of this
article.</li>
</ul>


<p>In addition to the core group of ChicagoRuby organizers, one person deserves special mention. <a href="http://twitter.com/zolk">Kevin Zolkiewicz</a> has managed every WindyCityRails since the first one in 2008. Kevin&rsquo;s project management, design, and leadership skills are enjoyed by everyone who attends WindyCityRails.</p>

<p>The <a href="http://www.chicagoruby.org/about/organizers/">ChicagoRuby Organizer Page</a> contains the list of current and past organizers. Many of the former organizers remain active in an emeritus role. Every mind helps to make the group stronger.</p>

<h3>Automate Everything</h3>

<p>Managing a database of 2,700+ members could be drudgery. Fortunately, <a href="http://meetup.com/chicagoruby">Meetup.com</a> makes the process easy. Meetup handles RSVPs, membership additions and deletions, and reminders. Sometimes, the 2-week automated reminder from Meetup.com reminds the organizers to get a speaker for the next meeting!</p>

<p>Early in our history, someone suggested that ChicagoRuby should not use Meetup.com because it&rsquo;s written in PHP, and we&rsquo;re a Ruby group. We see things differently. ChicagoRuby is a Ruby group that uses the best tool for the job, regardless of language. Meetup.com has proven itself useful for eight years and counting.</p>

<h3>Choose a Short Name</h3>

<p>Growth is an ongoing priority for ChicagoRuby. In order to grow, a group has to attract new members. New members who are looking for a group to join are likely to start with a search engine, and search engines adore simplicity.</p>

<p>Our group was originally called <em>The Chicago Area Ruby on Rails Meetup Group</em>. Accurate, and a mouthful. We discovered that a simple domain name, <a href="http://chicagoruby.org">ChicagoRuby.org</a>, was available. So we grabbed it, along with the <a href="http://twitter.com/chicagoruby">@ChicagoRuby</a> Twitter handle.</p>

<h3>Be Easy to Find</h3>

<p>To make the group even easier to find, every web site in the ChicagoRuby ecosystem points to all of the group&rsquo;s other web sites. For example, all of the conference sites point to the ChicagoRuby site, and vice versa. A new member who finds one part of the ecosystem will find the whole thing. People feel welcome when information is easy to find.</p>

<p>Making future members feel welcome is key to growth. Free monthly events are another way to make people feel welcome.</p>

<h3>Keep Monthly Events Free</h3>

<p>I firmly believe that monthly user group meetings should be free. We never know what a member of our community is going through financially. Therefore, ChicagoRuby&rsquo;s monthly meetings have always been free.</p>

<p>My personal history includes times when I was dead broke due to one entrepreneurial setback or another. So I have emotional reasons for keeping ChicagoRuby’s monthly events free of charge.</p>

<p>Of course, the money to pay for the meetings has to come from somewhere. That’s where sponsors can help.</p>

<h3>Cover Monthly Costs Through Sponsorships</h3>

<p>Companies will gladly sponsor a group that gives them a return on their investment. Sponsorships don&rsquo;t always come in the form of money.</p>

<p>For example, ChicagoRuby’s first sponsor was <a href="http://www.deforestgroup.com/">DeForest Group</a>. Owners <a href="https://www.linkedin.com/in/leedeforest">Lee DeForest</a> and <a href="http://www.linkedin.com/pub/james-deforest/40/57a/881">Jim DeForest</a> provide ChicagoRuby with free space and WiFi for our Saturday meetings. Lee was one of the five people in the room when the current organizers took over, and we will always be grateful for his early support.</p>

<p>ChicagoRuby’s downtown sponsors are <a href="http://enova.com">Enova</a> and <a href="http://thoughtworks.com">ThoughtWorks</a>. Each company provides space, WiFi, pizza, and beverages on a monthly basis. Sponsors get to address the group at the beginning of the meeting. More important, by sponsoring ChicagoRuby over time, a company can build trust within the membership.</p>

<p><a href="http://oreilly.com">O&#8217;Reilly Media</a> was our first publishing sponsor.  O&#8217;Reilly, <a href="http://www.informit.com/user_groups/">Pearson Education</a>, and <a href="http://pragprog.com/">The Pragmatic Programmers</a> provide books for ChicagoRuby members to <a href="http://www.chicagoruby.org/book-reviews/">review</a>.</p>

<p>Sponsors get involved with user groups for two main reasons: To recruit developers, or to market products to developers. Everybody wins when sponsors get involved with user groups, financially or otherwise.</p>

<h3>Vet Speakers</h3>

<p>Members of ChicagoRuby trust the organizers to deliver quality events every month. I dropped the ball one month when I failed to properly vet a speaker. After that meeting, organizer <a href="https://twitter.com/dgiunta">Dave Giunta</a> wrote the first draft of the ChicagoRuby <a href="http://www.chicagoruby.org/about/speaker-guidelines/">speaker guidelines</a>. We&rsquo;ve word-smithed the guidelines over the years, but the most important parts were created by Dave.</p>

<h3>Make Members Feel Awesome</h3>

<p>We humans have a need to belong to something. The feeling of belonging (awesomeness) can be strengthened when we go out for drinks after an event. Drinks are not necessarily alcohol; when we go to a bar together, some members will have a soda, juice, or coffee. Informal camaraderie makes members feel like members.</p>

<p>ChicagoRuby members gather together at a bar for an hour or so after our downtown meetings. In Elmhurst, the meetings end at noon, so we grab lunch together at a local restaurant. The conversation continues, and bonds are formed.</p>

<h3>Maintain Focus, and Explore New Areas</h3>

<p>Focus can lead to excellence. But if our focus is too tight, we might miss the Next Great Thing. How does a group balance between focus and exploration?</p>

<p>Over the years, ChicagoRuby has struggled with focus. We&rsquo;ve experimented with other ventures. We ran a job board for awhile. We ran conferences related to NoSQL and mobile. We moved away from these because they drained our resources, and pulled us away from our core, which is Ruby.</p>

<p>Here&rsquo;s how we balance between focus and exploration. The monthly user group meetings are for exploration. Monthly events take minimal resources, so they&rsquo;re ideal for experiments. For example, <a href="http://www.chicagoruby.org/videos/archives/2013/12/03/ployglot-night/">Polyglot Night</a> in Jan 2014 was very successful. Monthly meetings might explore NoSQL, mobile, or IoT. The Ruby community remains vibrant because we <em>borrow</em> ideas from other communities.</p>

<p>Our conferences focus on Ruby. Conferences require more planning and resources than monthly meetups. So, to maximize efficiency, we build our conferences around our core strength: Ruby. RubyCaribe is the newest example of this focused approach.</p>

<h3>Collaborate With Other Groups</h3>

<p>Collaboration stretches our brains in unexpected and wonderful ways. For our newest ventures, ChicagoRuby is collaborating with developers in the Caribbean, in the island nation of Barbados.</p>

<ul>
<li><a href="http://linuxbarbados.org">LinuxBarbados</a> is a monthly user group for open source enthusiasts.</li>
<li><a href="http://rubycaribe.com">RubyCaribe</a> is a brand new conference for intermediate and advanced Ruby developers.</li>
</ul>


<p>Through the new ventures, ChicagoRuby has been introduced to work done by the <a href="https://www.cavehill.uwi.edu/">University of the West Indies at Cave Hill (UWI)</a>.</p>

<p><a href="http://www.cavehill.uwi.edu/fst/cmp/staff/colin-depradine.aspx">Dr. Colin Depradine</a>, Dean of the University’s Faculty of Science and Technology, is growing the next generation of scientists and engineers in the Caribbean. Under Dr. Depradine&rsquo;s leadership, UWI encourages collaboration between the sciences. For example, computer scientists are writing software to crunch data related to solar energy research. Looking even further into the future, the UWI team has introduced children as young as eight to programming.</p>

<p>UWI also serves as host to LinuxBarbados. The group is organized by <a href="http://www.meetup.com/LinuxBarbados/members/143194822/">Maurice Beckles</a>, a Barbados-based open source enthusiast and IT technician at UWI. If you&rsquo;re in Barbados, be sure to ask him about his sink-or-swim introduction to Linux when he worked at a bank!</p>

<p>Notice the pattern: The conference (RubyCaribe) focuses on ChicagoRuby&rsquo;s core strength, Ruby. The monthly user group, LinuxBarbados, is a vehicle for exploring a wide range of topics including Linux, Ruby, embedded devices, and anything related to open source.</p>

<h3>Conclusion</h3>

<p>A better title for this post might have been <em>One Way to Grow a User Group</em>. Every group will grow differently depending on its particular strengths and interests. Of course, groups that grow are likely to have a few things in common. When a group is built on the pillars of consistency and teamwork, they are likely to succeed in a big way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrading to Git 2.0]]></title>
    <link href="http://RayHightower.com/blog/2014/05/30/upgrading-to-git-2-dot-0/"/>
    <updated>2014-05-30T11:33:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/05/30/upgrading-to-git-2-dot-0</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://RayHightower.com/images/git_200.png">
Developers of Git are making a serious effort to improve intuitiveness for first-time users. Of course, all users benefit from intuitive tools. When our tools <em>just work</em>, we spend less time sifting through documentation and more time solving problems for our customers.</p>

<!--more-->


<h3>How to Upgrade</h3>

<p>If you’re on Mac OS X, make sure you’re using <a href="http://RayHightower.com/blog/2014/02/12/homebrew-fundamentals/">Homebrew</a>. It’s the easiest way to install and manage Unix libraries on the Mac.</p>

<p>It’s usually a good idea to check your current version before upgrading.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git --version
</span><span class='line'>git version 1.9.2
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, make sure that Homebrew is current.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew doctor
</span><span class='line'>
</span><span class='line'>Warning: Your Homebrew is outdated.
</span><span class='line'>You haven<span class="err">&#39;</span>t updated <span class="k">for </span>at least 24 hours, this is a long <span class="nb">time </span>in brewland!
</span><span class='line'>To update Homebrew, run <span class="sb">`</span>brew update<span class="sb">`</span>.
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>My Homebrew was outdated, so I used <code>brew update</code> to grab the new packages.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew update
</span><span class='line'>Updated Homebrew from b46160b8 to afff2b23.
</span><span class='line'><span class="o">==</span>&gt; New Formulae
</span><span class='line'>aces_container                    git-number                      picolisp
</span><span class='line'>apache-spark                    homebrew/versions/mongodb24       probatron4j
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, use Homebrew to upgrade Git.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew upgrade <span class="nv">git</span>
</span><span class='line'><span class="o">==</span>&gt; Upgrading 1 outdated package, with result:
</span><span class='line'>git 2.0.0
</span><span class='line'><span class="o">==</span>&gt; Upgrading <span class="nv">git</span>
</span><span class='line'><span class="o">==</span>&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/git-2.0.0.mavericks.bottle.tar.gz
</span><span class='line'><span class="c">######################################################################## 100.0%</span>
</span><span class='line'><span class="o">==</span>&gt; Pouring git-2.0.0.mavericks.bottle.tar.gz
</span><span class='line'><span class="o">==</span>&gt; Caveats
</span><span class='line'>The OS X keychain credential helper has been installed to:
</span><span class='line'>  /usr/local/bin/git-credential-osxkeychain
</span><span class='line'>
</span><span class='line'>The <span class="s1">&#39;contrib&#39;</span> directory has been installed to:
</span><span class='line'>  /usr/local/share/git-core/contrib
</span><span class='line'>
</span><span class='line'>Bash completion has been installed to:
</span><span class='line'>  /usr/local/etc/bash_completion.d
</span><span class='line'>
</span><span class='line'>zsh completion has been installed to:
</span><span class='line'>  /usr/local/share/zsh/site-functions
</span><span class='line'><span class="o">==</span>&gt; Summary
</span><span class='line'>🍺  /usr/local/Cellar/git/2.0.0: 1324 files, 31M
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Finished. Let&rsquo;s check the Git version to confirm that the upgrade went properly.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git --version
</span><span class='line'>git version 2.0.0
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Future articles will examine the this latest version of Git in detail. For now, enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Environment of Respect, 3rd Iteration]]></title>
    <link href="http://RayHightower.com/blog/2014/05/28/an-environment-of-respect-3rd-iteration/"/>
    <updated>2014-05-28T06:42:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/05/28/an-environment-of-respect-3rd-iteration</id>
    <content type="html"><![CDATA[<p>Last week, <a href="https://twitter.com/bantik">Coraline Ehmke</a> and <a href="https://twitter.com/feministy">Liz Abinante</a> met with three members of the WindyCityRails organizer team: <a href="https://twitter.com/zolk">Kevin Zolkiewicz</a>, <a href="https://twitter.com/themccreefiles">Alonda McCree</a>, and me. Good dialog. End result: The updated <a href="http://www.windycityrails.org/code-of-conduct/">WindyCityRails Code of Conduct</a>.</p>

<!--more-->


<p>Harassment is a serious issue, and a 140-character tweet will not do the discussion justice. Therefore, the ChicagoRuby organizers have created multiple communication channels for this issue:</p>

<ul>
<li>Email: <a href="&#x6d;&#x61;&#105;&#108;&#x74;&#x6f;&#58;&#x63;&#111;&#x64;&#x65;&#111;&#102;&#99;&#x6f;&#110;&#x64;&#x75;&#x63;&#x74;&#x40;&#99;&#x68;&#x69;&#99;&#x61;&#103;&#x6f;&#114;&#117;&#98;&#x79;&#x2e;&#111;&#114;&#103;">&#x63;&#111;&#x64;&#101;&#x6f;&#102;&#99;&#111;&#x6e;&#x64;&#117;&#99;&#116;&#x40;&#x63;&#104;&#105;&#x63;&#x61;&#103;&#111;&#x72;&#117;&#98;&#x79;&#46;&#x6f;&#114;&#103;</a></li>
<li>Any of the contact names listed on the current code of conduct</li>
<li>Phone number listed on the code of conduct</li>
</ul>


<p>If you have concerns in this area, please feel free to use one of the channels. The contact list may change as responsibilities shift within ChicagoRuby. However, there will always be multiple people available to address harassment concerns.</p>

<p>Thank you Coraline and Liz for your work in making this happen. And thank you <a href="https://twitter.com/lostghost">Ken Walters</a> of <a href="http://twitter.com/bradsdeals">Brad’s Deals</a> for facilitating the meeting.</p>

<p>Now, let’s go write some code!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Managing Dotfiles]]></title>
    <link href="http://RayHightower.com/blog/2014/04/15/managing-dotfiles/"/>
    <updated>2014-04-15T17:13:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/04/15/managing-dotfiles</id>
    <content type="html"><![CDATA[<p>Dotfiles, the configuration files used by Unix-like machines, can become disorganized over time. Entropy rules! This article describes my recent attempt to bring order to dotfile chaos. The steps can be summarized as follows:</p>

<ul>
<li>Move the non-private dotfiles (dotfiles that will be viewed by others on Github) into a directory called <code>~/.dotfiles</code>.</li>
<li>From the <code>home</code> directory, create a symbolic link to each dotfile in the <code>~/.dotfiles</code> directory.</li>
<li>Use Git to manage the <code>~/.dotfiles</code> directory, and share it on GitHub.</li>
</ul>


<p>Dotfiles are normally hidden when you try to view them in the Mac OS X Finder. To view them from the command prompt, use <code>$ ls -al</code>.</p>

<!--more-->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/.dotfiles<span class="o">[</span>master<span class="o">]</span><span class="nv">$ </span>ls -al
</span><span class='line'>total 40
</span><span class='line'>drwxr-xr-x   8 rth  staff   272 Apr 14 01:44 .
</span><span class='line'>drwxr-xr-x+ 71 rth  staff  2414 Apr 14 02:12 ..
</span><span class='line'>-rwxr-xr-x   1 rth  staff  3455 Apr 13 16:01 .bash_profile
</span><span class='line'>drwxr-xr-x  14 rth  staff   476 Apr 14 02:25 .git
</span><span class='line'>-rw-r--r--   1 rth  staff  1649 Apr 13 16:44 .gitk
</span><span class='line'>-rw-r--r--   1 rth  staff  1760 Apr 13 16:10 .irbrc
</span><span class='line'>-rw-r--r--   1 rth  staff   118 Aug 22  2013 .zprofile
</span><span class='line'>-rw-r--r--   1 rth  staff   375 Apr 14 01:44 README.mdown
</span><span class='line'>
</span><span class='line'>~/.dotfiles<span class="o">[</span>master<span class="o">]</span><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>The <a href="https://github.com/RayHightower/.dotfiles/blob/master/.bash_profile">.bash_profile</a> in this example has grown to include aliases, path specifications, and a script that shows the current Git branch as part of the command prompt. The file also contains two aliases useful for showing or hiding dotfiles in the Finder: <code>showdots</code> and <code>hidedots</code>.</p>

<h3>Putting Dotfiles in One Directory</h3>

<p>Dotfiles are normally created in the user&rsquo;s home directory. For organization purposes, I moved my non-private dotfiles into a directory called <code>.dotfiles</code>, listed above. Unix makes this easy. First, move to the home directory and create <code>~/.dotfiles</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span><span class="nb">cd</span> ~
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>mkdir .dotfiles
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Note: Dotfiles can sometimes include private information. If you don&rsquo;t want to share information in a particular dotfile, don&rsquo;t put it on GitHub!</em></p>

<p>In this example, we&rsquo;ll only move one file, <code>.bash_profile</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span><span class="nb">cd</span> .dotfiles/
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>mv ../.bash_profile .
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<h3>Symbolic Links</h3>

<p>Symbolic links ensure that executables can find our dotfiles as needed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ~
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ln -s ~/.dotfiles/.bash_profile
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>ls -al
</span><span class='line'>total 8
</span><span class='line'>drwxr-xr-x   3 rth  staff   102 Apr 14 19:48 .
</span><span class='line'>drwxr-xr-x+ 73 rth  staff  2482 Apr 14 19:47 ..
</span><span class='line'>lrwxr-xr-x   1 rth  staff    34 Apr 14 19:48 .bash_profile -&gt; /Users/rth/.dotfiles/.bash_profile
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>In the above example, we created a symbolic link called <code>.bash_profile</code> to the real <code>~/.dotfiles/.bash_profile</code> located in the <code>.dotfiles</code> directory. That way, any program that&rsquo;s looking for the <code>.bash_profile</code> file in the home directory will find what it needs, even though the file is somewhere else.</p>

<h3>Why Use Git to Manage Dotfiles?</h3>

<p>Git is a great tool for managing files that change over time. Dotfiles can change as we install new software or tweak our development environment. If we make a mistake, or if an installation script makes a mistake, we can use Git to roll back in history to a pre-mistake version of the dotfile.</p>

<h3>Don&rsquo;t Make All Dotfiles Public</h3>

<p>There are some dotfiles that you don&rsquo;t want to share publicly. For example, <code>.bash_history</code> contains all of the commands that have been executed in the shell. Do you really want the world that you sometimes <code>$ ssh myuserid@[embarassingdomainname].com</code>? Probably not. If you think that a dotfile might contain personal or confidential information, no need to broadcast it.</p>

<h3>Learning More About Dotfiles</h3>

<p>Most of my dotfiles, like <code>.bash_profile</code>, don&rsquo;t contain anything private. In fact, most of what I know about dotfiles has come from other developers via books, user groups, blogs, and spelunking through GitHub. Dotfile collections by <a href="https://github.com/hashrocket/dotmatrix">Hashrocket</a> and <a href="https://github.com/thoughtbot/dotfiles">Thoughtbot</a> are  especially good. My <code>~/.dotfiles</code> directory is available for public viewing on <a href="https://github.com/RayHightower/.dotfiles">GitHub</a>.</p>

<p>If you&rsquo;re doing something especially cool with your dotfiles, let&rsquo;s hear about it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recursion and Memoization]]></title>
    <link href="http://RayHightower.com/blog/2014/04/12/recursion-and-memoization/"/>
    <updated>2014-04-12T10:48:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/04/12/recursion-and-memoization</id>
    <content type="html"><![CDATA[<blockquote><p>To iterate is human, to recurse divine.
&nbsp;<br/>
~ L. Peter Deutsch</p></blockquote>

<p>Recursion is available in many high-level languages, including Ruby. Recursive solutions can be joyfully elegant. At the same time, the pursuit of elegance can lead to unexpected performance pitfalls.</p>

<p>Fortunately, we can use optimization techniques to address performance problems before they occur. Memoization is one technique in our arsenal.</p>

<!--more-->


<h3>Before Memoization</h3>

<p>Memoization was designed to solve a particular kind of problem. Consider a method called <code>fibo(n)</code> that calculates the <em>nth</em> number of the <a href="http://en.wikipedia.org/wiki/Fibonacci_number">Fibonacci</a> sequence.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Calculate the nth Fibonacci number, f(n).</span>
</span><span class='line'><span class="k">def</span> <span class="nf">fibo</span> <span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">n</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">value</span> <span class="o">=</span> <span class="n">fibo</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">fibo</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">value</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Display the Fibonacci sequence.</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">40</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">number</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;fibo(</span><span class="si">#{</span><span class="n">number</span><span class="si">}</span><span class="s2">) = </span><span class="si">#{</span><span class="n">fibo</span><span class="p">(</span><span class="n">number</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>The example runs, but performance slows down as <em>n</em> gets larger. Why? Because this method re-calculates all preceeding Fibonacci numbers every time it calculates a new <code>fibo(n)</code>. When we calculate Fibonacci numbers manually, we know better. Humans are smart enough to refer to earlier work. But the <code>fibo(n)</code> method does not manage time very well.</p>

<p>Is it possible for the <code>fibo(n)</code> method to remember the results of earlier calculations so that it can avoid doing work that is already done? Yes, through <a href="http://en.wikipedia.org/wiki/Memoization">memoization</a>.</p>

<h3>Memoization</h3>

<p>Memoization means recording the results of earlier calculations so that we don&rsquo;t have to repeat the calculations later. If our code depends on the results of earlier calculations, and if the same calculations are performed over-and-over again, then it makes sense to store interim results (jot results down on a &lsquo;memo&rsquo; = memoization) so that we can avoid repeating the math.</p>

<p>The Fibonacci example can be improved through memoization as follows.</p>

<ul>
<li>Create a place to store temporary results.</li>
<li>Before performing a calculation, find out if the calculation has
already been done. If so, use the stored result.</li>
<li>If this is our first time calculating a particular <code>fibo(n)</code>, store
the results for future use.</li>
</ul>


<p>Here&rsquo;s how memoization is implemented in the Fibonacci example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Fibonacci numbers WITH memoization.</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Initialize the memoization array.</span>
</span><span class='line'><span class="vi">@scratchpad</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="vi">@max_fibo_size</span> <span class="o">=</span> <span class="mi">50</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="vi">@max_fibo_size</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="vi">@scratchpad</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="ss">:notcalculated</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Calculate the nth Fibonacci number, f(n).</span>
</span><span class='line'><span class="k">def</span> <span class="nf">fibo</span> <span class="p">(</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="vi">@max_fibo_size</span>
</span><span class='line'>    <span class="k">return</span> <span class="s2">&quot;n must be </span><span class="si">#{</span><span class="vi">@max_fibo_size</span><span class="si">}</span><span class="s2"> or less.&quot;</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="n">n</span> <span class="o">&lt;=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">n</span>
</span><span class='line'>  <span class="k">elsif</span> <span class="vi">@scratchpad</span><span class="o">[</span><span class="n">n</span><span class="o">]</span> <span class="o">!=</span> <span class="ss">:notcalculated</span>
</span><span class='line'>    <span class="k">return</span> <span class="vi">@scratchpad</span><span class="o">[</span><span class="n">n</span><span class="o">]</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="vi">@scratchpad</span><span class="o">[</span><span class="n">n</span><span class="o">]</span> <span class="o">=</span> <span class="n">fibo</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">fibo</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="vi">@scratchpad</span><span class="o">[</span><span class="n">n</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Display the Fibonacci sequence.</span>
</span><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">50</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">number</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;fibo(</span><span class="si">#{</span><span class="n">number</span><span class="si">}</span><span class="s2">) = </span><span class="si">#{</span><span class="n">fibo</span><span class="p">(</span><span class="n">number</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Walking through the code&hellip; First we create a memoization array, a place to store the pre-calculated values. In this example, <code>@scratchpad[]</code> serves as our memoization array.</p>

<p>The <code>fibo(n)</code> method is similar to the one in the earlier example, with a few subtle differences. First, we need to determine whether we&rsquo;ve already calculated a particular value. Since we initialized all elements of the <code>@scratchpad</code> array with the <code>:notcalculated</code> symbol, it&rsquo;s easy to figure out where work needs to be done. If a Fibonacci number <code>fibo(n)</code> has already been calculated, we return the value stored at <code>@scratchpad[n]</code>. Otherwise, we calculate the new <code>fibo(n)</code> and store that value at <code>@scratchpad[n]</code> for later use.</p>

<h3>Performance Comparison</h3>

<p>The performance of the two programs is compared in this 1-minute video.</p>

<center><iframe src="http://RayHightower.com//player.vimeo.com/video/91841948" width="500" height="313" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></center>


<p>As the video shows, memoization is a performance booster.</p>

<h3>Sample Code</h3>

<p>Sample code related to this article can be found on <a href="https://github.com/RayHightower/fibonacci">GitHub</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[When in Doubt, Rake Clean]]></title>
    <link href="http://RayHightower.com/blog/2014/04/10/when-in-doubt-rake-clean/"/>
    <updated>2014-04-10T15:53:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/04/10/when-in-doubt-rake-clean</id>
    <content type="html"><![CDATA[<p>Earlier today, I upgraded from RubyMotion <code>v 2.24</code> to <code>v 2.26</code>. Immediately after the upgrade, I attempted to run a RubyMotion app that I’m working on. The result?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake
</span><span class='line'>
</span><span class='line'>     Build ./build/iPhoneSimulator-7.1-Development
</span><span class='line'>   Compile ./app/app_delegate.rb
</span><span class='line'>   Compile ./app/views/score_label.rb
</span><span class='line'>   Compile ./app/views/paddle_view.rb
</span><span class='line'>      Link ./build/iPhoneSimulator-7.1-Development/pong-rm4.app/pong-rm4
</span><span class='line'>Undefined symbols <span class="k">for </span>architecture i386:
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>clang: error: linker <span class="nb">command </span>failed with <span class="nb">exit </span>code 1 <span class="o">(</span>use -v to see invocation<span class="o">)</span>
</span><span class='line'>rake aborted!
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>What happened? It just ran a few minutes ago, right before the upgrade! Was RubyMotion broken? Was it time to reach out to the Twitterverse or Stack Overflow for assistance?</p>

<p>Not yet.</p>

<!--more-->


<h3>Cooler Heads</h3>

<p>Every time RubyMotion build an app, it stores the results in the <code>./build</code> directory. Since I had just done an upgrade, it was possible that remnants from a <code>v 2.24</code> build were interfering with my new <code>v 2.26</code> build. The solution?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake clean
</span><span class='line'>
</span><span class='line'>    Delete ./build
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>And now the app runs fine. Crisis averted. Back to work!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Open Source?]]></title>
    <link href="http://RayHightower.com/blog/2014/04/05/why-open-source/"/>
    <updated>2014-04-05T00:40:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/04/05/why-open-source</id>
    <content type="html"><![CDATA[<p>As members of the open source community, we have internalized the benefits of open source. Sometimes, knowing a topic so well can hinder us from explaining it to people who need to understand our work: Clients, customers, and employers. They need to understand us because they pay us. Understanding helps to build trust.</p>

<p>The topic <a href="http://RayHightower.com/blog/2014/02/22/what-is-open-source/">What is Open Source</a> is covered in earlier post by that title. This presentation covers some of the &ldquo;whys&rdquo; of open source in terms that matter to the people we serve: Clients, customers, and employers.</p>

<!--more-->


<center><script async class="speakerdeck-embed" data-id="e20291c09eb00131918d4a0f4a2b8270" data-ratio="1.29456384323641" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script></center>


<p>This presentation was delivered at the <a href="http://flourishconf.com/">Flourish 2014</a> conference at the University of Illinois at Chicago. I am grateful to the Flourish organizers and to UIC for inviting me to speak.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flourish Open Source Conference at UIC]]></title>
    <link href="http://RayHightower.com/blog/2014/03/31/flourish-open-source-conference-at-uic/"/>
    <updated>2014-03-31T23:42:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/03/31/flourish-open-source-conference-at-uic</id>
    <content type="html"><![CDATA[<p><a href="http://flourishconf.com">Flourish</a> is an open source conference to be held at the University of Illinois at Chicago on Saturday, April 5, 2014. The conference is run by university students and tickets are free.</p>

<p>Why go to Flourish? Because&hellip;</p>

<!--more-->


<ul>
<li>You like open source.</li>
<li>You want to know more about open source.</li>
<li>You want to meet people who are passionate about open source.</li>
<li>All (or some combination) of the above.</li>
</ul>


<h3>Not Just Software</h3>

<p>Linux may be the best known open source project, but open source is not just about software. At Flourish 2009 a speaker mentioned a funny little circuit board called “Arduino” during one of the presentations. I turned to my neighbor in the audience, and I asked “What’s an Arduino?”</p>

<p>My neighbor pulled an Arduino out of his backpack and showed it to me. Wow. Open source extends to hardware, too! Since then, the Arduino has become part of the <a href="http://www.windycityrails.org/youth/">WindyCityRails Youth Program</a>. Beyond microcontrollers, single-board Linux machines like the <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">Raspeberry Pi</a>, <a href="http://RayHightower.com/blog/2014/01/02/beaglebone-black-ubuntu-part-1/">Beaglebone Black</a>, and <a href="http://RayHightower.com/blog/2013/06/22/preparing-for-parallella-64-cores-installing-go-on-mac-os-x/">Parallella</a> have joined the open source hardware ranks.</p>

<h3>See You There</h3>

<p>Thank you, Flourish organizers, for inviting me to speak this year. UIC is where I first learned about open source, Linux, and the web. My appreciation for UIC extends beyond my CS degree.</p>

<p>Great things happen when like-minded people come together to exchange ideas. I look forward to seeing you at Flourish 2014!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How .gitignore Works]]></title>
    <link href="http://RayHightower.com/blog/2014/03/25/how-gitignore-works/"/>
    <updated>2014-03-25T18:20:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/03/25/how-gitignore-works</id>
    <content type="html"><![CDATA[<p>Earlier today I ran into a Git issue within a RubyMotion project. I added a directory to the project&rsquo;s <code>.gitignore</code> file, but Git seemed to ignore my ignore. Expressed more clearly, Git continued to track a directory that I explicitly told it to ignore.</p>

<p>What?</p>

<p>Either there was a bug in Git, or my understanding of <code>.gitignore</code> was incomplete. It was time for me to dig in and learn more about <code>.gitignore</code>.</p>

<!--more-->


<h3>What I Learned About .gitignore</h3>

<p>The root cause of my problem: Once Git has begun tracking a file or directory, adding it to <code>.gitignore</code> changes nothing. Git will continue to track the file unless we explicitly tell Git to stop tracking the file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git rm --cached <span class="o">[</span>filename<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Or, if you want to stop tracking an entire directory (like me in this case)&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git rm -r --cached <span class="o">[</span>directoryname<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>-r</code> flag will tell Git to stop tracking all of the sub-directories and files within <code>directoryname</code>, recursively.</p>

<p>Git was behaving exactly as designed.</p>

<h3>Penalty</h3>

<p>I should have known this a long time ago. My penalty: A public admission :&ndash;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CocoaConf Chicago Recap]]></title>
    <link href="http://RayHightower.com/blog/2014/03/10/cocoaconf-chicago-recap/"/>
    <updated>2014-03-10T11:46:00-04:00</updated>
    <id>http://RayHightower.com/blog/2014/03/10/cocoaconf-chicago-recap</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/cocoaconf-2014.jpg' width='' height='' alt='Cool stuff from CocoaConf.' title='Cool stuff from CocoaConf.'><span class='caption-text'>Cool stuff from CocoaConf.</span></span></p>

<blockquote><p>One purpose of a conference is to help you to spot trends while there&rsquo;s still time to reap the benefits of being an early adopter.
&nbsp;<br/>
~Brian Marick at <a href="http://scna.softwarecraftsmanship.org/">SCNA 2013</a></p></blockquote>

<p>Early adopters on Apple&rsquo;s Mac OS X and iOS platforms flock to <a href="http://cocoaconf.com/">CocoaConf</a>, a multi-city conference for developers. Tickets are slightly easier to get than <a href="http://en.wikipedia.org/wiki/Wwdc">WWDC</a>; CocoaConf consistently sells out.</p>

<p>CocoaConf&rsquo;s presenters are practicing developers, actively building real software every day. They come to CocoaConf to share their experiences in a wonderful upward-spiral of technical learning. Here are a few highlights from the latest CocoaConf, held March 7-8 near Chicago.</p>

<!--more-->


<h3>Customers Will Pay for Services</h3>

<p><a href="https://twitter.com/justin">Justin Williams</a> kicked things off with a keynote titled <em>10 Things I Think I Think</em>. Williams recently acquired <a href="http://glassboard.com/">Glassboard</a>, so his developer skills are blended with the insights of a business owner. His list of ten included one approach to making money from mobile apps: Forget about selling a million copies in the App Store. Instead, create a service, charge a monthly fee for the service, and give the app away for free so customers can engage with the service. Engaged customers will continue to pay the monthly fee. When customers are served well, they will pay.</p>

<h3>Effective iOS 7 Networking</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/afnetworking-charles.png' width='' height='' alt='Charles shows network connections.' title='Charles shows network connections.'><span class='caption-text'>Charles shows network connections.</span></span>
Customer-focused mobile apps usually communicate with other software via the web. <a href="http://twitter.com/subdigital">Ben Scheirman</a> shared his experiences in building iOS apps that communicate with web services. Several questions are raised when we build apps like this, namely:</p>

<ul>
<li>How do we include communication capabilities without sacrificing performance?</li>
<li>If the mobile app requests information from a web service, and the service is unavailable (or slow) how do we avoid frustrating the user?</li>
</ul>


<p><code>NSURLSession</code>, introduced with iOS 7, lets us upload and download in the background. Users are kept happy because the app continues to function in the foreground. Scheirman&rsquo;s <a href="https://speakerdeck.com/subdigital/effective-network-programming-in-ios-7">slides</a> and <a href="https://github.com/subdigital/mods-2013">sample code</a> give more details.</p>

<p>It is also interesting to note what tools the presenters use in their
daily work. Scheirman uses <a href="http://www.charlesproxy.com/">Charles</a>
to monitor network traffic between machines, and to track down hiccups.</p>

<h3>Xcode Walkabout</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/xcode-git-commit.png' width='' height='' alt='Showing Git commit messages in Xcode.' title='Showing Git commit messages in Xcode.'><span class='caption-text'>Showing Git commit messages in Xcode.</span></span>
Most of my iOS time is spent with <a href="http://RayHightower.com/blog/2013/01/12/why-i-use-vim/">Vim</a> and <a href="http://RayHightower.com/blog/2012/10/29/building-ios-apps-with-ruby-motion/">RubyMotion</a>. I use Xcode mainly to learn things that I can apply to RubyMotion. Still, <a href="http://twitter.com/savinola">Laura Savino</a>&rsquo;s exploration of Xcode proved valuable.</p>

<p>Like many developers on the Apple platforms, Savino has a love/hate relationship with Xcode. She almost titled her talk &ldquo;stupid little buttons that don&rsquo;t even look like buttons.&rdquo; Savino summarized several years of Xcode immersion and pair programming into 60 minutes of little-known tips and tricks. For example, Xcode plays nicely with Git (you can even show commit messages within the IDE). And it&rsquo;s possible to use Vim key bindings while editing files.</p>

<h3>Sprite Kit</h3>

<p><a href="http://twitter.com/kognate">Josh Smith</a>&rsquo;s Sprite Kit presentation was full of gotcha-eliminating information. For example, the coordinate systems for Sprite Kit and UIKit are inverted. I&rsquo;m sure this is documented somewhere, but I didn&rsquo;t know about it! The bottom line with Sprite Kit: We can add animation to our apps without doing all of the fundamental work. Saves time.</p>

<p>Slides and code are posted in a single <a href="https://github.com/kognate/presentations">repo on GitHub</a>. Worth looking at.</p>

<h3>Parallel Computing with OpenCL</h3>

<p>The parallel computing talk by <a href="http://twitter.com/hyperjeff">Jeff Biggus</a> was the most mind-blowing session of CocoaConf, for me. The presentation was exciting because it tied our current set of tools (like <a href="https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/Reference/reference.html">GCD</a>) with high performance computing work currently underway at universities and at corporations like NVidia. When theory blends with application, great things can be achieved.</p>

<p>Biggus shared some of the work of <a href="https://www.khronos.org/opencl/">OpenCL</a>, a standard designed for cross-platform parallel computing. We care about parallel computing because&hellip;</p>

<ul>
<li>Moore&rsquo;s Law has just about run its course.</li>
<li>Engineers have packed transistors about as tightly as they can on silicon.</li>
</ul>


<p>Unless we can figure out how to <a href="http://en.wikipedia.org/wiki/Montgomery_Scott">rewrite the laws of physics</a>, the next advances in computing performance will come from making processors work together without stepping on each other&rsquo;s toes.</p>

<h3>The Klein Family</h3>

<p>2014 marks CocoaConf&rsquo;s third year in the Chicago area. The conference is run by Dave and Debbie Klein and their 14 children. <a href="http://cocoaconf.com/family">About The Family Behind CocoaConf</a> gives details.</p>

<p>Thank you, Klein family, for another great CocoaConf!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing MacVim on OS X Mavericks]]></title>
    <link href="http://RayHightower.com/blog/2014/03/04/fixing-macvim-on-osx-mavericks/"/>
    <updated>2014-03-04T14:48:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/03/04/fixing-macvim-on-osx-mavericks</id>
    <content type="html"><![CDATA[<p>Experience told me to delay upgrading to OS X Mavericks for as long as possible because the upgrade would likely break my dev environment. Sure enough, the upgrade broke <a href="http://RayHightower.com/blog/2013/01/12/why-i-use-vim/">MacVim</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>which mvim
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>The &lsquo;nix <code>which</code> command returned a null response when asked about MacVim. Not cool, Mavericks!</p>

<!--more-->


<p>Fortunately, I’m running <a href="http://RayHightower.com/blog/2014/02/12/homebrew-fundamentals/">Homebrew</a>. After the standard <code>brew doctor</code> and <code>brew update</code>, the following resolved the MacVim problem:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>brew uninstall macvim
</span><span class='line'>Uninstalling /usr/local/Cellar/macvim/7.4-70...
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>followed by…</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>brew install <span class="nv">macvim</span>
</span><span class='line'><span class="o">==</span>&gt; Downloading https://github.com/b4winckler/macvim/archive/snapshot-72.tar.gz
</span><span class='line'><span class="c">######################################################################## 100.0%</span>
</span><span class='line'><span class="o">==</span>&gt; ./configure --with-features<span class="o">=</span>huge --enable-multibyte --with-macarchs<span class="o">=</span>x86_64 --enable-perlinterp --enable-rubyinterp --enable-tcli
</span><span class='line'><span class="o">==</span>&gt; <span class="nv">make</span>
</span><span class='line'><span class="o">==</span>&gt; Caveats
</span><span class='line'>.app bundles were installed.
</span><span class='line'>Run <span class="sb">`</span>brew linkapps<span class="sb">`</span> to symlink these to /Applications.
</span><span class='line'><span class="o">==</span>&gt; Summary
</span><span class='line'>🍺  /usr/local/Cellar/macvim/7.4-72: 1799 files, 28M, built in 37 seconds
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>And now…</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>which mvim
</span><span class='line'>/usr/local/bin/mvim
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Whew. Homebrew saves the day again!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Is Open Source?]]></title>
    <link href="http://RayHightower.com/blog/2014/02/22/what-is-open-source/"/>
    <updated>2014-02-22T16:41:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/02/22/what-is-open-source</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/linux-penguin.png' width='' height='' alt='The Linux penguin.' title='The Linux penguin.'><span class='caption-text'>The Linux penguin.</span></span>
Entrepreneurs, especially those outside of software development, may find this article useful.</p>

<h3>When Performance Matters</h3>

<p>Over seventy percent of the web servers on the planet run Linux, the open source operating system. Google, Facebook, and Amazon all run Linux. They bet their companies on this decision every day.</p>

<p>Given that thousands of successful companies have bet their livelihood on open source, an observer might ask these questions:</p>

<ul>
<li>What is open source?</li>
<li>Why should one care about open source?</li>
<li>How can a company profit from software that is given away for free?</li>
</ul>


<!--more-->


<h3>Source Code, Executable Code</h3>

<p>First, a few definitions. Source code is a human-modifiable form of software. It’s software as written by programmers. Source code must be translated into executable code (either compiled or interpreted) before a computer can run it.</p>

<p>Water is a useful metaphor for this discussion. Water can exist in three different states (steam, liquid, and ice) without changing its chemical properties. It’s still water. Likewise, software can exist as source code or executable code – it’s still software. We use water in one of its three states depending on whether we want to wash a car (liquid), cool a drink (ice), or clean a carpet (steam).</p>

<p>In the world of software, executable code is difficult for humans to read, but easily executed by computers. Source code is easily read and modified by humans, but computers cannot execute it. Source code must be compiled or interpreted before a computer can execute it.</p>

<h3>One Way Translation</h3>

<p>Translating source code into executable code is a one-way street. Once a programmer has compiled source code into executable code, it is virtually impossible to convert it back into source code. You might think of a compiler as a blender that chops the food into a form easily digestible by the computer. After it’s chopped, the food never returns to its original form.</p>

<p>That’s why programmers always keep a copy of the source code handy. It might be necessary to make changes (fix bugs) and re-compile.</p>

<p>Trade secrets that are hidden in executable code can be easily read in source code. So developers go to great lengths to protect their source code, except in the open source community.</p>

<h3>Closed Source Tradition</h3>

<p>Most of today’s business software is closed source. Two examples: Microsoft Office and Apple iWork. Both Microsoft and Apple consider the source code for their respective office suites to be highly confidential. You will never (legally) download the source code for a closed source product. Security is so tight at Microsoft, for example, that engineers are only allowed to view that portion of the source code that is relevant to their current project.</p>

<p>Contrast that against open source software. Open source products make the source code freely available for viewing, comments, and modification by the software community at large.</p>

<h3>Open Source Chaos?</h3>

<p>But doesn&rsquo;t such openness lead to chaos? Intuitively, you would think so, but it doesn&rsquo;t. The culture of the open source community has its own rules of conduct that most members willingly follow. Rules are enforced by the community in ways that developers respond to.</p>

<p>It is difficult to imagine an apparently chaotic system that produces robust software. How counter-intuitive! But a long list of successful open source projects (available through your favorite search engine) shows that the method works. Eric S. Raymond explores open source cultural norms in his book <a href="http://www.amazon.com/Cathedral-Bazaar-Musings-Accidental-Revolutionary-ebook/dp/B0026OR3LM">The Cathedral and the Bazaar</a>.</p>

<h3>The Banking Metaphor</h3>

<p>Some makers of security software believe that hiding their source code will prevent malcontents from finding vulnerabilities and exploiting them. Their reasoning is like that of a bank owner who keeps the building blueprints secret so thieves don’t know how to drill the safe from next door.</p>

<p>Other security experts disagree. They want many people (including malcontents) to view the code so that vulnerabilities can be discovered and patched early. Their philosophy could be summed up in a statement by the creator of Linux:</p>

<blockquote><p>Given enough eyeballs, all bugs are shallow.
<br/>&nbsp;
~Linus Torvalds</p></blockquote>

<p>In other words, when thousands of developers are working on the same project they are likely to be widely dispersed across the code. Wide coverage means that a given bug is more likely to be discovered by at least one developer.</p>

<p>In our banking metaphor, the open source company would be like a bank owner who wants many people to review the blueprints, find the weak spots, and fix security holes before the bank gets robbed.</p>

<h3>It’s Not All-or-Nothing</h3>

<p>Choosing an open or closed source strategy is not an all-or-nothing decision. Google, the busiest search engine on the web, has bet the company on open source software. And yet their most strategic software, the secret mathematical engine that drives their search results, remains closed. So how does a company decide what to open and what to close?</p>

<p>Open source works when the upside of sharing outweighs the downside of exposed code. In the Google example, using and contributing to Linux gives Google a very stable operating platform at a relatively low cost. In effect they are leveraging the time and talent of thousands of developers around the world, while those developers are also leveraging Google’s expertise.</p>

<p>It doesn&rsquo;t matter that Google&rsquo;s competitors also benefit from that same stable Linux platform because Google differentiates itself through advanced search technology. By leveraging the community for assistance with the platform (Linux, Apache, and other tools), Google frees up engineering time and talent to focus on their secret sauce: Search methodology and mathematics.</p>

<h3>If Your Business Isn’t Software</h3>

<p>So&hellip; If you don&rsquo;t run a software company, how can you benefit from open source?</p>

<p>There’s always a chance that open source won’t work for your company. Maybe you run an enterprise that doesn’t benefit from the web. In that case, your current software options may suit you just fine.</p>

<p>Of course, you may have already benefited from open source. There is at least a 70% chance that your company’s web site runs on Linux. If that’s the case, then rest assured that you’re running on a very stable and robust platform.</p>

<h3>Think Big, Start Small for ROI</h3>

<p>If you really want to see ROI from open source, encourage your technical team (software developers, network support, etc.) to explore open source tools. Chances are that they’ve already experimented with open source and they’re waiting for an opportunity to do an official company project.</p>

<p>Start small, perhaps with an automated network monitoring project or a small database. As you explore the technology, new ideas will become apparent to you. View this as a way to accelerate and strengthen the software development process.</p>

<h3>Open Source and Automobiles</h3>

<p>BMW is arguably the best automotive engineering company on the planet. Does BMW invent the wheel every time they design a new automobile? Absolutely not. BMW leverages thousands of years of &ldquo;open source&rdquo; wheel technology, and they focus their design energy in areas where they can make a difference: Engine, transmission, suspension, and luxury amenities. A similar model can be applied to software development. In fact, it already has.</p>

<h3>Suggested Reading</h3>

<p><a href="http://www.amazon.com/Cathedral-Bazaar-Musings-Accidental-Revolutionary-ebook/dp/B0026OR3LM">The Cathedral and the Bazaar</a>, by Eric S. Raymond. The author is both participant and anthropologist in the open source community.</p>

<p><em>Note: An earlier version of this article was published at <a href="http://wisdomgroup.com">WisdomGroup.com</a></em>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SGI & Big Data]]></title>
    <link href="http://RayHightower.com/blog/2014/02/17/sgi-and-big-data/"/>
    <updated>2014-02-17T14:46:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/02/17/sgi-and-big-data</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/sgi-logo-1990s.png' width='' height='' alt='SGI's logo from the 1990s.' title='SGI's logo from the 1990s.'><span class='caption-text'>SGI&rsquo;s logo from the 1990s.</span></span>
<a href="http://sgi.com">Silicon Graphics International Corporation (SGI)</a> computers rendered the special effects for the original <a href="http://en.wikipedia.org/wiki/Jurassic_Park">Jurassic Park</a> movie. Computer enthusiasts coveted SGI machines throughout the 1990s.</p>

<p>But success in the computer industry is fleeting. A few years after Jurassic Park, a convergence of tech advances (Moore&rsquo;s Law, x86 architecture, and Linux) made it possible for commodity PCs to perform as well as SGI&rsquo;s premium workstations. Wall Street traders and other power users abandoned workstations in favor of Linux-based PCs. High-end makers like SGI fell on hard times.</p>

<p>Today, SGI is fighting back. The company is blending x86, Linux, and (buzzword alert) big data to attack the high performance computing market. The vision was presented at this month&rsquo;s <a href="http://www.meetup.com/chicagoacm/events/163287562/">Chicago ACM</a> meeting by Brian Freed, VP of Strategy for SGI.</p>

<!--more-->


<h3>What is Big Data?</h3>

<p>Freed shared a definition of big data from <a href="http://strata.oreilly.com/2012/01/what-is-big-data.html">Edd Dumbill&rsquo;s O&#8217;Reilly Radar article</a>. Big data is characterized by volume (lots of it), variety (it&rsquo;s unstructured), and velocity (the data changes quickly).</p>

<p>In the words of the O&#8217;Reilly author&hellip;</p>

<blockquote><p>Big data is data that exceeds the processing capacity of conventional database systems. The data is too big, moves too fast, or doesn’t fit the strictures of your database architectures. To gain value from this data, you must choose an alternative way to process it.</p>

<p>~Edd Dumbill</p></blockquote>

<p>Definitions are fine, but it&rsquo;s more important to understand <em>why</em> a company might care about big data. Here are a few examples that Freed shared during the ACM meeting.</p>

<h3>Example: Fraud Detection with Big Data</h3>

<p>Consider one challenge faced by credit card companies. When a credit card is presented for an online purchase, how does the authorizing body know if the charge is legitimate? Can legitimacy be determined in a timely fashion, before an impatient buyer abandons a slow seller for a quicker seller?</p>

<p>Sellers who decide too quickly will suffer fraud. Sellers who decide too slowly will lose customers. The problem is amplified because millions of shoppers are clicking the &ldquo;buy now&rdquo; button simultaneously, and they all expect an answer <em>right now</em>.</p>

<p>Traditional fraud detection systems could measure just a few potential fraud criteria within the allowed time window. SGI solves the problem with <a href="http://hadoop.apache.org/">Hadoop clusters</a> running on SGI hardware. This big data design is able to examine each transaction deeper, and render a yes/no decision faster. Buyers are happier because they can complete a purchase faster. Companies are happier because fraud is reduced.</p>

<p>Big data helps credit card companies to make better authorization decisions in less time.</p>

<h3>Example: Auto Manufacturing</h3>

<p>Some problems, like credit authorization, require a quick response.  Other problems, like manufacturing, require the problem solver to crunch large volumes of data.</p>

<p>Consider an auto manufacturer. Every system in the modern automobile is controlled by software on silicon. Where software runs, data can be collected. The data piles up rapidly over time.</p>

<p>Manufacturers have discovered some unexpected benefits of collecting so much data. For example, they can identify trends like common failures among components, and use that data to improve future components. They can spot hidden trends, like geographic issues related to extreme cold or heat, and then design parts that are specially equipped for the target environment.</p>

<p>For these particular manufacturing examples, handling huge volumes of data is more important than delivering a quick answer. Insights that lead to quality improvements can be delivered in hours, and that&rsquo;s fast enough for the designers. Before big data, many design decisions were driven by instinct and experience alone. Big data helps auto companies to make more informed decisions.</p>

<h3>Pitfalls of Big Data</h3>

<p>One big pitfall is trying to use the big data <em>hammer</em> for every <em>nail</em> in sight, whether the solution fits the problem or not. It&rsquo;s the same hazard we face with any new technology. We run the risk of using a sledgehammer when a fly swatter would do.</p>

<p>A few ways to avoid the pitfalls: Start small. Have goals. And, like any good agile software developer, iterate. In Freed&rsquo;s words&hellip;</p>

<blockquote><p>Successful implementation of big data is not an event. It is an iterative process where we continuously learn over time.</p></blockquote>

<h3>About Chicago ACM</h3>

<p><a href="http://www.meetup.com/chicagoacm/">The Chicago Chapter of the Association for Computing Machinery (Chicago ACM)</a> is on fire. December&rsquo;s meeting featured a supercomputing presentation by <a href="http://RayHightower.com/blog/2013/12/12/high-performance-computing-at-acm/">Sharan Kalwani of Fermilab</a>. The February meeting was all about SGI&rsquo;s push into big data, and next month will focus on the Internet of Things (IoT). The organizers are assembling an exciting combination of events. Looking forward to more!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Homebrew Fundamentals]]></title>
    <link href="http://RayHightower.com/blog/2014/02/12/homebrew-fundamentals/"/>
    <updated>2014-02-12T14:20:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/02/12/homebrew-fundamentals</id>
    <content type="html"><![CDATA[<p>Spend enough time developing software on Mac OS X, and you will eventually need to install libraries that were written for Unix, but not specifically for OS X. Fortunately we have <a href="http://brew.sh/">Homebrew</a>, which makes it easier to install Unix libraries on the Mac.</p>

<h3>Why Homebrew?</h3>

<p>Before installing any new software, it is helpful to have a clear view of <em>why</em> we need it.</p>

<p>Homebrew is a package manager. It differs from earlier package managers like <a href="http://www.finkproject.org/">Fink</a> and <a href="http://www.macports.org/">MacPorts</a> because it is written in Ruby and based on Git. The Ruby/Git foundation means that developers from around the planet can easily contribute to Homebrew&rsquo;s growth.</p>

<p>Before package managers, developers who needed a particular library would have to:</p>

<ul>
<li>Manually download source code for the library.</li>
<li>Manually compile using <code>gcc</code> or another compiler.</li>
<li>Resolve dependencies manually.</li>
</ul>


<p>Manually, manually, manually&hellip; The old way was long and error-prone. <a href="https://twitter.com/mxcl">Max Howell</a> created Homebrew to download, compile, and resolve dependencies automatically. Now developers can focus more attention on solving problems that are directly related to their work.</p>

<!--more-->


<h3>How to Install Homebrew</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/xcode-app-store.png' width='' height='' alt='Homebrew depends on Xcode.' title='Homebrew depends on Xcode.'><span class='caption-text'>Homebrew depends on Xcode.</span></span>
Some parts of Homebrew require Xcode, Apple&rsquo;s environment for developing software on Mac OS X. Make sure you have Xcode installed on your Mac. Xcode is available for free in the Mac App Store.</p>

<p>With Xcode installed, you can install Homebrew by pasting the following
command into a terminal window.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)&quot;</span>install
</span></code></pre></td></tr></table></div></figure>


<p>The script will walk you through the installation process. If you would like to read the script before installation, you can visit the <a href="https://github.com/Homebrew/homebrew">Homebrew repo on Github</a>.</p>

<h3>Installing Packages</h3>

<p>A list of <a href="https://github.com/Homebrew/homebrew/tree/master/Library/Formula">available Homebrew packages</a> is maintained on GitHub.</p>

<p>To install a package, say <code>imagemagick</code> for example&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install imagemagick
</span></code></pre></td></tr></table></div></figure>


<p>Before Homebrew, installing <code>imagemagick</code> was long and arduous. With Homebrew, the installation and compilation steps still take awhile. But dependencies are resolved by Homebrew, and little user interaction is required after the first step.</p>

<h3>Maintaining Homebrew</h3>

<p>Developers from around the world contribute to Homebrew, so the tool gets improved often. To check the health of your Homebrew installation, use <code>brew doctor</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew doctor
</span><span class='line'>Warning: Your Homebrew is outdated.
</span><span class='line'>You haven<span class="err">&#39;</span>t updated <span class="k">for </span>at least 24 hours, this is a long <span class="nb">time </span>in brewland!
</span><span class='line'>To update Homebrew, run <span class="sb">`</span>brew update<span class="sb">`</span>.
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p><code>brew update</code> will apply recent updates.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew update
</span><span class='line'>Updated Homebrew from f83642fc to cfad513e.
</span><span class='line'><span class="o">==</span>&gt; New Formulae
</span><span class='line'>...
</span><span class='line'><span class="o">==</span>&gt; Updated Formulae
</span><span class='line'>...
</span><span class='line'><span class="o">==</span>&gt; Deleted Formulae
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<h3>Looking at Packages</h3>

<p>There are several ways to view the packages that have been installed on a system via Homebrew. Use <code>brew list</code> at the command prompt to get a quick view of what Homebrew has installed.</p>

<p>Even better: <code>brew server</code> will launch a local <a href="http://www.sinatrarb.com/">Sinatra</a> app, and then you can point a browser to <code>http://localhost:4567</code> for a web-enabled view of the installed packages.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew server
</span><span class='line'>View our tasting menu at http://localhost:4567/
</span><span class='line'>Use <span class="s2">&quot;Control-C&quot;</span> to exit.
</span><span class='line'>
</span><span class='line'><span class="o">[</span>2014-02-12 16:33:18<span class="o">]</span> INFO  WEBrick 1.3.1
</span><span class='line'><span class="o">[</span>2014-02-12 16:33:18<span class="o">]</span> INFO  ruby 1.8.7 <span class="o">(</span>2012-02-08<span class="o">)</span> <span class="o">[</span>universal-darwin12.0<span class="o">]</span>
</span><span class='line'><span class="o">==</span> Sinatra/1.3.3 has taken the stage on 4567 <span class="k">for </span>development with backup from WEBrick
</span><span class='line'><span class="o">[</span>2014-02-12 16:33:18<span class="o">]</span> INFO  WEBrick::HTTPServer#start: <span class="nv">pid</span><span class="o">=</span>96694 <span class="nv">port</span><span class="o">=</span>4567
</span></code></pre></td></tr></table></div></figure>


<p><span class='caption-wrapper center'><img class='caption' src='http://RayHightower.com/images/brew-server.png' width='' height='' alt='Browsing locally-installed Homebrew packages.' title='Browsing locally-installed Homebrew packages.'><span class='caption-text'>Browsing locally-installed Homebrew packages.</span></span></p>

<h3>Making Your Own Packages</h3>

<p>Homebrew is Ruby-based, so Rubyists can create their own packages.  Details can be found in the (continuously updated) <a href="https://github.com/Homebrew/">Homebrew repo on GitHub</a>.</p>

<h3>Conclusion</h3>

<p>Enjoy Homebrew!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Rubinius Using RVM]]></title>
    <link href="http://RayHightower.com/blog/2014/02/06/installing-rubinius-using-rvm/"/>
    <updated>2014-02-06T18:17:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/02/06/installing-rubinius-using-rvm</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://RayHightower.com/images/rubinius.png">
<a href="http://rubini.us/">Rubinius</a> is an implementation of the Ruby language designed for concurrency. The lead developer of Rubinius, <a href="http://twitter.com/brixen">Brian Shirai</a>, will present Rubinius at ChicagoRuby on March 4, 2014. ChicagoRuby will follow-up with a Rubinius-themed hack night on March 12th. <a href="http://www.meetup.com/ChicagoRuby/events/114749352/">Details</a>.</p>

<p>To prepare for the Rubinius events, some people may choose to install Rubinius locally. RVM makes the process smooth.</p>

<!--more-->


<h3>RVM Recap</h3>

<p><a href="http://rayhightower.com/blog/2013/05/16/upgrading-ruby-with-rvm/">Ruby Version Manager (RVM)</a> is an awesome tool that enables developers to:</p>

<ul>
<li>install multiple versions of Ruby on one system,</li>
<li>bounce between the different versions, and</li>
<li>to do all of that with minimal headaches.</li>
</ul>


<p>Similar tools exist, but RVM is the one that has always worked for me.  If you don&rsquo;t have RVM installed, detailed installation instructions can be found at <a href="http://rvm.io">http://rvm.io</a>.</p>

<h3>Get the Latest RVM</h3>

<p>These instructions work on Mac OS X v10.8.5. The same steps will probably work on Linux, except for the references to Homebrew.</p>

<p>First, make sure you&rsquo;re running the latest version of RVM.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm get head
</span><span class='line'>Downloading https://get.rvm.io
</span><span class='line'>Downloading https://github.com/wayneeseguin/rvm/archive/master.tar.gz
</span><span class='line'>
</span><span class='line'>Upgrading the RVM installation in /Users/rth/.rvm/
</span><span class='line'>    RVM PATH line found in /Users/rth/.bashrc /Users/rth/.zshrc.
</span><span class='line'>    RVM sourcing line found in /Users/rth/.bash_profile /Users/rth/.zprofile.
</span><span class='line'>    Migrating environment ruby-1.9.2-p290 to use with <span class="s1">&#39;gem-wrappers&#39;</span> gem.
</span><span class='line'>
</span><span class='line'>     …
</span><span class='line'>
</span><span class='line'>     Installing gem-wrappers gem in 3 gemsets.
</span><span class='line'>Upgrade of RVM in /Users/rth/.rvm/ is complete.
</span><span class='line'>
</span><span class='line'>     …
</span><span class='line'>
</span><span class='line'>In <span class="k">case </span>of problems: http://rvm.io/help and https://twitter.com/rvm_io
</span><span class='line'>
</span><span class='line'>RVM reloaded!
</span><span class='line'>
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Next, Install Rubinius</h3>

<p>As of this writing, Rubinius can operate in 1.8 language mode (the default) or 1.9 language mode. Installing in 1.9 mode requires an additional command line flag, shown below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm install rbx --1.9
</span></code></pre></td></tr></table></div></figure>


<h3>Testing the Rubinius Installation</h3>

<p>First, let&rsquo;s make sure that RVM shows the new Rubinius (rbx) installation.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm list
</span><span class='line'>
</span><span class='line'>rvm <span class="nv">rubies</span>
</span><span class='line'>
</span><span class='line'><span class="o">=</span>&gt; rbx-2.2.4 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>   ruby-1.9.2-p290 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'> * ruby-1.9.3-p484 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>   ruby-2.0.0-p353 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># =&gt; - current</span>
</span><span class='line'><span class="c"># =* - current &amp;&amp; default</span>
</span><span class='line'><span class="c">#  * - default</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s always good to have multiple ways to verify information.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby --version
</span><span class='line'>rubinius 2.0.0.n37 <span class="o">(</span>1.9.3 6d611c7a 2014-02-06 JI<span class="o">)</span> <span class="o">[</span>x86_64-darwin12.5.0<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>And now, let&rsquo;s do a quick &ldquo;Hello World&rdquo; test drive using the Rubinius
version of <code>irb</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>irb
</span><span class='line'>rbx-2.2.4 :001 &gt; p <span class="s1">&#39;Hello World, from Rubinius&#39;</span>
</span><span class='line'><span class="s2">&quot;Hello World, from Rubinius&quot;</span>
</span><span class='line'> <span class="o">=</span>&gt; <span class="s2">&quot;Hello World, from Rubinius&quot;</span>
</span><span class='line'>rbx-2.2.4 :002 &gt; quit
</span><span class='line'>
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Post Installation Notes</h3>

<p>The installation script found two outdated Homebrew-installed packages on my system: <code>automake</code> and <code>openssl</code>. It would have been better for me to upgrade Homebrew and related packages <em>before</em> installing Rubinius.</p>

<p>Why install Rubinius? Why do we care about concurrency? These are two questions I expect to explore through my new Rubinius installation.</p>

<h3>Come Hack With Rubinius</h3>

<p>If March 2014 finds you in the Chicago area, you&rsquo;re invited to visit ChicagoRuby for some back-to-back Rubinius action. See <a href="http://www.meetup.com/ChicagoRuby/events/114749352/">http://meetup.com/chicagoruby</a> for details.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Exploring Controversial Coding Topics at 8th Light]]></title>
    <link href="http://RayHightower.com/blog/2014/02/03/exploring-controversial-coding-topics-at-8th-light/"/>
    <updated>2014-02-03T12:11:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/02/03/exploring-controversial-coding-topics-at-8th-light</id>
    <content type="html"><![CDATA[<p><a href="http://8thlight.com">8th Light</a> recently hosted a panel discussion on Controversial Coding Topics. I was honored to share the panel with two technology leaders whom I admire: <a href="http://twitter.com/markrickmeier">Mark Rickmeier</a> of <a href="http://tablexi.com">Table XI</a> and <a href="http://twitter.com/coreyhaines">Corey Haines</a> of <a href="http://wavetable.com">Wavetable</a>. <a href="http://twitter.com/little_fig">Rachel Feigenbaum</a> of 8th Light organized the event.</p>

<!--more-->


<center><iframe src="http://RayHightower.com//player.vimeo.com/video/84793305" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></center>


<h3>Topics Covered</h3>

<p>Some of the topics covered during the discussion:</p>

<ul>
<li>Hiring. What do you look for when building a team?</li>
<li>Establishing team standards.</li>
<li>Balancing professional time with personal time. Don&rsquo;t work 12-hour
days!</li>
</ul>


<h3>Gratitude</h3>

<p>Thank you 8th Light for making this happen.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Environment of Respect, 2nd Iteration]]></title>
    <link href="http://RayHightower.com/blog/2014/01/28/an-environment-of-respect-2nd-iteration/"/>
    <updated>2014-01-28T07:08:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/01/28/an-environment-of-respect-2nd-iteration</id>
    <content type="html"><![CDATA[<p>Thank you to everyone who offered feedback on <a href="http://RayHightower.com/blog/2014/01/21/an-environment-of-respect/">An Environment of Respect</a>, which included an early draft of the WindyCityRails Code of Conduct.</p>

<p>The frank and earnest exchange of ideas was educational. Some of the feedback was positive, on the order of &ldquo;we&rsquo;re all colleagues, we treat each other with respect, that&rsquo;s good.&rdquo;</p>

<p>However, I paid special attention to the negative feedback because it surprised me. Surprise happens when I face something that I do not understand. When I encounter something that I do not understand, there&rsquo;s an opportunity for learning.</p>

<p>So I did what I always do when I need to learn more. I spoke with people who know more than me.</p>

<!--more-->


<h3>Wise Counsel</h3>

<p>Several people in our industry were generous when I asked for advice. One technology veteran summed it up this way:</p>

<blockquote><p>You wrote a code of conduct for an Environment of Respect. 99.9% of the people will know what that means, and they can even function well without a code. But a code of conduct needs to written for an Environment of Hostility&hellip; for the one fool who doesn&rsquo;t know how to act.</p></blockquote>

<p>In a discussion about reducing bureaucracy, one developer offered this view:</p>

<blockquote><p>Think of it less as bureaucracy and more along the lines of “In case of emergency, break glass and help is on the way.”</p></blockquote>

<p>I am grateful to everyone who took the time to share their thoughts.</p>

<h3>Verbose and Draconian? Not Here.</h3>

<p>Some of the advice seemed to point toward a more verbose and draconian code of conduct, like the ones suggested by a few people last week. Not good. If we have a code, it&rsquo;s better to avoid the threatening tone. WindyCityRails is a community of colleagues who treat each other with respect.</p>

<p>Fortunately, one member of our team found a code that works. Every member of the community is treated like an independent-thinking adult who respects the rights of others. Expectations are clear, and the threatening tone is gone.</p>

<h3>Ruby DCamp: Thanks</h3>

<p><a href="http://twitter.com/elight">Evan Light</a> wrote the original version of this code of conduct for <a href="http://rubydcamp.org/">Ruby DCamp</a>. When asked for permission to use his work for WindyCityRails, Evan responded with an enthusiastic <em>yes</em>. Thanks Evan!</p>

<p>Here it is.</p>

<h3>Draft: Code of Conduct</h3>

<h4>Preface</h4>

<p>WindyCityRails is and has been an event made up of welcoming, tolerant, compassionate, and loving participants. For several years now, WindyCityRails participants have been respectful of one another in our differences. We have employed those differences to elevate, educate, and celebrate one another at WindyCityRails.</p>

<p>It is in that same spirit that we now adopt this Code of Conduct: Not as a punitive action, but as a measure to protect that which we already have and to signal to all that we are a tolerant and loving community.</p>

<h4>WindyCityRails Code of Conduct</h4>

<p>WindyCityRails is dedicated to providing a harassment-free conference experience for everyone, regardless of gender, gender identity, sexual orientation, disability, physical appearance, body size, race, or religion. We do not tolerate harassment of participants in any form.</p>

<p>If you think your conversation is making another community member uncomfortable, try to make amends and move forward.</p>

<p>Participants asked to stop any harassing behavior are expected to comply immediately. WindyCityRails participants violating these rules may be sanctioned or expelled from the conference at the event organizers&#8217; discretion. This applies to all attendees, speakers, sponsors, and otherwise.</p>

<p>That said, silliness, mockery, and general irreverence are welcome, expected, and even encouraged so long as they all come from a loving place.</p>

<p>However, should another participant&rsquo;s behavior be injurious to you, we ask three things.</p>

<h4>1) Give others the benefit of the doubt.</h4>

<p>People are generally decent. It has been our experience, these past several years, that those who attend WindyCityRails are just a cut above in that respect.</p>

<h4>2) Attempt to address the behavior with the other party immediately.</h4>

<p>In the case of intractable situations, we are here to help you (see &ldquo;Ask for Help!&rdquo; below). However, this is where we ask participants to try to behave &ldquo;like grown ups.&rdquo; It is part of the WindyCityRails ethos: If you have a problem with something, don&rsquo;t wait for someone to fix it but instead try to fix it yourself.</p>

<p>If you’re comfortable doing so, let the person know that you found what he or she said or did inappropriate. Attempt to resolve the situation amicably. When addressing it yourself, remember to continue to treat the other party with kindness and respect.</p>

<p>If you&rsquo;re uncomfortable approaching the other person…</p>

<h4>3) Ask for Help!</h4>

<p>We&rsquo;re all human. While life, and WindyCityRails, expects a good deal of self-sufficiency, we are also a community. If you cannot manage a situation alone, we are here for you. Seek out any member of the conference organizer team. We can be identified with special &ldquo;Organizer&rdquo; lanyards.</p>

<p>~WindyCityRails Organizers Team</p>

<h3>Conclusion</h3>

<p>Thanks for reading this through. See you at <a href="http://windycityrails.org">WindyCityRails</a>!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Environment of Respect]]></title>
    <link href="http://RayHightower.com/blog/2014/01/21/an-environment-of-respect/"/>
    <updated>2014-01-21T13:16:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/01/21/an-environment-of-respect</id>
    <content type="html"><![CDATA[<p>Here is an early draft of the <a href="http://windycityrails.org">WindyCityRails</a> Code of Conduct:</p>

<blockquote><p>WindyCityRails strives to provide a healthy, harassment-free conference experience for all attendees. Our Code of Conduct, which has been practiced by members of our community for years, is as follows: Treat everyone at the conference as you would want yourself, a family member, or an esteemed colleague to be treated. Our community is stronger when every member contributes to the safety and learning of the other members. We are colleagues, and we treat each other with respect.</p></blockquote>

<p>There may be some wordsmithing and typo-correction this week, but the final version will essentially read as it appears above. Key objectives achieved:</p>

<ul>
<li>Simplicity. The point is made with minimal words.</li>
<li>Inclusiveness. Everybody who wants to learn and engage is included.</li>
<li>Respect. Everybody is treated with respect. No threats are made.</li>
</ul>


<p>You have already read the most important part of this post. The rest tells how the code came to be.</p>

<!--more-->


<h3>First Person Singular</h3>

<p>Normally, when discussing WindyCityRails and ChicagoRuby, I shine the light on the organizers as a team (we) rather than on myself. WindyCityRails is blessed with a great team of organizers. We pool our talents to get things done.</p>

<p>However, when concerns are raised, the buck stops with the team leader: me. Please forgive me for using first person pronouns throughout this post. Also, other members of the organizer team may have opinions that differ from mine. If I say anything here that disturbs you, please know that it comes from me directly. I am the only one at fault.</p>

<h3>My Knee-Jerk Response</h3>

<p>Last week a Twitter user asked if WindyCityRails had a code of conduct. I responded (through the @WindyCityRails handle) with a one-word answer: No.</p>

<p>Why the terse response? Because I have a deep bias against bureaucracy. Initially, that&rsquo;s what a code of conduct sounded like to me. Do we have a problem with diversity in the tech community? Hell yes. But bureaucracy does not solve problems. We will only solve the diversity problem through active engagement and real work. We solve the diversity problem by ensuring that people from all groups feel welcome and engaged.</p>

<p>One example of real work: The <a href="http://www.windycityrails.org/youth/">WindyCityRails Youth Program</a>, launched last year. A diverse group of college students taught a diverse group of high school students how to program the Arduino. These students from diverse backgrounds bonded via their common interest in technology.</p>

<p>To summarize my knee-jerk response: A code of conduct makes us feel good about nice words written on a sheet of paper, while no real work gets done.</p>

<h3>After My Initial Reaction</h3>

<p>Kindergarten taught me that it is important for me to listen to others. A community thrives on interaction between people who see things differently. If everyone thinks the same way, we don&rsquo;t have diversity, do we?</p>

<p>Other inquiries about a code of conduct followed via Twitter and email. All were helpful. Some people offered sample text from other events. Most of the sample text was good.</p>

<p>Two of my fellow organizers (thank you <a href="https://twitter.com/ginnyhendry">Ginny Hendry</a> and <a href="https://twitter.com/wondible">Justin Love</a>) encouraged me to examine the question more closely. Clearly, I needed to study this. So that is how I have spent the last few days.</p>

<h3>Simplicity</h3>

<p>In drafting text for WindyCityRails (and, by extension, ChicagoRuby) I tried to create something that fits our culture. We are an inclusive group and we treat people well.</p>

<p>At the same time, it is important to keep the word count low to limit bureaucracy.</p>

<h3>Inclusiveness</h3>

<p>The WindyCityRails and ChicagoRuby communities have always strived to be inclusive. We do that in several ways.</p>

<p>Here&rsquo;s an example. Before I became an organizer of ChicagoRuby, I heard that a group of developers met for drinks after every meeting. I always heard about the gathering after the fact. I could have taken this personally, but I realized that the group was not intentionally excluding me. They just didn&rsquo;t know me. Further, they were so caught up in their discussions that it simply never occurred to them to invite people they didn&rsquo;t know.</p>

<p>Things are different today. Today we announce the drink invitation at the beginning of each meeting, and we post it with every meeting announcement. Brand new people are made to feel welcome.</p>

<p>Further, we make it clear that one does not have to drink alcohol to participate. Soft drinks and cranberry juice are in abundance.</p>

<p>Another example of inclusiveness: All of ChicagoRuby&rsquo;s monthly events are free because we want to include aspiring developers regardless of income. Expenses for the monthly events are covered by monthly sponsors and revenue from WindyCityRails.</p>

<h3>Excluding Others</h3>

<p>I have more experience with racism than any other -ism, so that&rsquo;s what I&rsquo;ll talk about here. A mentor of mine raised two questions during a discussion about racism and oppression.</p>

<ul>
<li><p>Do you want to end all oppression, or just the oppression directed at you?</p></li>
<li><p>Do you really want to end oppression, or do you simply want to change places with your oppressor?</p></li>
</ul>


<p>Here&rsquo;s an experience that influences my thoughts on this subject. A few decades ago, when I was a young developer for a company in Colorado, I had a confrontation with senior developer, a White man. I was certain that this was a Black/White issue. I won&rsquo;t go into details, but I will admit that I treated that White man very badly in retaliation.</p>

<p>Some days later, as I walked past my manager&rsquo;s desk, I noticed my &ldquo;nemesis&rdquo; interacting with my manager (a White man who also happened to be his manager) in the same manner that he had interacted with me. That&rsquo;s when I figured out that this guy wasn&rsquo;t a racist, he was just an asshole.</p>

<p>And, because of the way I had treated him, I was the one guilty of racism.</p>

<p>In drafting the WindyCityRails code of conduct, it was important to avoid showing favoritism toward any group. All groups must be treated with respect, not just my own.</p>

<h3>Respect</h3>

<p>I was disturbed by the language in some of the sample codes of conduct. It took me awhile to figure out what bothered me. Finally, it hit me: The tone was threatening. They seemed to say (paraphrased): &ldquo;Follow these rules or we will kick you out and take away your money.&rdquo;</p>

<p>Colleagues don&rsquo;t threaten each other. Colleagues treat each other with respect.</p>

<p>Some may point out that without a method of enforcement, the code has no teeth. They&rsquo;re right. There are no teeth. However, I don&rsquo;t believe that &ldquo;teeth&rdquo; or threats are needed amongst colleagues. Colleagues treat each other with respect.</p>

<h3>Conclusion</h3>

<p>There you have it&hellip; my opinion. Can my opinion change? Perhaps. I have many blind spots, and that is why I am sharing my thought process. I look forward to hearing your feedback in the comments below or over a cup of coffee.</p>

<p>By the way, the <a href="http://www.windycityrails.org">WindyCityRails call for proposals</a> is still open, as of the date of this post. If you are doing something exciting with Ruby and/or Rails, please submit a proposal. Thanks.</p>

<h3><em>Update (Jan 2014)</em></h3>

<p><em>After this post, several colleagues introduced me to new information.  The result, an updated code of conduct, is covered in <a href="http://RayHightower.com/blog/2014/01/28/an-environment-of-respect-2nd-iteration/">An Environment of Respect, 2nd Iteration</a>.</em></p>
]]></content>
  </entry>
  
</feed>
