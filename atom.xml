<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RayHightower.com]]></title>
  <link href="http://RayHightower.com/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2014-12-18T21:13:22-06:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git Vulnerability on Mac OS X and Windows]]></title>
    <link href="http://RayHightower.com/blog/2014/12/18/git-vulnerability-on-mac-os-x/"/>
    <updated>2014-12-18T17:00:00-06:00</updated>
    <id>http://RayHightower.com/blog/2014/12/18/git-vulnerability-on-mac-os-x</id>
    <content type="html"><![CDATA[<p>Today the <a href="http://git-scm.com/">Git</a> core team announced a security vulnerability and a corresponding fix. Hats off to the <a href="http://mercurial.selenic.com/">Mercurial</a> team (yes, Mercurial!) for finding the problem. Hats off to the <code>Git</code> team for making the announcement, and for delivering a fix so quickly.</p>

<h3>What‚Äôs the Problem?</h3>

<p>If your Git installation remains un-patched, then a malicious person could over-write the <code>.git/config</code> directory in one of your repositories. This would allow them to alter your Git history and make changes in the repo without your knowledge. <a href="http://article.gmane.org/gmane.linux.kernel/1853266">Details</a>.</p>

<p>The vulnerability exists on Mac OS X and Microsoft Windows. This article will discuss solving the problem on Mac OS X only, since I am not a Windows expert.</p>

<!--more-->


<p>Mac and Windows users are exposed because their file systems are not case-sensitive by default. Linux users who use a case-sensitive file system are protected. But Linux users might want to apply the patch anyway because (as stated by the Git core team)&hellip;</p>

<blockquote><p>Even though the issue may not affect Linux users, if you are a hosting service whose users may fetch from your service to Windows or Mac OS X machines, you are strongly encouraged to update to protect such users who use existing versions of Git.
~Git Core Team</p></blockquote>

<h3>Is My Machine Vulnerable?</h3>

<p>I know that my machine was vulnerable because I was running an an un-patched version of Git, as seen below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>git --version
</span><span class='line'>git version 2.1.3
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<h3>How to Upgrade</h3>

<p><a href="http://RayHightower.com/blog/2014/02/12/homebrew-fundamentals/">Homebrew</a> makes it easy to install and maintain Git. First, update Homebrew&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>brew update
</span><span class='line'>Updated Homebrew from d243310d to a6ab9f13.
</span><span class='line'><span class="o">==</span>&gt; New Formulae
</span><span class='line'>abi-compliance-checker        deis                     glbinding
</span><span class='line'>asciinema             distribution                rbenv-bundle-exec
</span><span class='line'>ctunnel                  game-music-emu           <span class="nv">restund</span>
</span><span class='line'><span class="o">==</span>&gt; Updated Formulae
</span><span class='line'>abcm2ps                         jags
</span><span class='line'>afl-fuzz                    jansson
</span><span class='line'>
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Then, upgrade Git&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>brew upgrade <span class="nv">git</span>
</span><span class='line'><span class="o">==</span>&gt; Upgrading 1 outdated package, with result:
</span><span class='line'>git 2.2.1
</span><span class='line'><span class="o">==</span>&gt; Upgrading <span class="nv">git</span>
</span><span class='line'><span class="o">==</span>&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/git-2.2.1.y
</span><span class='line'><span class="c">######################################################################## 100.0%</span>
</span><span class='line'><span class="o">==</span>&gt; Pouring git-2.2.1.yosemite.bottle.tar.gz
</span><span class='line'><span class="o">==</span>&gt; Caveats
</span><span class='line'>The OS X keychain credential helper has been installed to:
</span><span class='line'>  /usr/local/bin/git-credential-osxkeychain
</span><span class='line'>
</span><span class='line'>The <span class="s2">&quot;contrib&quot;</span> directory has been installed to:
</span><span class='line'>  /usr/local/share/git-core/contrib
</span><span class='line'>
</span><span class='line'>Bash completion has been installed to:
</span><span class='line'>  /usr/local/etc/bash_completion.d
</span><span class='line'>
</span><span class='line'>zsh completion has been installed to:
</span><span class='line'>  /usr/local/share/zsh/site-functions
</span><span class='line'><span class="o">==</span>&gt; Summary
</span><span class='line'>üç∫  /usr/local/Cellar/git/2.2.1: 1356 files, 31M
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>&hellip; and finally, verify that the patched version is in use.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>git --version
</span><span class='line'>git version 2.2.1
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<h3>Open Source Rocks</h3>

<p>Again, hats off to everyone in the open source community who pulled together to make this fix happen!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ignite RubyConf 2014]]></title>
    <link href="http://RayHightower.com/blog/2014/11/16/ignite-rubyconf-2014/"/>
    <updated>2014-11-16T15:01:00-06:00</updated>
    <id>http://RayHightower.com/blog/2014/11/16/ignite-rubyconf-2014</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/ignite_logo_200.jpg' width='' height='' alt='Ignite. 15 seconds per slide.' title='Ignite. 15 seconds per slide.'><span class='caption-text'>Ignite. 15 seconds per slide.</span></span>
<a href="http://igniteshow.com/">Ignite</a> is a presentation format where the slides advance automatically every 15 seconds whether the presenter is ready or not. Twenty slides, 15 seconds each, five minutes total. Presenters are challenged to present their ideas quickly and clearly before the time runs out.</p>

<p>Ignite is similar to <a href="http://www.pechakucha.org">Pecha Kucha</a>. The two formats differ only in slide duration (20 seconds per slide with Pecha Kucha).</p>

<!--more-->


<p><a href="http://www.sdruby.org/">SDRuby</a> ran an Ignite event on the day before RubyConf 2014. Slides from my OpenROV presentation at Ignite RubyConf 2014 appear below.</p>

<script async class="speakerdeck-embed" data-id="573c89704e88013264a612c8f4a94aec" data-ratio="1.77777777777778" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script>


<p>&nbsp;<br/>
&nbsp;<br/>
Thanks SDRuby for hosting the Ignite event!</p>

<p>If you like the idea of hacking on Ruby <em>and</em> OpenROV, check out <a href="http://rubycaribe.com">RubyCaribe</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ChicagoRuby Expands to North Shore]]></title>
    <link href="http://RayHightower.com/blog/2014/10/30/chicagoruby-expands-to-north-shore/"/>
    <updated>2014-10-30T14:51:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/10/30/chicagoruby-expands-to-north-shore</id>
    <content type="html"><![CDATA[<p>Long-time observers of ChicagoRuby know that the group is always striving to achieve more. Latest move: ChicagoRuby is now hosting a monthly meetup on Chicago‚Äôs North Shore. The first meeting of ChicagoRuby: North Shore will be held on Saturday, December 6, 2014 at 10:30am. Visit <a href="http://www.meetup.com/ChicagoRuby/events/216193202/">Meetup.com</a> for details and to RSVP.</p>

<!--more-->


<h3>Why the North Shore?</h3>

<p>Why expand to Chicago‚Äôs North Shore? One reason: Several ChicagoRuby members live there, and travelling to meetings downtown and in Elmhurst can be quite a haul.</p>

<p>The bigger reason: Two members have stepped up to manage the north shore operation. <a href="http://www.meetup.com/ChicagoRuby/members/61690512/">Doug Harman</a> and <a href="http://www.meetup.com/ChicagoRuby/members/13463131/">Stu Gerstein</a> have been active in Elmhurst for a long time. They were chosen as organizers because they are vocal and they have already done the preliminary leg work.</p>

<p>That&rsquo;s how we roll in ChicagoRuby. Many years ago, <a href="https://twitter.com/ginnyhendry">Ginny Hendry</a> demonstrated that if you push for a new activity in ChicagoRuby (like hack nights) you might end up running it!</p>

<h3>Exciting Year</h3>

<p>2014 has proven to be an exciting year for ChicagoRuby. So far, the group has‚Ä¶</p>

<ul>
<li>Collaborated with the University of the West Indies at Cave Hill, Barbados to form <a href="http://linuxbarbados.org">LinuxBarbados</a>.</li>
<li>Built alliances with top-notch developers in multiple countries to create <a href="http://rubycaribe.com">RubyCaribe</a>.</li>
<li>Expanded the monthly Chicago-area activities to four per month.</li>
<li>Grown the organizer team to ten (10) members.</li>
</ul>


<p>Looking forward to more!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Geekfest &amp; OpenROV]]></title>
    <link href="http://RayHightower.com/blog/2014/10/21/geekfest-and-openrov/"/>
    <updated>2014-10-21T09:44:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/10/21/geekfest-and-openrov</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/geekfest.png' width='' height='' alt='Geekfest: Tuesdays at Groupon.' title='Geekfest: Tuesdays at Groupon.'><span class='caption-text'>Geekfest: Tuesdays at Groupon.</span></span>
<a href="http://www.meetup.com/Geekfest/events/207936312/">Geekfest</a> is a weekly event hosted by Groupon&rsquo;s engineering team. Every Tuesday at lunchtime, the company invites members of the tech community to present topics that are interesting to a technical audience.</p>

<p>I wish to express my thanks to Groupon for inviting me to present <a href="http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov/">OpenROV</a> at today&rsquo;s Geekfest.</p>

<!--more-->


<p>Slides appear below. Video will be posted as soon as it becomes available. Special thanks to <a href="http://chelseatroy.com/2014/10/21/geekfest-ray-hightower-dumps-a-robot-into-lake-michigan/">Chelsea Troy</a> for creating a real-time blog post about the presentation.</p>

<center><iframe src="http://RayHightower.com//player.vimeo.com/video/112204897" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></center>




<center><script async class="speakerdeck-embed" data-id="e8ed21a03b5d013274bd1297e85160ca" data-ratio="1.77777777777778" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script></center>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UWI Computer Science Club &amp; LinuxBarbados]]></title>
    <link href="http://RayHightower.com/blog/2014/10/10/uwi-computer-science-club-and-linuxbarbados/"/>
    <updated>2014-10-10T03:53:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/10/10/uwi-computer-science-club-and-linuxbarbados</id>
    <content type="html"><![CDATA[<p>Members of the <a href="http://cavehill.uwi.edu/">University of the West Indies (UWI)</a> Computer Science Club and <a href="http://linuxbarbados.org">LinuxBarbados</a> just finished a joint session this afternoon. I am grateful that the group invited me to present. Outline (prepared in advance):</p>

<ul>
<li><p>30 minutes: Overview of Ruby, Rails, and some alternatives to both. What are the advantages and disadvantages of building web apps with Ruby? Can you build a business with this stuff?</p></li>
<li><p>30 minutes: Questions and Answers. This will be a highly interactive time. Anything discussed earlier is fair game. We can explore technical specifics if you like.</p></li>
<li><p>60 minutes: Deep dive into anything the group wants to explore related to technology, business, or the combination of the two. If the group doesn&rsquo;t choose a topic, we will end early. But if the group is interested and engaged, we will continue.</p></li>
</ul>


<!--more-->


<p>Slides from the presentation are posted here.</p>

<center><script async class="speakerdeck-embed" data-id="ba46e5b032a001322feb4edc433df659" data-ratio="1.77777777777778" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script></center>


<p>Thank you UWI for the invitation!</p>

<p>If you want to know more about these subjects, and if you would like to study this material in a hands-on lab environment with experts guiding the way, you might enjoy <a href="http://rubycaribe.com">RubyCaribe</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.js Under Water]]></title>
    <link href="http://RayHightower.com/blog/2014/09/25/nodejs-under-water/"/>
    <updated>2014-09-25T22:54:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/09/25/nodejs-under-water</id>
    <content type="html"><![CDATA[<p>The <a href="http://www.meetup.com/nodejs/events/206159562">New York City Node JS Meetup</a> asked me to speak about <a href="http://rayhightower.com/blog/2014/06/16/citizen-science-with-openrov/">OpenROV</a> on September 24, 2014. About eighty developers came out for the meeting. Thank you <a href="http://shutterstock.com">Shutterstock</a>, <a href="https://twitter.com/mateodelnorte">Matt Walters</a>, and all of the organizers for making it happen. Slides appear below.</p>

<!--more-->


<center><script async class="speakerdeck-embed" data-id="25d9158026930132408f62c99fab29cb" data-ratio="1.7777778" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script></center>


<p>&nbsp;
&nbsp;</p>

<h3>Presentation Video</h3>

<p><del>The following video is a rough draft, useful if you want to hear the dialog that went along with the slides.</del> <em>Update: <a href="http://www.hakkalabs.co/articles/openrov-node-js-underwater">Hakka Labs</a> has published the official video from the event, embedded below.</em>  Lots of good questions from the audience.</p>

<center><iframe width="560" height="315" src="http://RayHightower.com//www.youtube.com/embed/7eUoGtPUKbw?rel=0" frameborder="0" allowfullscreen></iframe></center>


<p><em>Correction: Maximum OpenROV depth = 100 meters. I gave an incorrect maximum depth figure in the video.</em></p>

<p>&nbsp;
&nbsp;</p>

<h3>Next Step With OpenROV</h3>

<p>Our work with OpenROV will climax at <a href="http://rubycaribe.com">RubyCaribe</a> in January 2015. If you&rsquo;re an intermediate or advanced software developer, and if you like to stretch your brain with Ruby and other languages (like Node.js) then RubyCaribe might be for you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyCaribe: Ruby Gets Hotter in January]]></title>
    <link href="http://RayHightower.com/blog/2014/09/23/rubycaribe-ruby-gets-hotter-in-january/"/>
    <updated>2014-09-23T18:23:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/09/23/rubycaribe-ruby-gets-hotter-in-january</id>
    <content type="html"><![CDATA[<p><a href="http://rubycaribe.com">RubyCaribe</a> (pronounced ka-REEB) is a conference for intermediate and advanced software developers who use Ruby. The conference will be held January 27 &ndash; 31, 2015 in Barbados. January is a beautiful time to visit the Caribbean, especially if you‚Äôre coming from a colder part of the planet.</p>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/barbados_caribbean_map.png' width='' height='' alt='Barbados. You could be here in January.' title='Barbados. You could be here in January.'><span class='caption-text'>Barbados. You could be here in January.</span></span>
Intermediate and advanced software developers will find RubyCaribe valuable because&hellip;</p>

<ul>
<li>Each RubyCaribe session features a 30- to 45-minute presentation followed by a <em>2-hour deep-dive lab</em>. Learning is reinforced throughout.</li>
<li>The venue, <a href="http://www.hiltonbarbadosresort.com/">Hilton Barbados Resort</a>, sits right on the ocean. Need a stretch break? Take a walk on the beach!</li>
</ul>


<!--more-->


<h3>Ramp Up Your Ruby Skills</h3>

<p>Each RubyCaribe lab will be led by experts in machine learning, mobile app development (iOS and Android), web development, and functional programming. The inventor of <a href="http://rubymotion.com">RubyMotion</a>, <a href="https://twitter.com/lrz">Laurent Sansonetti</a>, will lead the RubyMotion lab. If you already have experience with Ruby or Rails, RubyCaribe will take your skills to the next level.</p>

<h3>Bonus: OpenROV and Node.js</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/openrov_rubycaribe.jpg' width='' height='' alt='OpenROV. Linux and Node.js.' title='OpenROV. Linux and Node.js.'><span class='caption-text'>OpenROV. Linux and Node.js.</span></span>
<a href="http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov/">OpenROV</a> is an open source underwater robot running Linux and Node.js. During two evening sessions, you and your RubyCaribe colleagues will hack on OpenROV. The best developers are polyglot, right? On Friday afternoon, we will grab a boat for live ocean testing with a few OpenROV units. If you ever wanted to experiment with Node.js and IoT, RubyCaribe offers a great opportunity.</p>

<h3>University Collaboration</h3>

<p>On Saturday, the final day of RubyCaribe, we will visit the <a href="http://www.cavehill.uwi.edu/">University of the West Indies at Cave Hill</a>. Faculty and students from the UWI community will demo their work with solar energy and other areas touched by software. Who knows, maybe you‚Äôll give a lightning talk about something you learned at RubyCaribe!</p>

<h3>Make Your Brain Sweat</h3>

<p>RubyCaribe will work you hard. RubyCaribe will make your brain sweat. So be sure to schedule a few days before or after the conference for sight seeing and relaxation. Rum was invented in Barbados.</p>

<h3>Where Will You Be in January?</h3>

<p>If you had to choose between the Caribbean and the cold regions of the northern hemisphere, where would you rather be? RubyCaribe offers the chance to ramp up your skills and enjoy yourself at the same time. What an opportunity.</p>

<h3>Only One Hundred Tickets</h3>

<p>Only one hundred tickets will be sold. Be sure to get yours. <a href="http://www.eventbrite.com/e/rubycaribe-2015-registration-10051344843">Register now</a>. See you at RubyCaribe!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage That OpenROV Tether, Or Else]]></title>
    <link href="http://RayHightower.com/blog/2014/09/10/manage-that-openrov-tether/"/>
    <updated>2014-09-10T18:40:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/09/10/manage-that-openrov-tether</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/openrov_tether_management_slip_ring.jpg' width='' height='' alt='OpenROV tether management, one way that works.' title='OpenROV tether management, one way that works.'><span class='caption-text'>OpenROV tether management, one way that works.</span></span>
<em>Note: This article has been updated with more photos and details describing slip ring installation.</em></p>

<p>Youthful exuberance drove me to pilot my <a href="http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov/">OpenROV</a> before I built a good tether management system. Bad idea! It&rsquo;s better to have a tether management plan (any plan) before you pilot your OpenROV.</p>

<p>This article describes a tether management system that works for me. Other OpenROVers have devices that work, too. Take a look at a few and eventually you will find one that fits you.</p>

<h3>Off-the-Shelf Parts</h3>

<p>This tether management system is constructed entirely from off-the-shelf parts. The main component is an <a href="http://www.homedepot.com/p/KAB-Enterprise-Co-Ltd-20-ft-16-3-Cord-Reel-with-4-Outlets-CR002/100661463">extension cord reel sold by Home Depot</a> for about $14.00. Buy it, gut it, add the slip ring using three screws (also from Home Depot) and you‚Äôre good to go.</p>

<!--more-->


<p><span class='caption-wrapper middle'><img class='caption' src='http://RayHightower.com/images/openrov_lake_michigan.png' width='' height='' alt='Exploring Lake Michigan with OpenROV.' title='Exploring Lake Michigan with OpenROV.'><span class='caption-text'>Exploring Lake Michigan with OpenROV.</span></span></p>

<h3>Slip Ring</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/adafruit_slip_ring.jpg' width='' height='' alt='Adafruit slip ring.' title='Adafruit slip ring.'><span class='caption-text'>Adafruit slip ring.</span></span>
The slip ring is central to this solution. A slip ring allows an electrical spool to spin while electrical contacts remain intact. This slip ring was purchased from <a href="https://www.adafruit.com/products/736?gclid=CJDMiPma1cACFQoEaQod1iwAFQ">Adafruit</a> for about $18.00.</p>

<h3>How to Install the Slip Ring</h3>

<p>First, pull the entire orange cable out of the extension cord reel. It would be great to keep the whole orange cable as part of the tether, but then we wouldn‚Äôt have room for the original tether (twisted pair). Cut the orange cable so that only one meter remains attached to the reel assembly.</p>

<p><span class='caption-wrapper'><img class='caption' src='http://RayHightower.com/images/openrov_tether_management_internals.jpg' width='' height='' alt='Front view, back view, internal view.' title='Front view, back view, internal view.'><span class='caption-text'>Front view, back view, internal view.</span></span></p>

<p>Next, take the extension cord reel apart. Two phillips-head screws hold the device together. Remove the two screws, and the two orange disks will fall apart.</p>

<p>Now let‚Äôs focus on the disk without the electrical plugs. You will need to cut a hole in the exact center of this disk. The hole will need to be large enough to let the thicker part of the slip ring through, while allowing enough of an edge for the flange screws. The photos give a clearer picture than the words in this paragraph.</p>

<p>After you insert the slip ring, drill holes for the three slip ring mounting screws. One way to do this: Drill one hole first, insert the screw, tighten the nut, and then measure/drill the remaining holes. You‚Äôre more likely to align all of the holes correctly this way.</p>

<h3>Loctite Threadlocker</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/slip_ring_loctite.jpg' width='' height='' alt='Loctite oozing from the screws.' title='Loctite oozing from the screws.'><span class='caption-text'>Loctite oozing from the screws.</span></span>
<a href="http://www.loctiteproducts.com/threadlockers.shtml">Loctite</a> makes a threadlocker, a gummy substance that keeps screws from jiggling loose. They also make super glue; that&rsquo;s not what you want for this project. If you use Loctite&rsquo;s threadlocker on the slip ring screws, they will remain tight until you remove them on purpose.</p>

<h3>Connecting Inside the Reel</h3>

<p>Take a look inside the reel. You‚Äôll see black, green, and white cables inside. You won‚Äôt need to do anything with the black cable. Splice the green line from the slip ring to the green line inside the reel, and splice the white slip ring line with the white reel line. Your technique may vary, but I used a combination hook splice, solder, hot glue, and heat shrink tubing. If you wear a belt and suspenders your pants will never fall down!</p>

<p><span class='caption-wrapper'><img class='caption' src='http://RayHightower.com/images/openrov_extra_tab.jpg' width='' height='' alt='Extra tab inside the reel, before and after removal.' title='Extra tab inside the reel, before and after removal.'><span class='caption-text'>Extra tab inside the reel, before and after removal.</span></span></p>

<h3>Gotcha: Removing the Extra Tab</h3>

<p>After initial assembly, I noticed that there was an extra tab inside of the reel. I don‚Äôt know the original purpose for the tab, but since it appeared to interfere with tether operation, it had to go. Wire clippers and a dremel tool made quick work of the tab. The before &amp; after photos tell the story.</p>

<h3>Attaching the Tether &amp; Topside Adapter</h3>

<p>Now that you have a functioning reel with a slip ring, attach the twisted pair tether to the 1-meter orange extension cable. Hook splice, solder, hot glue, and heat shrink did the trick for me.</p>

<p>The topside adapter can be attached to the top of the reel with Velcro, as shown in the photos throughout this article. Plug the green and white cables from the outer slip ring into the topside adapter, and you&rsquo;re ready to test the new tether management system.</p>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/nanuk_935_openrov.jpg' width='' height='' alt='Nanuk 935 with OpenROV.' title='Nanuk 935 with OpenROV.'><span class='caption-text'>Nanuk 935 with OpenROV.</span></span>
What should we do with the slip ring&rsquo;s extra lines? I tied mine together for future use. I may cut them if I decide that they&rsquo;re not useful. If you have other ideas, feel free to post in the comments below.</p>

<h3>Everything Fits</h3>

<p>The new tether management system is small enough to share space with an OpenROV inside a <a href="http://nanukcase.com/productdetails.asp?node=205">Nanuk 935 case</a>. The Nanuk case has wheels, a foam interior, and it is rugged and small enough to fly as an airline carry-on.</p>

<p>Whip everything out and you&rsquo;re ready to explore.</p>

<p><span class='caption-wrapper middle'><img class='caption' src='http://RayHightower.com/images/openrov_tether_management_laptop.jpg' width='' height='' alt='Ready to explore Lake Michigan.' title='Ready to explore Lake Michigan.'><span class='caption-text'>Ready to explore Lake Michigan.</span></span></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Solar Powered Parallella]]></title>
    <link href="http://RayHightower.com/blog/2014/09/09/solar-powered-parallella/"/>
    <updated>2014-09-09T09:18:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/09/09/solar-powered-parallella</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper middle'><img class='caption' src='http://RayHightower.com/images/parallella_solar.jpg' width='' height='' alt='Give solar power to your Parallella with a few simple components.' title='Give solar power to your Parallella with a few simple components.'><span class='caption-text'>Give solar power to your Parallella with a few simple components.</span></span></p>

<p>This article describes a simple hardware hack: Making the <a href="http://RayHightower.com/blog/2014/07/07/parallella-quick-start-guide-with-gotchas/">Parallella</a> run on solar energy.</p>

<p>Motivation: The fastest computers in the world gulp electricity at an alarming rate. For example, <a href="http://www.top500.org/system/177999">Tianhe-2</a> at the National Super Computer Center in Guangzhou, China uses 17.8 megawatts of energy per year. In dollars, that‚Äôs roughly $17 million spent on electricity spent each year, depending on how the electricity is sourced.</p>

<p>Scientists at <a href="http://www.sandia.gov/">Sandia National Laboratories</a> estimate that the earth&rsquo;s surface absorbs enough solar energy in ninety minutes to power every electrical device on the planet for a full year. A year&rsquo;s worth of energy in ninety minutes! Surely we can use some of that energy to power our supercomputers.</p>

<!--more-->


<h3>Observations</h3>

<p>The solar Parallella idea was driven by a few observations:</p>

<ul>
<li><p>Parallella only needs five watts of power, five volts at 1 ampere. The device might spike at startup or during heavy calculations, but not by much.</p></li>
<li><p>USB provides electrical power at five volts, typically less than 2 amperes.</p></li>
<li><p>Cell phone solar chargers are easy to find. These pocket-sized chargers provide power over USB.</p></li>
</ul>


<p>Can a cell phone solar charger be hacked to power Parallella? Yes!</p>

<h3>Building the Hybrid Cable</h3>

<p>Here&rsquo;s how to get started&hellip;</p>

<p><span class='caption-wrapper middle'><img class='caption' src='http://RayHightower.com/images/parallella_usb_solar.jpg' width='' height='' alt='Making the connections.' title='Making the connections.'><span class='caption-text'>Making the connections.</span></span></p>

<ul>
<li><p>First, get an off-the-shelf solar device capable of providing 5 volts at 2 amperes. Many cell phone solar chargers will do this, but some will only provide 1 ampere of current. You will need 2 amperes. As of this writing, Amazon sells solar cell phone chargers for about $35.00. Note that the model shown in this article combines a photovoltaic panel with a lithium ion battery. Energy provided by the sun can be stored by the battery for later use.</p></li>
<li><p>Cut open a USB cable to expose power (red), ground (black), and signal cables (green and white) as shown in the photo.</p></li>
<li><p>Find an old AC adapter cable that fits the Parallella power connection. Cut it open to expose the power and ground wires as shown in the photo.</p></li>
<li><p>Solder the USB power to the old adapter power wire, and USB ground to the adapter&rsquo;s ground.</p></li>
<li><p>Cover everything with heat shrink tubing or electrical tape. Heat shrink is preferred since it will last longer.</p></li>
</ul>


<p>You&rsquo;re done! Plug everything in and watch your Parallella boot up. Note that this configuration will also power the Parallella&rsquo;s cooling fan.</p>

<p><span class='caption-wrapper middle'><img class='caption' src='http://RayHightower.com/images/parallella_solar_complete.jpg' width='' height='' alt='Parallella running on solar power.' title='Parallella running on solar power.'><span class='caption-text'>Parallella running on solar power.</span></span></p>

<h3>Proof of Concept</h3>

<p>It probably doesn‚Äôt make sense to call this a project. It&rsquo;s more of a proof of concept. Scaling up will cost money and time. But the benefits of solar energy, including cost savings and reduced carbon footprint, make this a worthwhile path to pursue.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenROV Meets Chicago's Lake Michigan]]></title>
    <link href="http://RayHightower.com/blog/2014/08/22/openrov-meets-chicago-lake-michigan/"/>
    <updated>2014-08-22T19:27:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/08/22/openrov-meets-chicago-lake-michigan</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper middle'><img class='caption' src='http://RayHightower.com/images/openrov_chicago_lake_michigan.jpg' width='' height='' alt='OpenROV meets  Lake Michigan.' title='OpenROV meets  Lake Michigan.'><span class='caption-text'>OpenROV meets  Lake Michigan.</span></span>
<a href="http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov/">OpenROV</a> #1227 went for a spin in Lake Michigan this week. Success! Here are a few first-voyage observations:</p>

<!--more-->


<ul>
<li>The electronics chassis is truly waterproof. Same for the battery compartments. Waterproofing was my biggest concern during assembly. Hats off to the OpenROV team for an excellent set of assembly instructions.</li>
<li>Condensation builds up in the electronics chassis during operation. A quick review of the OpenROV forum tells me that I should add a desiccant bag to the compartment. Or pack the unit in low humidity.</li>
<li>The OpenROV is a little back-heavy. The back dips lower than the front during operation. I should add some weights to the front of the unit.</li>
<li><a href="http://RayHightower.com/blog/2014/09/10/manage-that-openrov-tether/">Tether management is a <em>must</em></a>. After one voyage (can you really call a
simple dip in the lake a voyage?) my OpenROV tether is a mess. Time to
build a way to manage the tether.</li>
</ul>


<p>What an exciting way to explore Node.js, BeagleBone Black, and the Maker Movement all at once.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ESC Programming and Calibration for OpenROV]]></title>
    <link href="http://RayHightower.com/blog/2014/08/21/esc-programming-and-calibration-for-openrov/"/>
    <updated>2014-08-21T16:27:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/08/21/esc-programming-and-calibration-for-openrov</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper middle'><img class='caption' src='http://RayHightower.com/images/openrov_esc.jpg' width='' height='' alt='Three ESCs, one for each motor. Each ESC has a switch and a power/signal connector.' title='Three ESCs, one for each motor. Each ESC has a switch and a power/signal connector.'><span class='caption-text'>Three ESCs, one for each motor. Each ESC has a switch and a power/signal connector.</span></span></p>

<h3>ESCs: New Experience for Me</h3>

<p>Electronic speed controllers (ESCs) were completely new to me when I first assembled my <a href="http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov/">OpenROV</a>. This article documents my initial misunderstanding (and eventual understanding) of ESCs so that future builders can move forward with fewer glitches.</p>

<!--more-->


<p>The photo at the top of this page shows an OpenROV controller board, a
BeagleBone Black, and three ESCs. This article will focus on the ESCs.</p>

<h3>Remember This About ESCs</h3>

<p>Until all three ESCs are programmed <em>and</em> calibrated, the OpenROV might behave erratically. For example&hellip;</p>

<ul>
<li>The servo that moves the camera up and down will not respond to keyboard commands.</li>
<li>When you turn one ESC switch on, an unrelated motor (or motors, plural) might start spinning. In my case, turning on one ESC (any of the three ESCs) caused two motors to spin.</li>
</ul>


<p>In my case, the programming was correct, but I <a href="http://RayHightower.com/blog/2014/08/19/openrov-assembly-challenges/">dropped the ball on calibration</a>. And when the motors responded out-of-sync with the switches, I thought I had soldered some connections incorrectly. De-soldering and re-soldering connections would have been a ton of extra work, and that would not have solved the problem.</p>

<p>I reached out to the <a href="http://openrov.com/forum">forum</a> where OpenROV engineer Brian Adams pointed me in the right direction. Brian&rsquo;s diplomatic response could be summarized as <em>RTFM</em>. So I re-RTFM&rsquo;d, and it worked!</p>

<p>The bottom line: Do the ESC programming and calibration first. If the OpenROV misbehaves, re-check programming and calibration before considering other solutions.</p>

<h3>Why Use ESCs?</h3>

<p>Since ESCs require so many steps (programming and calibration) we might logically ask: <em>Why use ESCs at all?</em> Why not use simple analog motors without controllers and call it a day?</p>

<p>We use ESCs because the benefits outweigh the work required to configure them. It&rsquo;s all about control. By using an ESC to control each motor, we can use software to specify the <em>exact</em> number of RPMs and direction for each motor. We can make any motor (or combination or motors) start, stop, or change direction on a dime. Even better: When we move a lever on our controller of choice (keyboard, game controller, etc.) software on the OpenROV controller board decides the exact number of RPMs for each motor at that instant. OpenROV pilots don&rsquo;t need to think about this process while it happens. It just works.</p>

<p>The pilot&rsquo;s finger moves a controller lever. The lever position gets sent to software on the OpenROV controller board, and the controller board tells each ESC what its corresponding motor should do.</p>

<p>In summary, we use ESCs so that OpenROV pilots can have greater control over movement.</p>

<h3>How to Re-Check ESC Programming</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/esc_program_card.jpg' width='' height='' alt='ESC program card.' title='ESC program card.'><span class='caption-text'>ESC program card.</span></span>
Those of you with ESC experience already know about ESC program cards. I first learned about the cards while researching this problem. Amazing devices! Yes, it is possible to program ESCs using the series of button pushes and beeps in the OpenROV instructions. That&rsquo;s what I did, and it works. But a program card is faster. Amazon sells ESC program cards for less than fifteen dollars each. Well worth the investment, especially if you&rsquo;re programming ESCs for several OpenROVs.</p>

<h3>ESC Calibration Gotcha</h3>

<p>ESC calibration was tricky for me because turning on any of the three ESC switches caused two of my motors to spin: vertical and port. Further, since my electronics chassis was (mostly) assembled by the time I got to the calibration step, it wasn&rsquo;t easy for me to trace each power switch to its corresponding ESC.</p>

<p>So here&rsquo;s what I had to do.</p>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/openrov_esc_switch_labels.jpg' width='' height='' alt='ESC switch labels.' title='ESC switch labels.'><span class='caption-text'>ESC switch labels.</span></span></p>

<ul>
<li>First, I took everything apart, while keeping the electronic leads (those which had already been soldered) intact. I needed to do this so I could see where each wire was going.</li>
<li>Next, I labeled the back of each ESC switch with its corresponding ESC number. I did not want to go through the disassembly step again! The Brother P-Touch label maker was perfect for this step.</li>
<li>Finally, I followed the ESC calibration steps <em>while ignoring the behavior of the motors</em>. For example, turning on ESC1 caused the motors connected to ESC1 (port) <em>and</em> ESC2 (vertical) to spin. I ignored the motors while plowing through OpenROV&rsquo;s written calibration steps.</li>
</ul>


<h3>Modified Calibration Steps</h3>

<p>Here are the OpenROV calibration steps, with slight tweaks based on my personal experience.</p>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/openrov_calibration_sliders.jpg' width='' height='' alt='Click "Diagnostics" from the OpenROV cockpit.' title='Click "Diagnostics" from the OpenROV cockpit.'><span class='caption-text'>Click &ldquo;Diagnostics&rdquo; from the OpenROV cockpit.</span></span></p>

<ol>
<li>Each ESC switch has a red reset button. To turn the ESC on, move its slider switch toward the red reset button. The off position is in the opposite direction.</li>
<li>With all of the ESCs switched off, go ahead and power up the OpenROV. The motors should remain stationary at this point. Connect with the cockpit software and open the diagnostic pane.</li>
<li>Grab one ESC switch, and hold down its red reset button while powering it on. (At this point, two of my motors began spinning, V and P. I ignored the spinning motors while plowing through the rest of the steps.) You will hear a beeping noise. Let go of the reset button. (It will keep beeping which is fine). While it‚Äôs beeping, the red LED inside the corresponding ESC will flash in rhythm with the beeps.</li>
<li>Press reset once and you should hear a single beep. Move that motor&rsquo;s slider all the way to the right (or click the &ldquo;1&rdquo;) and then press the reset on the ESC again. You should get 2 beeps. The motor will not move during this step.</li>
<li>Move that motor&rsquo;s slider all the way to the left (or click the &ldquo;-1&rdquo;) and then press the reset on the ESC again. You will hear three beeps.</li>
<li>After a few seconds the motor will begin to spin. Switch off the ESC, and the motor will stop spinning.</li>
<li>Move the slider back to the middle (or click the &ldquo;0&rdquo;).</li>
<li>Repeat these steps with the next ESC until all three ESCs are done.</li>
</ol>


<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/openrov_lake_michigan_2.jpg' width='' height='' alt='OpenROV meets Lake Michigan.' title='OpenROV meets Lake Michigan.'><span class='caption-text'>OpenROV meets Lake Michigan.</span></span>
After calibration:</p>

<ul>
<li>With all three ESCs powered on, the motors remained stationary, as expected.</li>
<li>Each motor responded to the correct slider within the cockpit software&rsquo;s diagnostic pane.</li>
<li>The up/down servo for the camera responded correctly to the Q, A, and Z commands.</li>
<li>The motors responded to keyboard commands, as described within the cockpit&rsquo;s quick reference guide.</li>
</ul>


<p>In other words, calibration worked when I ignored the behavior of the motors while plowing through the steps.</p>

<h3>Success</h3>

<p>There is great satisfaction in solving an elusive problem. The OpenROV forum proved to be a powerful and useful resource. Next step: <a href="http://RayHightower.com/blog/2014/08/22/openrov-meets-chicago-lake-michigan/">Piloting the OpenROV in Lake Michigan</a>.</p>

<p><em>Photo acknowledgement: The original version of the ESC photo was published in the <a href="http://openrov.dozuki.com/Guide/How+to+Assemble+OpenROV+2.6/6">OpenROV assembly manual</a>. Thanks OpenROV team!</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenROV Assembly Challenges]]></title>
    <link href="http://RayHightower.com/blog/2014/08/19/openrov-assembly-challenges/"/>
    <updated>2014-08-19T16:44:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/08/19/openrov-assembly-challenges</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/openrov_rth.jpg' width='' height='' alt='OpenROV fully assembled.' title='OpenROV fully assembled.'><span class='caption-text'>OpenROV fully assembled.</span></span>
I know this problem can be solved. I just haven‚Äôt figured it out yet, and I need help from the <a href="http://openrov.com/">OpenROV</a> community to do so.</p>

<p><em>Update: The OpenROV community delivered. Solution: <a href="http://RayHightower.com/blog/2014/08/21/esc-programming-and-calibration-for-openrov/">ESC Programming and Calibration for OpenROV</a>.</em></p>

<h3>Parts That Work</h3>

<p>Software image updates on the Beaglebone Black work flawlessly thanks to scripts written by <a href="https://github.com/BrianAdams">Brian Adams</a> and <a href="https://github.com/codewithpassion">Dominick Fretz</a>. The cockpit software shows a real-time image from the camera, the LED lights are super-bright, and the lasers hold steady at 10cm apart. My fully assembled OpenROV passes the water submersion test. Yes, it‚Äôs waterproof, thanks to O-rings and silicon-based lubricant!</p>

<p>What about the motors? The motors work, almost. Could it be the
electronic speed control (ESC) settings, calibration, or less than
perfect soldering? That&rsquo;s where I need help.</p>

<!--more-->


<h3>Summary of Symptoms</h3>

<p>With the cockpit software running and attached to the OpenROV:</p>

<ul>
<li>If I turn on any of the three ESCs, two of the motors (vertical and port) start running at full blast. The starboard motor remains stationary.</li>
<li>While the V and P motors continue to run at full blast, the starboard motor responds to the cockpit slider controls as expected: +1 makes S run full blast on one direction, -1 sends S full blast in the other direction, and 0 stops the S motor completely. During this exercise, V and P continue at full blast.</li>
<li>Turning off the ESC stops the V and P motors.</li>
<li>When I turn on any of the ESCs, the camera servo jumps slightly, about 10 degrees. And then the V and P motors run full blast.</li>
</ul>


<p>When the cockpit software is not running (and the Google Chrome browser is completely closed):</p>

<ul>
<li>Turning on an ESC has no effect on the motors.</li>
<li>The camera servo jumps slightly, about 10 degrees, as it did with the cockpit software running. But the motors remain stationary.</li>
</ul>


<p>Interesting behavior!</p>

<h3>Double-Checking the ESC Settings</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/esc_program_card.jpg' width='' height='' alt='ESC Program Card' title='ESC Program Card'><span class='caption-text'>ESC Program Card</span></span>
During troubleshooting, my first step was to double-check the electronic speed controller (ESC) settings. Setting the ESCs with the beep-and-button-push method was time consuming. And I was concerned that I may have made a mistake in counting the beeps.</p>

<p>Solution: I bought an ESC program card. Amazon sells them for less than fifteen dollars, well worth the price when you consider the peace of mind that the card brings. The program card shows each ESC setting with a clear 7-segment LED display, much easier than counting beeps!</p>

<p>According to the program card, all of the ESC settings are correct.</p>

<h3>Using a Power Supply Instead of Batteries</h3>

<p>All of the time spent troubleshooting drained the OpenROV batteries. So I devised a way to apply power directly to the OpenROV without batteries.</p>

<p><span class='caption-wrapper middle'><img class='caption' src='http://RayHightower.com/images/openrov_power_supply.jpg' width='' height='' alt='Directly connected to power supply.' title='Directly connected to power supply.'><span class='caption-text'>Directly connected to power supply.</span></span></p>

<p>The photo reveals the random condition of my work surface, so here&rsquo;s a verbal description of this hack:</p>

<ul>
<li>In the background, a power supply set to 12 volts</li>
<li><code>+</code> lead (red) connected to the <code>+</code> leads of the battery containers, via a wire acting as a Y-connector.</li>
<li><code>-</code> lead (black) connected to a ground terminal on the OpenROV controller board through a black jumper cable</li>
</ul>


<p>I find that this hack works best if I connect the 12 volt setup first while the Topside Adapter is powered off. Applying power (via USB) to the Topside Adapter turns the entire assembly on.</p>

<p>If you&rsquo;re reading this section and you know a better way for me to connect the power supply, please advise in the comments section below.</p>

<h3>Advice Welcome</h3>

<p>I&rsquo;m not sure where to look next to solve the challenge with the motors. Maybe I skipped a step somewhere during assembly? Advice welcome!</p>

<p><em>Update: As noted at the beginning of this article, this problem has been solved. Solution: <a href="http://RayHightower.com/blog/2014/08/21/esc-programming-and-calibration-for-openrov/">ESC Programming and Calibration for OpenROV</a>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Be Awesome. Tackle Big League Problems at WindyCityRails]]></title>
    <link href="http://RayHightower.com/blog/2014/08/05/be-awesome-tackle-big-league-problems-at-windycityrails/"/>
    <updated>2014-08-05T16:21:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/08/05/be-awesome-tackle-big-league-problems-at-windycityrails</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/big_league_problems_windycityrails.jpg' width='' height='' alt='Be awesome.' title='Be awesome.'><span class='caption-text'>Be awesome.</span></span>
Do you see yourself in any of these scenarios?</p>

<ul>
<li><p>You have already built a successful Rails app. Now that you&rsquo;re &ldquo;done&rdquo;, you know you can make it better, but you&rsquo;re not sure how. You want to take your skills to the next level.</p></li>
<li><p>You recently graduated from <a href="http://devbootcamp.com">Dev Bootcamp</a>, <a href="http://thestarterleague.com">Starter League</a>, <a href="http://www.mobilemakers.co/">Mobile Makers</a> or another school. You&rsquo;re ready to meet and interact with your next generation of mentors.</p></li>
<li><p>You are no longer a beginner. You have seen <em>advanced</em> developers in action, and you are determined to get there yourself.</p></li>
<li><p>Software development is relatively new to you, and you built a successful track record in another profession. You want to meet people who can help you accelerate through the beginner phase so you can launch something useful.</p></li>
</ul>


<p>Common thread: It&rsquo;s time to unleash the awesomeness in your bones. You want to take your skills to the next level, and you are ready to tackle <em>Big League Problems</em>. <a href="http://windycityrails.org">WindyCityRails</a> is for you.</p>

<!--more-->


<h3>What are Big League Problems?</h3>

<p>You might think of a big league problem as a good problem. For example, the Rails app you built is pulling in customers, and you&rsquo;re bumping into the limits of your software architecture. Who knew that so many people would buy from you?</p>

<p>Now&hellip; How do you scale? Do you buy more hardware, change your architecture, choose a new platform, or some combination of these? <a href="http://www.windycityrails.org/schedule/#williams">Dr. Nic Williams</a>, <a href="http://www.windycityrails.org/schedule/#shirai">Brian Shirai</a>, <a href="http://www.windycityrails.org/schedule/#light">Evan Light</a>, <a href="http://www.windycityrails.org/schedule/#menard">Mark Menard</a> deal with scaling problems. Learn from them.</p>

<p>Maybe you built a gem to solve a problem for yourself, and now you want to release your gem to the world. What legal questions do you need to consider? Did Rails face similar challenges in the beginning? <a href="http://www.windycityrails.org/schedule/#saper">Daliah Saper</a> is an attorney who specializes in intellectual property and other open source software issues. Put her team to work for you.</p>

<p>How about security? Have you outgrown the <code>Devise</code> gem? Or do you simply need to know more about <code>Devise</code> internals so that you can use it more effectively? Maybe it&rsquo;s time to abandon username/password logins altogether and go with SQRL. <a href="http://www.windycityrails.org/schedule/#love">Justin Love</a> and <a href="http://www.windycityrails.org/schedule/#mazza">Lucas Mazza</a> might have some ideas for you.</p>

<h3>Awesome Speakers. Awesome Audience.</h3>

<p>This year&rsquo;s WindyCityRails features the most powerful collection of speakers we&rsquo;ve ever assembled. Check out the <a href="http://www.windycityrails.org/schedule/">complete list of WindyCityRails speakers</a> and ask yourself what you can learn from each one.</p>

<p>Even better: Only 300 WindyCityRails tickets will be sold. Our speakers enjoy interacting with audience members throughout the conference. As professionals, they are always learning, too! So if you want some face time with people who understand Big League Problems (and more importantly, Big League Solutions) WindyCityRails is the place for you to be.</p>

<h3>Get Tickets Now</h3>

<p>Tickets are selling fast. Get yours now at <a href="http://www.windycityrails.org/register/">http://www.windycityrails.org/register/</a>. Use the promo code AWESOME to save $75.00 on the standard price.</p>

<p>We look forward to seeing you at WindyCityRails!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wanted: Community Manager]]></title>
    <link href="http://RayHightower.com/blog/2014/07/30/wanted-community-manager/"/>
    <updated>2014-07-30T12:43:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/07/30/wanted-community-manager</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/chicagoruby_community.png' width='' height='' alt='Jamming together. Growing together.' title='Jamming together. Growing together.'><span class='caption-text'>Jamming together. Growing together.</span></span>
WisdomGroup is hiring a Community Manager (CM) to help run our user groups and conferences. This is a part-time independent contractor position, mostly remote, with some on-site work during meetings and conferences. The position could become full-time depending on results produced and community growth.</p>

<h3>Smart People, Growing Together</h3>

<p>Our community philosophy:</p>

<blockquote><p>When smart people challenge each other to grow, great things happen.</p></blockquote>

<p>Our community track record is  covered in the article <a href="http://RayHightower.com/blog/2014/05/30/how-to-grow-a-user-group/">How to Grow a User Group</a>.</p>

<!--more-->


<h3>Responsibilities</h3>

<p>The CM will be responsible for the following:</p>

<ul>
<li>Managing social media feeds (like Twitter) for our groups and events.</li>
<li>Writing blog posts that promote our groups and events.</li>
<li>Interacting with group members through multiple channels: Face-to-face, online video conference, social media, and email.</li>
<li>Helping WisdomGroup to determine the best way to deliver value for group members.</li>
</ul>


<h3>Ideal Candidate</h3>

<p>The ideal candidate will fit the following description:</p>

<ul>
<li><strong>Self Starter</strong> &ndash; Works remotely to produce outstanding results with minimal supervision. Runs through walls to get things done.</li>
<li><strong>Team Player</strong> &ndash; Works well with other members of the WisdomGroup team. Shares information with team members via Basecamp and other collaboration tools.</li>
<li><strong>Strategic Thinker</strong> &ndash; Understands how the CM position fits into WisdomGroup&rsquo;s big picture. Demonstrates understanding by personally taking action where needed.</li>
<li><strong>Aggressive Learner</strong> &ndash; Currently uses social media tools like Twitter and Facebook. Learns and creates new ways to engage the community with social media tools.</li>
</ul>


<h3>About WisdomGroup</h3>

<p>To learn more about WisdomGroup, visit:</p>

<ul>
<li><a href="http://WisdomGroup.com">WisdomGroup.com</a> &ndash; company website.</li>
<li><a href="http://chicagoruby.org">ChicagoRuby.org</a> and <a href="http://linuxbarbados.org">LinuxBarbados.org</a> &ndash; user group sites.</li>
<li><a href="http://windycityrails.org">WindyCityRails.org</a> and <a href="http://rubycaribe.com">RubyCaribe.com</a> &ndash; conference sites.</li>
<li><a href="http://rayhightower.com">RayHightower.com</a> &ndash; president&rsquo;s personal blog.</li>
</ul>


<h3>To Apply</h3>

<p>To apply for the position, email a PDF of your resume to careers@wisdomgroup.com, and include the words &ldquo;Community Manager&rdquo; in the subject line. We look forward to hearing from you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LinuxBarbados is Global]]></title>
    <link href="http://RayHightower.com/blog/2014/07/25/linuxbarbados-is-global/"/>
    <updated>2014-07-25T15:36:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/07/25/linuxbarbados-is-global</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/LinuxBarbados-tux-logo_300.png' width='' height='' alt='' title=''><span class='caption-text'></span></span>
<a href="http://linuxbarbados.org">LinuxBarbados</a> is a user group for open source enthusiasts. The group meets monthly, offering solid knowledge for anyone who wants to ramp up their open source skills. For example, yesterday‚Äôs meeting featured a presentation on <a href="http://xbmc.org/">XBMC</a> by Michael Layne. The presenter dug deep into the tool, offering tips on how to write plugins in C++ or Python.</p>

<!--more-->


<h3>Global Reach</h3>

<p>The group is based in Barbados on the campus of the <a href="http://www.cavehill.uwi.edu/">University of the West Indies (UWI) at Cave Hill</a>. Enthusiasts who don‚Äôt live in Barbados can participate <em>live</em> online. So far the group has used Google Hangout for video. Other video solutions will be considered as the group continues to grow.</p>

<h3>Next Steps</h3>

<p>Organizers <a href="http://www.meetup.com/LinuxBarbados/members/143194822/">Maurice Beckles</a> and <a href="http://www.meetup.com/LinuxBarbados/members/153574612/">Michael Layne</a> have exciting plans for the group. Take a look at the LinuxBarbados calendar, and join <a href="http://linuxbarbados.org">LinuxBarbados</a> online if you want to hear about future events.</p>

<p>Whether you live in the Caribbean or in Antarctica, we look forward to seeing you!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CloudCamp Chicago: Developer Night]]></title>
    <link href="http://RayHightower.com/blog/2014/07/25/cloudcamp-chicago-developer-night/"/>
    <updated>2014-07-25T15:09:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/07/25/cloudcamp-chicago-developer-night</id>
    <content type="html"><![CDATA[<p><a href="http://cohesiveft.com">CohesiveFT</a> hosted a CloudCamp Developer Night this week. Speakers were Philip Szalwinski of 8th Light, John Downey of Braintree, Marcy Capron of Polymathic, and me. My presentation, <a href="http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov/">Citizen Science With OpenROV</a>, was based on the blog post of the same name.</p>

<p>Thank you <a href="https://twitter.com/MargieWalker">Margaret Walker</a> for running a great event. Slides appear below.</p>

<!--more-->


<script async class="speakerdeck-embed" data-id="4d87fa90f65e0131729a0a98c369402e" data-ratio="1.7777778" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM and Parallella: What a Difference a Shell Makes]]></title>
    <link href="http://RayHightower.com/blog/2014/07/21/rvm-and-parallella-what-a-difference-a-shell-makes/"/>
    <updated>2014-07-21T21:46:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/07/21/rvm-and-parallella-what-a-difference-a-shell-makes</id>
    <content type="html"><![CDATA[<p><a href="http://RayHightower.com/blog/2013/05/16/upgrading-ruby-with-rvm/">RVM</a> is an effective way to manage Ruby versions on Linux or OS X. RVM was working well on my Ubuntu-based <a href="http://RayHightower.com/blog/2014/07/07/parallella-quick-start-guide-with-gotchas/">Parallella</a>, until one day it stopped:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>linaro-nano:~&gt; rvm list
</span><span class='line'>rvm: Command not found.
</span><span class='line'>linaro-nano:~&gt;
</span></code></pre></td></tr></table></div></figure>


<p><code>rvm: Command not found.</code> Fortunately, <a href="https://twitter.com/theotherzach">Zach Briggs</a> and I were pairing at a joint OpenHack &ndash; ChicagoRuby event when the problem occurred. Zach is an ideal pairing partner; troubleshooting was smooth because he was there. Time to investigate.</p>

<!--more-->


<h3>Explicit Path</h3>

<p>After a few experiments, we discovered that we could run RVM by explicitly specifying the path to the executable:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>linaro-nano:~&gt; ~/.rvm/bin/rvm list
</span><span class='line'>
</span><span class='line'>rvm rubies
</span><span class='line'>
</span><span class='line'>   ruby-2.0.0-p481 <span class="o">[</span> armv7l <span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Default ruby not set. Try &#39;rvm alias create default &lt;ruby&gt;&#39;.</span>
</span><span class='line'>
</span><span class='line'><span class="c"># =&gt; - current</span>
</span><span class='line'><span class="c"># =* - current &amp;&amp; default</span>
</span><span class='line'><span class="c">#  * - default</span>
</span><span class='line'>
</span><span class='line'>linaro-nano:~&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Therefore, it appeared that the Ubuntu/Linux <code>$PATH</code> variable was being ignored. Google led us to consider the shell in use on the Parallella.</p>

<h3>Which Shell Is In Use?</h3>

<p>The shell is just a program that lets humans talk to the Linux operating system through a command line interface. Several shell programs exist. Linux users tend to prefer one shell or another. The <code>$SHELL</code> environmental variable points to the one in use.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>linaro-nano:~&gt; <span class="nb">echo</span> <span class="nv">$SHELL</span>
</span><span class='line'>/bin/tcsh
</span><span class='line'>linaro-nano:~&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Very interesting. <code>tcsh</code> was the current Parallella shell. I&rsquo;m more accustomed to <code>bash</code>. Could RVM prefer <code>bash</code> too? We changed one line of <code>/etc/passwd</code> to tell the Parallella to start with <code>bash</code> instead of <code>tcsh</code> and rebooted the Parallella.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>linaro-nano:~&gt; <span class="nb">echo</span> <span class="nv">$SHELL</span>
</span><span class='line'>/bin/bash
</span><span class='line'>linaro-nano:~&gt;
</span></code></pre></td></tr></table></div></figure>


<p>&hellip;and now RVM works normally.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>linaro-nano:~&gt; rvm list
</span><span class='line'>
</span><span class='line'>rvm rubies
</span><span class='line'>
</span><span class='line'>   ruby-2.0.0-p481 <span class="o">[</span> armv7l <span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Default ruby not set. Try &#39;rvm alias create default &lt;ruby&gt;&#39;.</span>
</span><span class='line'>
</span><span class='line'><span class="c"># =&gt; - current</span>
</span><span class='line'><span class="c"># =* - current &amp;&amp; default</span>
</span><span class='line'><span class="c">#  * - default</span>
</span><span class='line'>
</span><span class='line'>linaro-nano:~&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>Consider Fish?</h3>

<p>Right after this exercise, Zach and <a href="http://twitter.com/josh_cheek">Josh Cheek</a> had a Twitter conversation about a shell called <a href="http://fishshell.com/">fish</a>. Something new and shiny to explore!</p>

<h3>Original Plan: Rubinius</h3>

<p>Did I mention that we originally planned to install <a href="http://RayHightower.com/blog/2014/02/06/installing-rubinius-using-rvm/">Rubinius</a> on the Parallella? Where there are goals, there are yaks waiting to be shaved!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parallella Quick Start Guide (with gotchas)]]></title>
    <link href="http://RayHightower.com/blog/2014/07/07/parallella-quick-start-guide-with-gotchas/"/>
    <updated>2014-07-07T13:31:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/07/07/parallella-quick-start-guide-with-gotchas</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper center'><img class='caption' src='http://RayHightower.com/images/parallella_screenshot.png' width='' height='' alt='Parallella screenshot, 1080p.' title='Parallella screenshot, 1080p.'><span class='caption-text'>Parallella screenshot, 1080p.</span></span>
Parallella is a single-board supercomputer smaller than a deck of cards. While today‚Äôs fastest laptops contain four processor cores, Parallella has <em>eighteen</em> (2 <a href="http://arm.com/">ARM</a> cores plus an <a href="http://www.adapteva.com/epiphanyiii/">Epiphany</a> chip with 16 <a href="http://en.wikipedia.org/wiki/Reduced_instruction_set_computing">RISC</a> cores). The maker of Parallella, <a href="http://adapteva.com">Adapteva</a>, is on a mission to democratize parallel computing. The company&rsquo;s tag line is <em>Supercomputing for Everyone</em>.</p>

<!--more-->


<p>Everything in this post is based on the <a href="http://www.parallella.org/quick-start/">official quick start guide created by the Parallella team</a>. These instructions are tailored for a Mac running OS X Mavericks (10.9.3) and a Parallella-16 equipped with the Zynq 7010 chip. I ran into some <em>gotchas</em> during my first Parallella experience. The snags (and solutions) are documented here.</p>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/parallella.jpg' width='' height='' alt='Parallella. Tiny and powerful.' title='Parallella. Tiny and powerful.'><span class='caption-text'>Parallella. Tiny and powerful.</span></span></p>

<h3>Tools Required</h3>

<p>You will need the following items in order to burn an SD card for your
Parallella:</p>

<ul>
<li>Micro-SD card, 16GB or greater.</li>
<li>Desktop or laptop computer with a micro-SD card reader, or an SD-card reader with a micro adapter. These instructions are tailored for a Mac. A Linux or Windows machine will work with minor modifications in the procedure.</li>
<li>High-speed internet connection, for downloading Parallella&rsquo;s Ubuntu
image and related files.</li>
<li>Micro-USB-to-USB adapter, for the keyboard and mouse. Parallella is equipped with two micro-USB ports.</li>
<li>Micro-HDMI to HDMI cable or adapter.</li>
<li>Parallella (of course!)</li>
</ul>


<p>Adapteva sells an accessories kit containing an SD card, power adapter, micro-HDMI to HDMI cable, and USB-to-micro-USB adapter. Unless you already have these items, buying the kit may save you time.</p>

<h3>These Steps Could Break Your Primary Machine</h3>

<p>Since you&rsquo;re experimenting with Parallella, we can assume that you are an advanced user. Your computer is already backed up, or you&rsquo;re running these steps on a test machine. And you know <a href="http://RayHightower.com/sudo-disclaimer/">the power and pitfalls of sudo</a>. Technology evolves rapidly, and everything you read here could change by the time you read it.</p>

<h3>Comparison with Raspberry Pi or Beaglebone Black</h3>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/parallella_fan.jpg' width='' height='' alt='Bits get hot. Use a fan.' title='Bits get hot. Use a fan.'><span class='caption-text'>Bits get hot. Use a fan.</span></span>
How does the Parallella compare with other single-board computers, like the <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">Raspberry Pi</a> or <a href="http://RayHightower.com/blog/2014/01/02/beaglebone-black-ubuntu-part-1/">Beaglebone Black</a>? The first difference noticed at boot-time: Parallella runs hot! So hot, in fact, that the unit comes with a heat sink and the recommendation to add a fan. I‚Äôve never needed a fan with a Pi or a ‚ÄòBone.</p>

<p>Of course, the Parallella runs hotter because it has more processing power packed tightly together in limited space. Since Parallella is designed to run tasks in parallel, we can expect certain programs to perform faster than they would on the Pi or &lsquo;Bone. Future posts will explore Parallella&rsquo;s performance using languages designed for concurrency, languages like <a href="http://RayHightower.com/blog/2013/06/22/preparing-for-parallella-64-cores-installing-go-on-mac-os-x/">Go</a> and <a href="http://RayHightower.com/blog/2014/02/06/installing-rubinius-using-rvm/">Rubinius</a>. Now, let‚Äôs get started with Parallella.</p>

<h3>Getting the Parallella OS</h3>

<p>Parallella runs a customized version of Ubuntu installed on a micro-SD card. Burning the SD card takes a long time, so it makes sense to start that process first.</p>

<p>Download the files that you will need to burn onto the SD card. I&rsquo;m running Mac OS X on my primary machine, and I&rsquo;m configuring a Parallella-16 with a Zynq 7010 and an HDMI display. Therefore, the files needed for this configuration are:</p>

<ul>
<li><a href="http://downloads.parallella.org/ubuntu/dists/trusty/image/ubuntu-14.04-140611.img.gz">Ubuntu 14.04 for Parallella</a> (released June 11, 2014)</li>
<li><a href="http://downloads.parallella.org/boot/linux/kernel-hdmi-default.tgz">Linux kernel with HDMI support</a></li>
<li><a href="https://github.com/parallella/parallella-hw/blob/master/fpga/bitstreams/parallella_e16_hdmi_gpiose_7010.bit.bin?raw=true">Parallella-16 Zynq 7010 with HDMI display</a></li>
</ul>


<p>Unzip the files and place them in a directory that&rsquo;s handy. You&rsquo;ll need them for the next step. With Mac OS X, you can unzip the files by double-clicking them in <code>Finder</code>.</p>

<p>Note: You might need different files depending on the current date (Parallella software is in a rapid state of flux) and your exact equipment. If your configuration is different, you can make the adjustments described in Parallella&rsquo;s official guide.</p>

<h3>Burn the SD Card</h3>

<p>Insert your SD card into your Mac&rsquo;s SD card reader, and use the Mac OS X <code>diskutil list</code> command to determine the designation of the SD card. If you use portable hard drives with your primary machine, the SD card designation could change from time to time, so it&rsquo;s important to perform this step each time you burn a card.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>diskutil list
</span><span class='line'>/dev/disk0
</span><span class='line'>   <span class="c">#:                       TYPE NAME                    SIZE       IDENTIFIER</span>
</span><span class='line'>   0:      GUID_partition_scheme                        *500.3 GB   disk0
</span><span class='line'>   1:                        EFI EFI                     209.7 MB   disk0s1
</span><span class='line'>   2:                  Apple_HFS MacSSD                  499.4 GB   disk0s2
</span><span class='line'>   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
</span><span class='line'>/dev/disk1
</span><span class='line'>   <span class="c">#:                       TYPE NAME                    SIZE       IDENTIFIER</span>
</span><span class='line'>   0:     FDisk_partition_scheme                       *15.9 GB     disk1
</span><span class='line'>   1:               Windows_NTFS Untitled 1             15.9 GB     disk1s1
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>From this <code>diskutil</code> report, we can see that we want to burn the SD image to <code>/dev/disk1</code>. The other device is the hard drive for my primary machine. Burning the wrong device means destroying data.</p>

<p>To burn the SD card&hellip;</p>

<ol>
<li>Change into the directory where you downloaded the Ubuntu image.</li>
<li>Unmount the destination partition on the SD card.</li>
<li>Use the the <code>dd</code> command to copy the Ubuntu image to the SD card.</li>
</ol>


<p>To execute the above steps as <code>bash</code> commands, do the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> <span class="o">[</span>directory containing the ubuntu image file<span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>diskutil unmountDisk /dev/disk1
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>sudo dd <span class="k">if</span><span class="o">=</span>ubuntu-14.04-140611.img <span class="nv">of</span><span class="o">=</span>/dev/disk1 <span class="nv">bs</span><span class="o">=</span>64k
</span><span class='line'>Password:
</span></code></pre></td></tr></table></div></figure>


<p>The <code>dd</code> command takes a <em>long</em> time to run, over 56 minutes on my machine. Here&rsquo;s a quick run-through of the command options:</p>

<ul>
<li><code>sudo</code> gives you <a href="http://RayHightower.com/sudo-disclaimer/">super powers</a>.</li>
<li><code>dd</code> is the &ldquo;copy and convert&rdquo; command. The letters &ldquo;dd&rdquo; have nothing to do with what the tool actually does. It&rsquo;s just a command name. And like so many things in computer science, the name might be based on a pun.</li>
<li><code>if=</code> specifies the input file. You can include the full path, or if the file is in your current directory, you can omit the path as shown in this example.</li>
<li><code>of=</code> specifies the output file. We know that the SD card is located at <code>/dev/disk</code> so that&rsquo;s where the results of this command are headed.  Note that your destination directory may differ from this one.</li>
<li><code>bs=</code> specifies the block size used for the destination file.</li>
</ul>


<h3>About Block Size</h3>

<p>The Mac section of the official Parallella guide recommends a block size of size of 1 megabyte, while the Linux instructions recommend 64 kilobytes (the option <code>bs=64k</code> in the <code>dd</code> command). I initially used <code>bs=1m</code> on my Mac, and I ran into problems. When I used <code>bs=64k</code>, everything worked fine. Note that I eventually traced my problem to something other than block size (details below) but since the 64k setting still works, I&rsquo;ve left it intact. If I find out why Linux and OS X are using different block sizes, I&rsquo;ll post the information here.</p>

<h3>Checking dd Progress</h3>

<p><span class='caption-wrapper center'><img class='caption' src='http://RayHightower.com/images/dd_progress.png' width='' height='' alt='Activity Monitor' title='Activity Monitor'><span class='caption-text'>Activity Monitor</span></span>
Waiting an hour for the <code>dd</code> command to run can be disconcerting because the machine does not give any feedback on progress. No gas gauge, spinning indicator, nothing. How do we know if the write process is working?</p>

<p>Here&rsquo;s how to check progress. Run Apple&rsquo;s <code>Activity Monitor</code>, and look for <code>dd</code> on the list of processes, as shown in the Activity Monitor screenshot. The number of bytes written will increase slowly while <code>dd</code> burns the Ubuntu image onto the SD card. With the current version of Ubuntu, roughly 7.4GB will be written to the SD. At completion, <code>dd</code> will disappear from the Activity Monitor list and you&rsquo;ll see the following at the command line.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo dd <span class="k">if</span><span class="o">=</span>ubuntu-14.04-140611.img <span class="nv">of</span><span class="o">=</span>/dev/disk1 <span class="nv">bs</span><span class="o">=</span>64k
</span><span class='line'>Password:
</span><span class='line'>121280+0 records in
</span><span class='line'>121280+0 records out
</span><span class='line'>7948206080 bytes transferred in 3363.824531 secs <span class="o">(</span>2362848 bytes/sec<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see from the report, it took 3363.824531 seconds (just over 56 minutes) for <code>dd</code> to burn the Ubuntu image onto the SD card. That&rsquo;s a long time to wait with zero feedback. Activity Monitor will tell you what&rsquo;s going on.</p>

<h3>Confirm Partitions</h3>

<p>To confirm that the partitions have been created and that Ubuntu has been written to the SD card, use <code>diskutil list</code> again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>diskutil list
</span><span class='line'>/dev/disk0
</span><span class='line'>   <span class="c">#:                       TYPE NAME                    SIZE       IDENTIFIER</span>
</span><span class='line'>   0:      GUID_partition_scheme                        *500.3 GB   disk0
</span><span class='line'>   1:                        EFI EFI                     209.7 MB   disk0s1
</span><span class='line'>   2:                  Apple_HFS MacSSD                  499.4 GB   disk0s2
</span><span class='line'>   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
</span><span class='line'>/dev/disk1
</span><span class='line'>   <span class="c">#:                       TYPE NAME                    SIZE       IDENTIFIER</span>
</span><span class='line'>   0:     FDisk_partition_scheme                        *15.9 GB    disk1
</span><span class='line'>   1:                 DOS_FAT_32 BOOT                    134.2 MB   disk1s1
</span><span class='line'>   2:                      Linux                         7.3 GB     disk1s2
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>As expected, <code>/dev/disk0</code> remains unchanged. We want it that way because that&rsquo;s where our primary machine&rsquo;s operating system resides. <code>/dev/disk1</code> (your actual SD card designation may be different) is the target disk we&rsquo;re after. Two new partitions are on the SD card, a FAT32 partition named <code>BOOT</code> and a Linux partition.</p>

<p>Next we need to copy some supporting files to the new <code>BOOT</code> partition.</p>

<h3>Copying Additional Files to the SD Card</h3>

<p>Now that Ubuntu resides on the SD card, it&rsquo;s time to add the files that support HDMI video and the FPGAs. Here&rsquo;s how.</p>

<p>The additional files will need to be copied to <code>/BOOT</code> on the SD card. While it might make sense to reach the <code>BOOT</code> partition as <code>/dev/disk1</code>, you will actually reach it via <code>/Volumes/BOOT</code>.</p>

<p>We target <code>/dev/disk1</code> when burning the Ubuntu image, but to copy the supporting files we target <code>/Volumes/BOOT</code>. Both designations point to the same place, the SD card. Why the name switch?</p>

<p>I don&rsquo;t know why two different designations are used for the same SD card. I only know that it works. You can expect to see an update posted here if I find an explanation. Or if you have an answer, feel free to post in the comments below.</p>

<p>Before we copy over the files, let&rsquo;s see what&rsquo;s on the <code>BOOT</code> partition on the SD card.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span><span class="nb">cd</span> /Volumes/BOOT/
</span><span class='line'>
</span><span class='line'>/Volumes/BOOT<span class="nv">$ </span>ls -al
</span><span class='line'>total 12
</span><span class='line'>drwxrwxrwx@ 1 rth   staff   512 Jul  5 23:44 .
</span><span class='line'>drwxrwxrwt@ 4 root  admin   136 Jul  5 23:44 ..
</span><span class='line'>drwxrwxrwx  1 rth   staff   512 Jul  5 23:44 .Spotlight-V100
</span><span class='line'>drwxrwxrwx@ 1 rth   staff   512 Jul  5 23:44 .Trashes
</span><span class='line'>-rwxrwxrwx  1 rth   staff  4096 Jul  5 23:44 ._.Trashes
</span><span class='line'>drwxrwxrwx  1 rth   staff   512 Jul  5 23:44 .fseventsd
</span><span class='line'>
</span><span class='line'>/Volumes/BOOT<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<h3>Gotcha #1: The FPGA Bitstream File</h3>

<p>First, change into the directory where you stored the additional Parallella files, and copy the FPGA bitstream file to <code>/Volumes/BOOT</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cp parallella_e16_hdmi_gpiose_7010.bit.bin /Volumes/BOOT/
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /Volumes/BOOT/
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>mv parallella_e16_hdmi_gpiose_7010.bit.bin parallella.bit.bin
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>First gotcha: I made the mistake of simply copying the <code>parallella_e16_hdmi_gpiose_7010.bit.bin</code> file without renaming it to <code>parallella.bit.bin</code>. Parallella will only boot when it sees a file with this filename on the SD card&rsquo;s <code>BOOT</code> partition. The original file name will probably change as the software gets updated. With each change, we will need to make sure that the file is renamed <code>parallella.bit.bin</code> on the Parallella.</p>

<p>Obvious in hindsight, but it took me awhile to track that one down!</p>

<h3>Copy the Last Two Files</h3>

<p>Two files were decompressed from <code>kernel-hdmi-default.tgz</code>: <code>devicetree.dtb</code> and <code>uImage</code>. Change into the directory where the files were decompressed, and copy them to <code>/Volumes/BOOT</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cp devicetree.dtb /Volumes/BOOT/
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>cp uImage /Volumes/BOOT/
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Here‚Äôs what the BOOT partition should look like when you‚Äôre done..</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/Volumes/BOOT<span class="nv">$ </span>ls -al
</span><span class='line'>total 12853
</span><span class='line'>drwxrwxrwx@ 1 rth   staff     1024 Jul  6 12:14 .
</span><span class='line'>drwxrwxrwt@ 4 root  admin      136 Jul  6 12:11 ..
</span><span class='line'>drwxrwxrwx  1 rth   staff      512 Jul  6 12:11 .Spotlight-V100
</span><span class='line'>drwxrwxrwx@ 1 rth   staff      512 Jul  6 12:11 .Trashes
</span><span class='line'>-rwxrwxrwx  1 rth   staff     4096 Jul  6 12:11 ._.Trashes
</span><span class='line'>-rwxrwxrwx  1 rth   staff     4096 Jul  6 12:13 ._devicetree.dtb
</span><span class='line'>-rwxrwxrwx  1 rth   staff     4096 Jul  6 12:14 ._parallella.bit.bin
</span><span class='line'>-rwxrwxrwx  1 rth   staff     4096 Jul  6 12:13 ._uImage
</span><span class='line'>drwxrwxrwx  1 rth   staff      512 Jul  6 12:11 .fseventsd
</span><span class='line'>-rwxrwxrwx@ 1 rth   staff     8607 Jul  6 12:13 devicetree.dtb
</span><span class='line'>-rwxrwxrwx@ 1 rth   staff  2083744 Jul  6 12:14 parallella.bit.bin
</span><span class='line'>-rwxrwxrwx@ 1 rth   staff  4468792 Jul  6 12:13 uImage
</span><span class='line'>
</span><span class='line'>/Volumes/BOOT<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/eject_boot.png' width='' height='' alt='Eject the SD card.' title='Eject the SD card.'><span class='caption-text'>Eject the SD card.</span></span></p>

<h3>Eject the SD Card, Insert in Parallella</h3>

<p>Now you&rsquo;re ready to eject the SD card from the Mac and insert it in the Parallella. Plug in the HDMI cable, keyboard, mouse, and Ethernet connection. Power up the Parallella, and welcome to the next <em>gotcha</em>.</p>

<h3>Gotcha #2: Powered USB Required</h3>

<p>Parallella booted to a beautiful GUI, but the system would not respond to the keyboard or mouse. After swapping a few keyboard/mouse combinations, I finally tried a powered USB hub. The powered hub worked.</p>

<p>Through trial and error I learned that the Parallella can handle a single keyboard plugged into the micro-USB port. However, if two devices are plugged in via USB, a powered hub is required. A passive USB hub will not work. A combination keyboard, one with both a keyboard and a trackpad, will also need a powered USB hub.</p>

<h3>Default Login Credentials</h3>

<p>Default login credentials for Parallella are&hellip;</p>

<ul>
<li>username = linaro</li>
<li>password = linaro</li>
</ul>


<h3>SSH, Vim, Git, etc.</h3>

<p>You can SSH into the Parallella from the network&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>ssh linaro@192.168.11.133
</span><span class='line'>linaro@192.168.11.133<span class="err">&#39;</span>s password:
</span><span class='line'>Welcome to Linaro 14.04 <span class="o">(</span>GNU/Linux 3.12.0-g0bc9c3a-dirty armv7l<span class="o">)</span>
</span><span class='line'>
</span><span class='line'> * Documentation:  https://wiki.linaro.org/
</span><span class='line'>Last login: Sun Jul  6 17:34:17 2014 from wisdomgroup-mbp13
</span><span class='line'>linaro-nano:~&gt;
</span></code></pre></td></tr></table></div></figure>


<p>&hellip; Vim is operational&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>linaro-nano:~&gt; which vim
</span><span class='line'>/usr/bin/vim
</span><span class='line'>linaro-nano:~&gt; vim --version
</span><span class='line'>VIM - Vi IMproved 7.4 <span class="o">(</span>2013 Aug 10, compiled Jan  2 2014 19:49:14<span class="o">)</span>
</span><span class='line'>linaro-nano:~&gt;
</span></code></pre></td></tr></table></div></figure>


<p>&hellip; and Git works fine.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>linaro-nano:~&gt; which git
</span><span class='line'>/usr/bin/git
</span><span class='line'>linaro-nano:~&gt; git --version
</span><span class='line'>git version 1.9.1
</span><span class='line'>linaro-nano:~&gt;
</span></code></pre></td></tr></table></div></figure>


<h3>Scrot for Screenshots</h3>

<p>If you want to take a screenshot of the Parallella display, use <code>scrot</code>.  It comes with the Ubuntu installation. Type <code>scrot</code> at the command line and hit enter. Five seconds later, the entire screen will be captured and stored in a file called <code>[time stamp]_1920x1080_scrot.png</code> in the current directory.</p>

<h3>Conclusion</h3>

<p>After waiting a year for Parallella to arrive, I&rsquo;m excited to have the device up and running. Future posts will explore the &ldquo;why?&rdquo; behind parallel computing. Thanks Adapteva for helping to democratize supercomputing. Awesome times are ahead!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.js Prep for OpenROV]]></title>
    <link href="http://RayHightower.com/blog/2014/06/30/node-dot-js-prep-for-openrov/"/>
    <updated>2014-06-30T14:06:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/06/30/node-dot-js-prep-for-openrov</id>
    <content type="html"><![CDATA[<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/nodejs-white.png' width='' height='' alt='' title=''><span class='caption-text'></span></span>
<a href="http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov/">OpenROV is an underwater robot</a> controlled through a web browser. The server-side of the web app is written in Node.js, running on a <a href="http://RayHightower.com/blog/2013/05/22/beaglebone-black-running-ruby-on-rails/">BeagleBone Black</a> inside the OpenROV.</p>

<p>You don&rsquo;t need to know Node.js in order to pilot an OpenROV. And you don&rsquo;t need to do anything in this article to construct an OpenROV from a kit. But if you‚Äôre the kind of maker who likes to dig deep into a project, you might enjoy exploring Node.js.</p>

<!--more-->


<h3>Mac OS X and Node.js</h3>

<p>Everything written here applies to Node.js as it runs on Mac OS X. If your local machine runs Linux or Windows, you will need to consult other resources in order to run Node locally.</p>

<h3>Homebrew First</h3>

<p>Make sure you‚Äôre running <a href="http://RayHightower.com/blog/2014/02/12/homebrew-fundamentals/">Homebrew</a> on your Mac. Homebrew is a seamless way to manage packages on Mac OS X. To install Homebrew&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)&quot;</span>install
</span></code></pre></td></tr></table></div></figure>


<p>After installation, confirm that Homebrew is running properly&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew doctor
</span></code></pre></td></tr></table></div></figure>


<h3>Installing Node.js</h3>

<p>Now that Homebrew is installed and running, Node.js can be installed with a single line command.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install node
</span></code></pre></td></tr></table></div></figure>


<p>To confirm that Node.js is installed on your system and to check the version number&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span> which node
</span><span class='line'>/usr/local/bin/node
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>node --version
</span><span class='line'>v0.10.26
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<h3>Hello World in Node.js</h3>

<p>You know the compter science tradition: The first program in any new language has to say &ldquo;Hello World.&rdquo; Here&rsquo;s a sample <code>Hello World</code> program from the official <a href="http://nodejs.org">Node.js</a> web site, slightly modified to suit OpenROV.</p>

<p>First, create a file called <code>helloworld.js</code> and fill it with the following code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Sample web server from http://nodejs.org, slightly modified.</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">http</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;http&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">res</span><span class="p">.</span><span class="nx">writeHead</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;Content-Type&#39;</span><span class="o">:</span> <span class="s1">&#39;text/plain&#39;</span><span class="p">});</span>
</span><span class='line'>  <span class="nx">res</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="s1">&#39;Hello World. OpenROV runs Node.js!&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}).</span><span class="nx">listen</span><span class="p">(</span><span class="mi">1337</span><span class="p">,</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Server running at http://127.0.0.1:1337/&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, from the same directory where you saved <code>helloworld.js</code>, run the file from the command line like so&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>node helloworld.js
</span><span class='line'>Server running at http://127.0.0.1:1337/
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, open up a web browser on your local machine and navigate to <code>http://127.0.0.1:1337</code>. You should see a bare-bones web page similar to this one.</p>

<p><span class='caption-wrapper center'><img class='caption' src='http://RayHightower.com/images/openrov-runs-nodejs.png' width='' height='' alt='' title=''><span class='caption-text'></span></span></p>

<p>Now that you have Node.js running locally, you&rsquo;re ready to explore the <a href="http://github.com/openrov">OpenROV repo on GitHub</a>.</p>

<h3>Next Steps</h3>

<p>Future blog posts about Node.js and OpenROV will consider questions like:</p>

<ul>
<li><p>What does Node.js do for OpenROV that other languages can‚Äôt do?</p></li>
<li><p>What other languages might we use to control OpenROV? It‚Äôs all open source, so our brainstorms could one day turn into actual code running on OpenROV!</p></li>
<li><p>How does Node.js on the BeagleBone Black interact with the Arduino and other OpenROV components?</p></li>
</ul>


<p>Keep exploring!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Get Back to Making Things]]></title>
    <link href="http://RayHightower.com/blog/2014/06/28/get-back-to-making-things/"/>
    <updated>2014-06-28T16:25:00-05:00</updated>
    <id>http://RayHightower.com/blog/2014/06/28/get-back-to-making-things</id>
    <content type="html"><![CDATA[<blockquote><p>You know what the trouble is? We used to make things in this country, build things. Now we just put our hand in the next guy‚Äôs pocket.
<br/>~Frank Sobatka</p></blockquote>

<p><span class='caption-wrapper right'><img class='caption' src='http://RayHightower.com/images/zero-to-maker.gif' width='' height='' alt='' title=''><span class='caption-text'></span></span>
David Lang is a maker. After a stint with a struggling Silicon Valley startup, David teamed up with former NASA engineer <a href="http://openrov.com/profile/1gupl83kvnk8f">Eric Stackpole</a> to build an underwater robot called <a href="http://RayHightower.com/blog/2014/06/16/citizen-science-with-openrov/">OpenROV</a>. That&rsquo;s a two-sentence oversimplification of David&rsquo;s maker journey, detailed in his book: <a href="http://shop.oreilly.com/product/0636920028284.do">Zero to Maker: Learn (Just Enough) to Make (Just About) Anything</a>.</p>

<p>The book starts off like a novel, with the exploration of the mysterious Hall City Cave and an 1840s-era gold robbery. Fast-forward to the present day where a multi-disciplinary team of makers joins forces to create an inexpensive vehicle for underwater exploration.</p>

<p>The author was not a born maker. But through force of will, discipline, and the right mentorship, he grew from non-maker to co-founder of the OpenROV company in roughly one year.</p>

<!--more-->


<h3>Making is a Team Sport</h3>

<p><em>Zero to Maker</em> will not teach you how to use tools, what to make, or what manuals to read. But it will put you on the path to learning. For example, the author shares his first experience at a <a href="http://makerfaire.com/">Maker Faire</a>, a gathering for people who make things. Many of the exhibitors have spent decades honing their skills, while some are brand new and full of enthusiasm. Everyone shares knowledge in the Maker community. And as a result, everyone grows.</p>

<p>Maker Spaces are places where tools and expertise are shared on a regular basis. <a href="https://www.noisebridge.net/">Noisebridge</a> is a maker space in San Francisco where the author got some of his early experience with specialized tools. <a href="http://pumpingstationone.org/">Pumping Station One</a> and <a href="http://www.sshchicago.org/">Southside Hackerspace Chicago</a> shoot for similar goals in Chicago.</p>

<p>The author points out that no matter what you&rsquo;re trying to make, chances are that someone else has made something similar and they can share experience with you. Likewise, you have experience that other makers may find valuable, even on day one of your maker journey. Sometimes we don&rsquo;t know what we know. Maker communities remove the friction so that knowledge can be shared more freely.</p>

<h3>The IKEA Effect</h3>

<p>Why is the maker movement so powerful? The author explores this question in one very interesting section of the book. As it turns out, Researchers at the Harvard Business School think they have the answer. When we put our sweat and effort into building a project, we perceive the project to be more valuable. The researchers refer to this phenomenon as the IKEA effect. If we sweat to build something, it becomes valuable to us.</p>

<h3>Recommendation</h3>

<p>If you are a maker, or if you want to become a maker, this book is worth reading. And once you&rsquo;re done reading, go make something!</p>

<p><em>Note: A version of this article is also posted at <a href="http://www.chicagoruby.org/book-reviews/">http://www.chicagoruby.org/book-reviews/</a>.</em></p>
]]></content>
  </entry>
  
</feed>
