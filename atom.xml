<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RayHightower.com]]></title>
  <link href="http://RayHightower.com/atom.xml" rel="self"/>
  <link href="http://RayHightower.com/"/>
  <updated>2013-10-27T17:51:52-05:00</updated>
  <id>http://RayHightower.com/</id>
  <author>
    <name><![CDATA[Raymond T. Hightower - Chicago Ruby on Rails & iOS Developer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Why We Need STEM]]></title>
    <link href="http://RayHightower.com/blog/2013/07/29/why-we-need-stem/"/>
    <updated>2013-07-29T00:22:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/29/why-we-need-stem</id>
    <content type="html"><![CDATA[<p><a href="http://ignitechi.org">Ignite Chicago</a> is an evening of 5-minute talks presented by speakers who want to inspire others. Each speaker is allowed twenty slides, and the slides advance automatically every fifteen seconds. The Ignite organizers asked me to present <em>Why We Need STEM</em> at <a href="http://1871.com">1871</a>. I&rsquo;ll post the video when it becomes available. For now, check out the slides&hellip;</p>

<!-- more -->


<center><script async class="speakerdeck-embed" data-id="4c328420da3d01301487425a5f060967" data-ratio="1.29456384323641" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script></center>


<p>Thank you Ignite Chicago organizers (<a href="http://www.goteampete.com">Pete Aiello</a> and <a href="http://clairelew.com">Claire Lew</a>) for the invitation and for hosting a great event.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Petascale Tools Workshop 2013]]></title>
    <link href="http://RayHightower.com/blog/2013/07/19/petascale-tools-workshop-2013/"/>
    <updated>2013-07-19T02:12:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/19/petascale-tools-workshop-2013</id>
    <content type="html"><![CDATA[<p>The <a href="http://www.paradyn.org/CSCADS2013/index.html">Petascale Tools Workshop</a> is for computer scientists who create tools that enable apps to run efficiently on the world&rsquo;s fastest supercomputers. Supercomputer performance is measured in petaflops: 10<sup><sup>15</sup></sup> floating point operations per second. That&rsquo;s blazing speed, thousands of times faster than the fastest MacBook Pro.</p>

<!--more-->


<p><a href="http://WisdomGroup.com">WisdomGroup</a> was invited to attend the workshop because we have a client client, <a href="http://www.wisdomgroup.com/case-studies/texas-am-university/">Texas A &amp; M University</a>, operating in the high performance computing (HPC) space. As the only non-PhD in the room, I was given a chance to exercise Pat Metheny&rsquo;s <a href="http://RayHightower.com/blog/2013/07/17/pat-metheny-be-the-worst/">be-the-worst</a> philosophy in the extreme. The result: I learned things that will help WisdomGroup to deliver better solutions for our clients, especially the TAMU team.</p>

<h3>One Megawatt = $1,000,000.00</h3>

<p>As with other disciplines of engineering, supercomputer design is all about managing trade-offs. If you increase the clock speed, how will that affect your electrical bill? If you increase the size of the cache, how much more will you spend on hardware?</p>

<p>Every Petascale Workshop presenter highlighted the toughest constraint: The cost of electrical power. High performance computers gulp electricity. The wattage numbers were all very abstract to me until one presenter layed out a direct one-to-one correspondence between electricity and money. <em>One megawatt of power used over the course of a year costs one million dollars.</em></p>

<p>Express a constraint in terms of money, and the abstractions melt away.</p>

<p>The debate between the scientists was vigorous yet respectful. After hearing the 1-to-1 rule of thumb, one audience member remarked, &ldquo;I know how to genererate a megawatt for only $865,000.&rdquo; He then outlined his solution, a combination of coal, fossil fuels, and natural gas that would achieve the reduction. The more important point: Electricity is expensive.</p>

<h3>Re-Framing the Power Problem</h3>

<p>There is another way to look at the power problem. Consider it from the perspective of performance, not power. Here&rsquo;s how one presenter put it: No matter where we build a supercomputer, we will only have a limited amount of power. Let&rsquo;s look at the maximum available power as a constraint and go from there.</p>

<p>Rubyists are familiar with the saying &#34;<a href="http://gettingreal.37signals.com/ch03_Embrace_Constraints.php">constraints are liberating</a>&#34;, popularized by 37signals. Since power limitations are real constraints, our next step is to figure out how to extract the best results allowed within the constraints.</p>

<h3>Top Five</h3>

<p>Supercomputer scientists are as competitive as olympic athletes. As of June 2013, the five fastest machines in the world are:</p>

<center>
<table class="table table-condensed">
    <thead>
    <tr>
        <th width="50">Rank</th>
        <th width="75">Site</th>
        <th width="100" style="text-align: right;">Cores</th>
        <th width="75" style="text-align: right;">Rmax (PF/s)</th>
        <th width="75" style="text-align: right;">Power (MW)</th>
    </tr>
    </thead>

    <tr class="sublist odd">
        <td><span class="badge">1</span></td>
        <td>China</td>
        <td style="text-align: right;">3,120,000</td>
        <td style="text-align: right;">33.9</td>
        <td style="text-align: right;">17.8</td>
    </tr>

    <tr class="sublist even">
        <td><span class="badge">2</span></td>
        <td>USA</td>
        <td style="text-align: right;">560,640</td>
        <td style="text-align: right;">17.5</td>
        <td style="text-align: right;">8.2</td>
    </tr>

    <tr class="sublist odd">
        <td><span class="badge">3</span></td>
        <td>USA</td>
        <td style="text-align: right;">1,572,864</td>
        <td style="text-align: right;">17.2</td>
        <td style="text-align: right;">7.9</td>
    </tr>

    <tr class="sublist even">
        <td><span class="badge">4</span></td>
        <td>Japan</td>
        <td style="text-align: right;">705,024</td>
        <td style="text-align: right;">10.5</td>
        <td style="text-align: right;">12.6</td>
    </tr>

    <tr class="sublist odd">
        <td><span class="badge">5</span></td>
        <td>USA</td>
        <td style="text-align: right;">786,432</td>
        <td style="text-align: right;">8.6</td>
        <td style="text-align: right;">3.9</td>
    </tr>
</table>
</center>


<p>&nbsp;<br/>
Scientists determine Rmax by running the <a href="http://en.wikipedia.org/wiki/LINPACK_benchmarks">LINPACK</a> benchmark. <a href="http://top500.org">Top500.org</a> has more information about the fastest
machines.</p>

<h3>Digging Deeper</h3>

<p>Some of the biggest performance gains can be realized through more efficient software. Most supercomputers run some distribution of Linux. Some teams of researchers focus on ways to optimize the Linux kernel for supercomputing.</p>

<p>Optimization is not a one-size-fits all process. The scientists need to consder the type of applications being run, percentage of time spent on I/O, efficiency of algorithms, and so on. Each potential optimization choice is like a node on an ever expanding tree. The choices are endless, and the seasoned expert will know where to focus for the best results.</p>

<p>In the Ruby world, we might use tools like <a href="http://newrelic.com">New Relic</a> or <a href="http://codeclimate.com">Code Climate</a> to identify hot spots in our code, places where re-factoring can reduce CPU utilization or improve I/O. HPC tools tend to be highly customizable because the users are intimately familar with their own hardware. During a lunch conversation, one team of scientists shared how they suspected a defect in hardware counters used to measure the behavior of a supercomputer under study. The instincts of the scientists proved correct, and the errant counters were replaced.</p>

<h3>Conclusion</h3>

<p>When smart people challenge each other to grow, great things happen. The scientists at the Petascale Tools Workshop were clearly helping each other to grow. The next few years in supercomputing will be exciting!</p>

<h3>Acknowledgements</h3>

<p>I am grateful to the organizers of the Petascale Tools Workshop for hosting the event, and to the TAMU team for extending the invitation. Thank you both!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pat Metheny: Be the Worst]]></title>
    <link href="http://RayHightower.com/blog/2013/07/17/pat-metheny-be-the-worst/"/>
    <updated>2013-07-17T07:58:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/17/pat-metheny-be-the-worst</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/PatMethenyGroup.jpg" width="400" height="400"
align="right" alt="Pat Metheny: Be the Worst" title="Pat Metheny: Be the Worst" >
Pat Metheny encourages musicians to &ldquo;be the worst&rdquo; in whatever band they choose to join. Of course, he does not mean to play poorly.</p>

<p>Rather, he encourages us to surround ourselves with the best musicians we can find so that we can learn from them. The concept is explored further in the book <a href="http://RayHightower.com/blog/2013/02/17/apprenticeship-patterns-by-dave-h-hoover-and-adewale-oshineye/">Apprenticeship Patterns</a> by Dave Hoover and Ade Oshineye.</p>

<p>I was reminded to be-the-worst while attending a conference this week, an event where I was surrounded by computer scientists with much more experience than me. I learned a lot his week. I will share details in a future post.</p>

<p>In the meantime, I invite you to join me in a Pat Metheny learning exercise of your choice. Be the worst!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM Saves the Day for Octopress]]></title>
    <link href="http://RayHightower.com/blog/2013/07/15/rvm-saves-the-day-for-octopress/"/>
    <updated>2013-07-15T14:29:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/15/rvm-saves-the-day-for-octopress</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org">Octopress</a> is a lean blogging engine that happens to power <a href="http://rayhightower.com">RayHightower.com</a>. Earlier today, after a quick update to the blog, I encountered the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'>/Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/bundler-1.2.4/lib/bundler/rubygems_integration.rb:187:in <span class="sb">`</span>stub_source_index170<span class="s1">&#39;: uninitialized constant Gem::SourceIndex (NameError)</span>
</span><span class='line'><span class="s1">     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/bundler-1.2.4/lib/bundler/rubygems_integration.rb:353:in `stub_rubygems&#39;</span>
</span><span class='line'>     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/bundler-1.2.4/lib/bundler/rubygems_integration.rb:250:in <span class="sb">`</span>replace_entrypoints<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/bundler-1.2.4/lib/bundler/runtime.rb:14:in `setup&#39;</span>
</span><span class='line'>     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/bundler-1.2.4/lib/bundler.rb:116:in <span class="sb">`</span>setup<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/rubygems-bundler-1.1.0/lib/rubygems-bundler/noexec.rb:77:in `setup&#39;</span>
</span><span class='line'>     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@global/gems/rubygems-bundler-1.1.0/lib/rubygems-bundler/noexec.rb:89:in <span class="sb">`</span>&lt;top <span class="o">(</span>required<span class="o">)</span>&gt;<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     from /Users/rth/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:116:in `require&#39;</span>
</span><span class='line'>     from /Users/rth/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:116:in <span class="sb">`</span>rescue in require<span class="s1">&#39;</span>
</span><span class='line'><span class="s1">     from /Users/rth/.rvm/rubies/ruby-1.9.3-p448/lib/ruby/site_ruby/1.9.1/rubygems/core_ext/kernel_require.rb:122:in `require&#39;</span>
</span><span class='line'>     from /Users/rth/.rvm/gems/ruby-1.9.3-p448@octopress/bin/ruby_noexec_wrapper:9:in <span class="sb">`</span>&lt;main&gt;<span class="err">&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Not good. What happened?</p>

<!--more-->


<h3>The Problem</h3>

<p>From the error message, it appeared that my current version of Bundler was incompatible with Octopress. Googling for the error message (a favorite trick) was unhelpful. Had to try a different line of attack.</p>

<h3>The Solution: Roll Back</h3>

<p>Fortunately, I use <a href="http://rayhightower.com/blog/2013/05/16/upgrading-ruby-with-rvm/">RVM</a>. Currently installed versions of Ruby:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>rvm list
</span><span class='line'>
</span><span class='line'>rvm rubies
</span><span class='line'>
</span><span class='line'>   jruby-1.7.3 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>   macruby-0.12 <span class="o">[</span> i686 <span class="o">]</span>
</span><span class='line'>   ruby-1.8.7-p334 <span class="o">[</span> i686 <span class="o">]</span>
</span><span class='line'>   ruby-1.9.2-p290 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>   ruby-1.9.3-p448 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'><span class="o">=</span>* ruby-2.0.0-p247 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># =&gt; - current</span>
</span><span class='line'><span class="c"># =* - current &amp;&amp; default</span>
</span><span class='line'><span class="c">#  * - default</span>
</span></code></pre></td></tr></table></div></figure>


<p>Since <code>$ rake deploy</code> last worked with Ruby 1.9.2 on my machine, I decided to roll back to that point.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm use ruby-1.9.2-p290
</span></code></pre></td></tr></table></div></figure>


<p>Next, I built another <code>octopress</code> gemset to work with this version of Ruby, pointed to the gemset, and used Bundler to add the necessary gems.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm gemset create octopress
</span><span class='line'><span class="nv">$ </span>rvm gemset use octopress
</span><span class='line'><span class="nv">$ </span>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>And now <code>$ rake generate</code> works as required.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rake generate
</span><span class='line'><span class="c">## Generating Site with Jekyll</span>
</span><span class='line'>identical <span class="nb">source</span>/stylesheets/screen.css
</span><span class='line'>Configuration from /Users/rth/Code/Ruby/apps/rayhightower/_config.yml
</span><span class='line'>Building site: <span class="nb">source</span> -&gt; public
</span><span class='line'>Successfully generated site: <span class="nb">source</span> -&gt; public
</span></code></pre></td></tr></table></div></figure>


<p>Success!</p>

<h3>RVM Saves the Day</h3>

<p>Once again, RVM lets me recover quickly by shifting to an earlier version of Ruby. What&rsquo;s the root cause of the problem? I don&rsquo;t know at this point. But for now, the blog is up &amp; running!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Successful Companies Are Built Around Communities]]></title>
    <link href="http://RayHightower.com/blog/2013/07/09/successful-companies-are-built-around-communities/"/>
    <updated>2013-07-09T23:52:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/09/successful-companies-are-built-around-communities</id>
    <content type="html"><![CDATA[<p><a href="http://www.sethgodin.com">Seth Godin</a> is on a mission. Technology enables us to form communities that stretch beyond traditional boundaries like age and social status. Godin is convinced that revolutions within and between communities will yield huge opportunities for those who have the courage to take action. Don’t waste the revolution!</p>

<p>I had the opportunity to hear Godin speak at a Chicago area event some time ago. This post was inspired by the presentation.</p>

<!--more-->


<h3>Recognizing Change</h3>

<p>Humans rarely recognize change when we’re in the middle of it. We’re too busy living! One example from Chicago history: The advent of the skyscraper. On the surface, a skyscraper is just a tall building… big deal. However, in hindsight we can see that the skyscraper (and the Chicago school of architecture) in the late 1880s led to the expansion of cities. Cities became magnets for <a href="http://en.wikipedia.org/wiki/Knowledge_worker">knowledge workers</a>. As cities grew to accommodate more people, political power shifted away from farms and toward urban areas. Professional service firms, companies that exist to make other companies better, blossomed &amp; grew. We continue to feel the effects of this trend today, over a century later.</p>

<p>Godin believes that we are now dealing with another catalyst of change, one that is even more powerful than the skyscraper: the community. Communities are growing in size and power. Companies that know how to leverage communities are thriving.</p>

<h3>Threadless is Not About T-Shirts</h3>

<p>Fast forward to the early 21st century where we find a Chicago-area company called Threadless. If you sell a product that is easily copied, how do you differentiate yourself from the competition? By selling something that goes beyond the easily cloned product. <a href="http://threadless.com/">Threadless</a> has created a community around T-shirt sales. When building the company, the founders of Threadless looked at available technology and asked themselves, “What do people really want?” Their answers:</p>

<ul>
<li>To be famous.</li>
<li>To be recognized.</li>
<li>To be talked about.</li>
</ul>


<p>So they built the company to fulfill these basic human needs. If you’re an artist, submit a design. If enough people vote for your design, it gets printed on a shirt. And while you’re looking around the Threadless site, you’re welcome to buy any of the other designs for about $20 each.</p>

<p>While other t-shirt companies are trying to undercut each other on price, Threadless gives customers what they really want, customers gladly pay a premium, and everybody wins.</p>

<p><img src="http://RayHightower.com/images/rails_logo.jpg" width="200" height="285" align="right" title="Ruby on Rails Logo" alt="Ruby on Rails Logo"></p>

<h3>We Don’t Pay for Software. We Pay for Results</h3>

<p>Godin cites <a href="http://37signals.com">37signals</a> as an example of a company that nutures a community of software developers by giving away software for free. 37signals extracted the <a href="http://rubyonrails.org">Ruby on Rails</a> web framework from their Basecamp project management tool. Rather than charge for Rails, the company makes it available to the open source community at no charge. 37signals benefits because the people who use Rails, software developers, end up trying, buying and recommending the paid products to their colleagues. This results in an upward spiral in revenue for the company. To top it off, 37signals benefits from the open source community in ways that are not easily measured in dollars.</p>

<p>WisdomGroup is grateful to the entire Ruby on Rails community, including 37signals. We express our gratitude through <a href="http://chicagoruby.org">ChicagoRuby</a> and <a href="http://windycityrails.org">WindyCityRails</a>. Contributing to the open source community has enabled us to develop wonderful relationships with contractors, clients, advisors… all sorts of people who have helped us to grow &amp; prosper. User groups and conferences enable the software community to come together – creating something far beyond the grasp of an individual genius.</p>

<h3>The Bottom Line</h3>

<p>Seth Godin’s point: Our most successful companies are built around communities. Companies that know how to build &amp; nurture communities will thrive &amp; grow. Companies stuck in the old paradigm (massive advertising on a massive scale) might survive, but they will be easily eclipsed by companies that understand the value of strong communities. The revolution is here, and Seth Godin urges all of us not to waste it.</p>

<p><em>Note: An earlier version of this article was published at <a href="http://wisdomgroup.com">WisdomGroup.com</a>.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FeeddlerPro for RSS]]></title>
    <link href="http://RayHightower.com/blog/2013/07/04/feeddlerpro-for-rss/"/>
    <updated>2013-07-04T15:07:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/07/04/feeddlerpro-for-rss</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/FeeddlerPro-accounts.png" width="300" height="258"
align="right" alt="FeeddlerPro Accounts" title="FeeddlerPro Accounts">
Yes, the name appears misspelled. But <a href="https://itunes.apple.com/us/app/feeddler-rss-reader-pro/id365710282?mt=8">FeeddlerPro</a> is my choice for RSS on iPhone and iPad. Feeddler has long been my favorite RSS reader. The developer&rsquo;s decision to add support for services beyond Google Reader (Bazqux Reader, FeedHQ, and The OldReader) sealed the decision for me.</p>

<h3>Second Choice</h3>

<p><a href="http://RayHightower.com/blog/2013/06/21/replacing-google-reader-with-feed-wrangler/">Feed Wrangler</a> was a close second. I like Feed Wrangler&rsquo;s minimalist approach to RSS. However, the app is missing a few features that FeeddlerPro already has baked in.</p>

<!--more-->


<h3>Server-Side Synchronization</h3>

<p>Of course, an RSS client is nothing without the server-side to keep everything synchronized. I chose <a href="http://theoldreader.com">The Old Reader</a> because it syncs between iPhone, iPad, and web without extra fluff.</p>

<p>Other RSS providers probably offer the same level of service. Fortunately, Feeddler makes it easy to switch between RSS services seamlessly.</p>

<p>Google Reader is history, but RSS marches on.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PechaKucha: Developer Education at TableXI]]></title>
    <link href="http://RayHightower.com/blog/2013/06/27/pechakucha-developer-education-at-tablexi/"/>
    <updated>2013-06-27T15:13:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/06/27/pechakucha-developer-education-at-tablexi</id>
    <content type="html"><![CDATA[<p><a href="http://pechakucha.org">PechaKucha</a> is a concise presentation style developed in Japan. The PechaKucha format is 20x20: The presenter must share an idea in twenty slides, each displayed for exactly twenty seconds, advancing automatically. Total presentation time = six minutues, forty seconds.</p>

<!--more-->


<p><a href="http://www.tablexi.com/blog/2013/06/practice-begins-with-play-a-table-talk/developers/">TableXI</a> hosted a PechaKucha on June 13th with the theme <em>Developer Education</em>. I was one of six presenters invited to speak. Video:</p>

<center><iframe width='460' height='345' src="http://www.pechakucha.org/presentations/51b92936dbdd200cbc000011/embed" frameborder="0"></iframe></center>


<p>One highlight from the PechaKucha presentation: This year&rsquo;s <a href="http://windycityrails.org">WindyCityRails</a> will include a youth program on Thursday afternoon. Details will be announced in July. Follow <a href="http://twitter.com/windycityrails">@WindyCityRails</a> for the latest news on the program.</p>

<p>Thanks TableXI for the PechaKucha invitation, and for sponsoring WindyCityRails 2013!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prep for Parallella's 64 Cores: Installing Go on Mac OS X]]></title>
    <link href="http://RayHightower.com/blog/2013/06/22/preparing-for-parallella-64-cores-installing-go-on-mac-os-x/"/>
    <updated>2013-06-22T12:58:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/06/22/preparing-for-parallella-64-cores-installing-go-on-mac-os-x</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/parallella.jpg" width="450" height="257" alt="Parallella 64-core supercomputer" title="Parallella 64-core supercomputer" align="right" imgcap="Parallella Board">
The idea of owning a 64-core parallel system for two hundred dollars (yes, $200.00) is exciting. <a href="http://www.parallella.org/introduction/">Parallella</a> is working to make that happen, perhaps as early as August 2013. To prepare for that day, I&rsquo;ve decided to introduce myself to the Go language.</p>

<!--more-->


<h3>What is Go?</h3>

<p><a href="http://golang.org">The Go language</a> is designed for parallel systems. Why does Go exist? One developer sums it up this way:</p>

<blockquote><p>Go was created at Google, by Google, for Google-size problems.<br/>~Dave Astels</p></blockquote>

<p>Google writes software that runs on thousands of machines in parallel. As the number of concurrent operations increases, new challenges are encountered. Google addressed those challenges by creating Go.</p>

<h3>Why Does a Rubyist Learn Go?</h3>

<p>The team at <a href="http://wisdomgroup.com">WisdomGroup</a> writes web and mobile apps, mainly in Ruby. So why am I learning Go?</p>

<p>Because the best developers are polyglot. When we learn a new language, we cause ourselves to see old problems in new ways and we strengthen our ability to solve new problems. It&rsquo;s like cross-training for  athletes. In the end, we become better developers.</p>

<h3>How to Install Go on Mac OS X</h3>

<ol>
<li><a href="https://code.google.com/p/go/downloads/list">Download the binary of Go that matches your system</a> <i>but don&#8217;t install it yet</i>. You will need to complete the rest of these steps before installation. For my 2010 i5-based 15-inch MacBook Pro, I chose <code>go1.1.1.darwin-amd64.pkg</code>. I was concerned about the reference to <code>amd64</code> in the name. But the description includes <code>Mac OS X (x86 64-bit)</code>, and the binary worked for me.</li>
<br/>
<li>If you are upgrading from a previous version of Go, you will need to remove the old Go directory. You can do this while the new binary is downloading in the background:</li>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rm -rf /usr/local/go
</span></code></pre></td></tr></table></div></figure>

<li>Define the <code>GOROOT</code> and <code>GOPATH</code> environmental variables. My system uses <code>~/.bash_profile</code> to define environmental variables, so I added the following lines to the end of that file:

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">GOROOT</span><span class="o">=</span>/usr/local/go
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$GOROOT</span>/bin
</span><span class='line'><span class="nb">export </span><span class="nv">GOPATH</span><span class="o">=</span>~/Code/gocode
</span></code></pre></td></tr></table></div></figure>
Note: I&#8217;m using the default <code>GOROOT</code> variable, but your <code>GOPATH</code> may differ from mine. I store all of my source code in a subdirectory of home:<code>~/Code</code>. My complete Go directory structure is given below. By looking at my structure, you can adjust these steps to fit your system.</li>
<br/>
<li>Tell your terminal session to recognize the new environmental variables. You can either restart terminal, or if your environmental variables are in <code>~/.bash_profile</code> like mine, you can do the following:</li>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bash_profile
</span></code></pre></td></tr></table></div></figure>
<li>Run the package installation program, <code>go1.1.1.darwin-amd64.pkg</code>, that was downloaded in Step 1.</li>
</ol>


<p>Now, let&rsquo;s Go for a test drive.</p>

<h3>Creating a Go Workspace</h3>

<p>Before you can run a Go program on your system, you have to create a Go workspace. A workspace is a directory structure that contains source code and binaries that a Go program needs in order to compile and execute.</p>

<p>We can examine the Go Workspace on my system with the Unix <code>tree</code> command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Code/gocode<span class="nv">$ </span>tree
</span><span class='line'>.
</span><span class='line'>└── src
</span><span class='line'>    └── github.com
</span><span class='line'>        └── rayhightower
</span><span class='line'>            └── hello
</span><span class='line'>                └── hello.go
</span><span class='line'>
</span><span class='line'>4 directories, 1 file
</span><span class='line'>
</span><span class='line'>~/Code/gocode<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here&rsquo;s a brief description of the directories:</p>

<ul>
<li>Code = root directory for all source code on my system. Yours may differ.</li>
<li>gocode = where I store all of the Go code on my system. I&rsquo;m following the structure recommended by the Go documentation. I may alter this as I learn more about the language.</li>
<li>src = source code</li>
<li>github.com = directory named after the place where I store repos</li>
<li>rayhightower = my GitHub profile name</li>
<li>hello = directory named for our first Go application</li>
<li>hello.go = the Go source file for our <code>Hello World</code> program</li>
</ul>


<p>All structure below the <code>gocode</code> directory is mandated by Go.</p>

<h3>Writing &lsquo;Hello World!&rsquo; in Go</h3>

<p>Google&rsquo;s official installation instructions include a simple &lsquo;Hello World&rsquo; program for testing the installation. A slightly modified version appears below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;\n****** Hey Parallella enthusiasts: Learn Go! ******\n&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Compiling and Running</h3>

<p>We drop the code into a file called <code>hello.go</code> in the <code>hello</code> directory. To compile the program:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Code/gocode/src/github.com/rayhightower/hello<span class="nv">$ </span>go install
</span><span class='line'>
</span><span class='line'>~/Code/gocode/src/github.com/rayhightower/hello<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>If the Go compiler responds with a blank prompt (like above) then the program compiled successfully and a <code>bin</code> directory has been created inside the Go workspace. Run the <code>tree</code> command from the <code>gocode</code> directory to see how the structure has changed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Code/gocode<span class="nv">$ </span>tree
</span><span class='line'>.
</span><span class='line'>├── bin
</span><span class='line'>│   └── hello
</span><span class='line'>└── src
</span><span class='line'>    └── github.com
</span><span class='line'>        └── rayhightower
</span><span class='line'>            └── hello
</span><span class='line'>                └── hello.go
</span><span class='line'>
</span><span class='line'>5 directories, 2 files
</span><span class='line'>
</span><span class='line'>~/Code/gocode<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>The newly created <code>bin/</code> directory contains our <code>hello</code> executable. And now, let&rsquo;s cut the suspense and <em>run the program</em>. To do so, change into the <code>bin/</code> directory and type <code>./hello</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Code/gocode/src/github.com/rayhightower/hello<span class="nv">$ </span><span class="nb">cd</span> ~/Code/gocode/bin
</span><span class='line'>
</span><span class='line'>~/Code/gocode/bin<span class="nv">$ </span>./hello
</span><span class='line'>
</span><span class='line'>****** Hey Parallella enthusiasts: Learn Go! ******
</span><span class='line'>
</span><span class='line'>~/Code/gocode/bin<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Success!</p>

<h3>It&rsquo;s Not Official, But It Makes Sense</h3>

<p>As of this writing, Parallella does not officially support the Go language. So why go through all of this trouble? Because&hellip;</p>

<ul>
<li>A 64-core Parallella is just too cool to pass up. And it&rsquo;s open source.</li>
<li>Go is designed for parallel systems. And it&rsquo;s open source.</li>
<li>Open source devs are working on a Go compiler for Parallella right now. If you&rsquo;re reading this, and you&rsquo;re one of the devs, thank you!</li>
</ul>


<p>The Go-Parallella match makes sense. It&rsquo;s always good to skate where the puck is going.</p>

<h3>Next Steps</h3>

<p>Now it&rsquo;s time to explore the Go language. The real adventure begins when the 64-core Parallella arrives. Looking forward to it!</p>

<h3>Acknowledgements</h3>

<p>I was inspired to explore Go by <a href="https://twitter.com/blakesmith">Blake Smith&rsquo;s</a> presentation at <a href="http://www.meetup.com/ChicagoSC/events/120658422/">8th Light</a>. <a href="http://twitter.com/wondible">Justin Love</a> introduced me to Parallella last month at ChicagoRuby.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Replacing Google Reader with Feed Wrangler]]></title>
    <link href="http://RayHightower.com/blog/2013/06/21/replacing-google-reader-with-feed-wrangler/"/>
    <updated>2013-06-21T18:52:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/06/21/replacing-google-reader-with-feed-wrangler</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/feedwrangler-gil.jpg" height="600" width="450" align="right" alt="Google Reader Replacement: Feed Wrangler - iPad" title="Google Reader Replacement: Feed Wrangler - iPad">
Google Reader, the RSS product, shuts down on July 1st. I consume most news via RSS, and the ability to sync multiple RSS clients between iPhone, iPad, and desktop with Google Reader in the background saved time while keeping me informed. Finding a replacement is critical.</p>

<p>Fortunately, strong alternatives are emerging. <a href="http://feedwrangler.net">Feed Wrangler</a> is a Google Reader replacement by independent developer <a href="http://david-smith.org">David Smith</a>. Here are my first impressions.</p>

<!--more-->


<h3>Pros</h3>

<p>After using the service for a few hours, I can already see some things that I like. Specifically:</p>

<ul>
<li>Minimal fluff. Other RSS clients feature big photos and page-flipping special effects. That&rsquo;s not for me. Just the facts, RSS.</li>
<li>Easy RSS import from Google Reader. Just log in with your Google account and follow the prompts. After you import your feeds into Feed Wrangler&rsquo;s web app, you will never need Google Reader again.</li>
<li>Reasonable cost. The Feed Wrangler service costs $19/year. Google dropped Reader because they couldn&rsquo;t make money from the free product. You can&rsquo;t fix that with volume! When an app makes money (directly or indirectly) then the app is more likely to stick around.</li>
<li>iPhone and iPad apps. Feed Wrangler&rsquo;s native apps for <a href="https://itunes.apple.com/us/app/feed-wrangler/id634486174?mt=8">iPhone and iPad</a> sync with the web app. This is important for me because I consume most RSS on-the-go. A screenshot from the iPad app appears above.</li>
</ul>


<h3>Cons</h3>

<p>Like most users, I want the developer to add &ldquo;just one or two more features&rdquo; to make the app perfect for me. Of course that&rsquo;s the slippery slope to bloatware since every user has a different set of one-or-two features.</p>

<p>The developer can avoid bloatware by ignoring all other users and focusing on <em>my</em> feature requests:</p>

<ul>
<li>Evernote integration. My current RSS client lets me drop an article into Evernote with a few taps on the screen. Sometimes I want to re-read an article or think about it more deeply at a later time. Evernote lets me do this.</li>
<li>Organized imports. While Feed Wrangler imports feeds from Google Reader, it does not maintain Reader&rsquo;s organization. So I had to organize my feeds manually with Feed Wrangler&rsquo;s &ldquo;Smart Stream&rdquo; feature. If Reader&rsquo;s folders could be imported as Feed Wrangler&rsquo;s Smart Streams, that would be cool.</li>
<li>Feed counter. Sometimes I prioritize my reading by the number of unread articles. A counter next to each feed would be helpful.</li>
</ul>


<h3>Summary</h3>

<p>I plan to try other RSS readers before Google Reader shuts down on July 1st. Feed Wrangler is making a good impression so far.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Practice Begins With Play]]></title>
    <link href="http://RayHightower.com/blog/2013/06/13/practice-begins-with-play/"/>
    <updated>2013-06-13T10:09:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/06/13/practice-begins-with-play</id>
    <content type="html"><![CDATA[<p>This afternoon I was invited to speak at the June <a href="http://www.tablexi.com/blog/2013/06/developer-education-june-table-talks/developers/">Table Talks</a> hosted by Table XI. Today&rsquo;s theme was developer education. My topic: <em>Practice Begins With Play</em>. Developers who want to achieve mastery have many practice resources to choose from, including open source hardware like <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">Raspbery Pi</a>, <a href="http://RayHightower.com/blog/2013/05/22/beaglebone-black-up-and-running/">BeagleBone Black</a>, and <a href="http://parallella.org">Parallella</a>.</p>

<!--more-->


<h4>PechaKucha</h4>

<p>Presentations were given in the <a href="http://www.pechakucha.org/faq">PechaKucha</a> format, which encourages presenters to deliver the maximimum amount of useful information in a relatively short time. Each presenter is only allowed twenty slides, with twenty seconds per slide. Truly high impact!</p>

<h4>Slides and Video</h4>

<p>Slides from the talk appear below. Video will be posted here as soon as it becomes available. <em>Update: Video has been <a href="http://RayHightower.com/blog/2013/06/27/pechakucha-developer-education-at-tablexi/">posted</a>.</em></p>

<center><script async class="speakerdeck-embed" data-id="391a4b80b66a013009c8226af5af9159" data-ratio="1.29456384323641" src="http://RayHightower.com//speakerdeck.com/assets/embed.js"></script></center>


<p>Thank you Table XI for the invitation!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kali Linux for Pentesting]]></title>
    <link href="http://RayHightower.com/blog/2013/05/31/kali-linux-pentesting/"/>
    <updated>2013-05-31T00:15:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/05/31/kali-linux-pentesting</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/kali-linux-desktop.png" width="400" height="303" title="Kali Linux - The quieter you become, the more you are able to hear." alt="Kali Linux - The quieter you become, the more you are able to hear." align="right">
<a href="http://getbraintree.com">Braintree</a> hosted a <a href="http://www.meetup.com/braintreepayments/events/119511632/">Hax &lsquo;n Snax</a> event this afternoon. Devs from around Chicago gathered together to hack on code, socialize, trade ideas, and hone skills. Thanks Braintree for putting on a great event.</p>

<p>My Hax &lsquo;n Snax time was spent interacting with other devs and experimenting with a Linux distro that I just discovered, Kali Linux.</p>

<h3>What is Kali Linux?</h3>

<p><a href="http://www.kali.org/">Kali</a> is a fairly new Linux distro designed for digital forensics and penetration testing. If you&rsquo;re looking for a general purpose Linux distro, <a href="http://ubuntu.com">Ubuntu</a> would be a better choice. Kali is the successor of BackTrack. The developers of Kali and BackTrack, <a href="http://www.offensive-security.com/">Offensive Software</a>, state that &ldquo;Kali is a more mature, secure, and enterprise-ready version of BackTrack Linux.&rdquo; You can download it at <a href="http://kali.org">Kali.org</a>.</p>

<!--more-->


<h3>Parallels Installation Gotcha</h3>

<p>I&rsquo;m running Kali Linux inside of Parallels version 7 on Mac OS X 10.8.3 (Mountain Lion). The Linux installation proceeded normally, but when I rebooted the virtual machine, Linux wouldn&rsquo;t come up. Instead, I got the perpetual display of timeouts shown below.</p>

<center><img src="http://RayHightower.com/images/time-out.png" width="754" height="645" title="Kali Linux time out" alt="Kali Linux time out" align="center"></center>


<p>Google led me to a solution on a blog called <a href="http://redrise.wordpress.com/2013/04/02/installing-kali-in-parallels-desktop-7/">redrise</a>. The solution: To make Kali run on Parallels, uncheck the check box labeled &ldquo;Show battery in Linux&rdquo;, as shown below.</p>

<center><img src="http://RayHightower.com/images/show-battery-in-linux.png" width="798" height="653" title="Kali - Show battery in Linux" alt="Kali - Show battery in Linux" align="center"></center>


<p>I&rsquo;m not sure why a battery indicator would prevent Kali from booting in Parallels, but the solution worked. When I installed Kali on VMWare, the OS ran without special configuration changes.</p>

<h3>The Kali Linux Tools</h3>

<p>Kali comes with over 300 penetration tools. It&rsquo;s open source, so if you see room for improvement, <a href="http://git.kali.org/gitweb/">fork the repo</a> and go to work. If your ideas are strong enough, the developers might accept your pull request. There&rsquo;s even a version of Kali for <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">Raspberry Pi</a>. Take a look at the GUI.</p>

<center><img src="http://RayHightower.com/images/kali-linux-security-tools.png" width="798" height="653" title="Kali Linux Security Tools" alt="Kali Linux Security Tools" align="center"></center>


<h3>Using Wireshark on Kali Linux</h3>

<p>Kali includes sniffer tools that can capture WiFi traffic. If the WiFi traffic is &ldquo;protected&rdquo; (note the quotes) with an older method like wireless encryption protocol (WEP), Kali&rsquo;s tools can crack the encryption.</p>

<center><img src="http://RayHightower.com/images/wireshark-kali-linux.png" width="600" height="492" title="Kali Linux Wireshark" alt="Kali Linux Wireshark" align="center"></center>


<p>A screenshot from Wireshark appears above. Wireshark sits and observes network traffic. If a packet looks interesting, drill down to discover the packet&rsquo;s source, destination, and contents.</p>

<h3>Summary</h3>

<p>Kali enables developers and network professionals to protect themselves and their clients from attacks. Kali is powerful, and with great power comes great responsibility.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BeagleBone Black, Up & Running]]></title>
    <link href="http://RayHightower.com/blog/2013/05/22/beaglebone-black-running-ruby-on-rails/"/>
    <updated>2013-05-22T22:13:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/05/22/beaglebone-black-running-ruby-on-rails</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/BeagleBoneBlack.jpg" width="372" height="600" title="BeagleBone Black" alt="BeagleBone Black" align="right">
<a href="http://beagleboard.org/Products/BeagleBone%20Black">BeagleBone Black</a>, like the <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">Raspberry Pi</a>, is a small, inexpensive computer that runs Linux. It&rsquo;s smaller than a deck of cards and you can buy one for about forty-five dollars ($45.00). The device is made by <a href="http://circuitco.com">CircuitCo</a> in Richardson, TX, USA.</p>

<h3>It Just Works</h3>

<p>BeagleBone Black runs Linux right out of the box. Steps required:</p>

<ul>
<li>Plug in the micro-HDMI cable for the monitor. See the &ldquo;Gotchas&rdquo;
section about micro-HDMI below.</li>
<li>Plug in the keyboard &amp; mouse via the USB port. You might need a USB hub because the board only has one USB port.</li>
<li>Add power via the mini-USB port or the 5v power connection.</li>
</ul>


<p>After a few minutes of boot time, we have a fully-functioning Linux computer with a GUI, Firefox browser, and other tools.</p>

<!--more-->


<p>The BeagleBone Black has 2GB of flash storage on the board, and part
of that is used for Linux. Here&rsquo;s a screenshot after just a few minutes of ownership.</p>

<center><img src="http://RayHightower.com/images/BeagleBoneBlack-WindyCityRails.png" width="600" height="338" title="BeagleBone Black Firefox WindyCityRails" alt="BeagleBone Black Firefox WindyCityRails" align="center"></center>


<h3>Documentation</h3>

<p><img src="http://RayHightower.com/images/BeagleBoneBlack-USB.png" width="250" height="200" title="BeagleBone Black USB" alt="BeagleBone Black USB" align="right">
All of the paper documentation for the BeagleBone Black fits on a slip of paper roughly the size of two business cards. The meat of the documentation resides on the device itself. To reach the electronic documentation:</p>

<ol>
<li>Plug the BeagleBone Black into a USB port on your laptop.</li>
<li>The board will appear as a USB storage device. One of the files at the
root of the storage device, <code>START.htm</code>, contains the documentation. It
can be viewed in a web browser.</li>
</ol>


<p>The documentation recommends against <a href="http://en.wikipedia.org/wiki/Internet_Explorer">MSIE</a>.</p>

<h3>Gotchas</h3>

<p><img src="http://RayHightower.com/images/micro-HDMI-home-depot.jpg" width="400" height="300" title="Micro HDMI Home Depot" alt="Micro HDMI Home Depot" align="right">
The manufacturer included a mini-USB cable with the device, so you can power it up right after you rip open the package. Gotcha: You need a micro-HDMI cable (or adapter) if you want to attach a monitor. I would have preferred a micro-HDMI-to-HDMI adapater in the box instead of the mini-USB cable. That&rsquo;s a little nit-picky on my part since micro-HDMI cables are easy to find at Home Depot.</p>

<p>A quick shout-out to Home Depot: Their store-brand cables let you test the cable end without opening the package, right in the store. Excellent package design by Home Depot.</p>

<p>My second &ldquo;gotcha&rdquo; is more important: The <code>curl</code> command did not behave as flawlessly as it did with the Raspberry Pi, so I was not able to install Ruby as quickly as planned. Details below.</p>

<h3>Installing Rails</h3>

<p>I will have to cover Ruby and Rails installation in a future blog post because my initial attempts were not successful. <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">RVM, Ruby, and Rails installed easily with Raspberry Pi</a>, even though the compilation time was long. With the BeagleBone Black, I received the following in response to the <code>curl</code> command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sh-4.2# curl -L https://get.rvm.io | bash -s stable --ruby
</span><span class='line'>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
</span><span class='line'>                                 Dload  Upload   Total   Spent    Left  Speed
</span><span class='line'>  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
</span><span class='line'>curl: <span class="o">(</span>77<span class="o">)</span> Problem with the SSL CA cert <span class="o">(</span>path? access rights?<span class="o">)</span>
</span><span class='line'>sh-4.2#
</span></code></pre></td></tr></table></div></figure>


<p>Maybe it&rsquo;s time to try <a href="https://github.com/sstephenson/rbenv">RBEnv</a>? I&rsquo;ll post a solution when I find it. Or&hellip; if a reader of this blog already has a solution for the BeagleBone Black Rails installation challenge, please post in the comments below and I&rsquo;ll credit you here.</p>

<h4>BeagleBone Black vs. Raspberry Pi</h4>

<p>Which is better, BeagleBone Black or Raspberry Pi? There&rsquo;s no clear winner in my opinion. It&rsquo;s a matter of trade-offs:</p>

<ul>
<li>The &lsquo;Bone runs Linux right out of the box, while it takes some time to get Linux running on the Pi, unless you buy a card pre-configured for the Pi.</li>
<li>RVM, Ruby, and Rails installation was painless on the Pi even though compilation time was long. The jury is still out w/r/t RVM on the &lsquo;Bone.</li>
<li>Cost-wise, they&rsquo;re within ten bucks of each other. That&rsquo;s a wash.</li>
<li>The &lsquo;Bone has more Ardunio-like provisions for digital projects.</li>
<li>The Pi includes an RCA output for older TVs. Plus the Pi uses standard HDMI, so there&rsquo;s no need to get a special micro-HDMI cable.</li>
</ul>


<p>I&rsquo;ve owned my &lsquo;Bone for just over 24 hours. Lots more to learn. Looking forward to it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upgrading Ruby With RVM]]></title>
    <link href="http://RayHightower.com/blog/2013/05/16/upgrading-ruby-with-rvm/"/>
    <updated>2013-05-16T13:36:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/05/16/upgrading-ruby-with-rvm</id>
    <content type="html"><![CDATA[<p><a href="http://rvm.io">Ruby Version Manager (RVM)</a> is one of my favorite tools in the Ruby ecosystem.  Reason: RVM lets me experiment with Ruby and Rails at will. I don&rsquo;t know about you, but my best experiments are full of risk so they eventually blow things up. When that happens, I can always recover the broken areas without wasting time on a full system restore.</p>

<p>Some devs choose to use another tool, <a href="https://github.com/sstephenson/rbenv">RBenv</a>, that serves a purpose similar to RVM. I began working with RVM before the other tools existed, and since it has always worked well for me, I have no reason to switch.</p>

<h4>Ruby 2.0.0-p195</h4>

<p>The latest patch of Ruby 2.0.0, p195, was released two days ago. Time to take it for a spin. RVM lets devs upgrade Ruby and manage gemsets seamlessly. Here&rsquo;s how the process went.</p>

<!--more-->


<h4>Get the Latest RVM</h4>

<p>Instructions for installing RVM are at <a href="http://rvm.io">http://rvm.io</a>.
If you already have RVM installed, you should confirm that you have the
latest version.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm get head
</span></code></pre></td></tr></table></div></figure>


<h4>Grab the Ruby Patch</h4>

<p>With the latest RVM installed, you can upgrade to the latest Ruby
patch level.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rvm upgrade 2.0.0
</span><span class='line'>Are you sure you wish to upgrade from ruby-2.0.0-p0 to ruby-2.0.0-p195? <span class="o">(</span>Y/n<span class="o">)</span>: y
</span><span class='line'>Installing new ruby ruby-2.0.0-p195
</span><span class='line'>Searching <span class="k">for </span>binary rubies, this might take some time.
</span></code></pre></td></tr></table></div></figure>


<p>The process took at least twenty minutes on my system. I don&rsquo;t have an exact time because I began working on other tasks during the upgrade, and when I looked back at the terminal window, the process was mostly complete, except for a few questions about gemsets&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Migrating gems from ruby-2.0.0-p0 to ruby-2.0.0-p195
</span><span class='line'>Are you sure you wish to MOVE gems from ruby-2.0.0-p0 to ruby-2.0.0-p195?
</span><span class='line'>This will overwrite existing gems in ruby-2.0.0-p195 and remove them from ruby-2.0.0-p0 <span class="o">(</span>Y/n<span class="o">)</span>: y
</span><span class='line'>Moving gemsets...
</span></code></pre></td></tr></table></div></figure>


<p>&hellip;and aliases, wrappers, and archiving my patchless Ruby 2.0.0.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Do you wish to move over aliases? <span class="o">(</span>Y/n<span class="o">)</span>: y
</span><span class='line'>Do you wish to move over wrappers? <span class="o">(</span>Y/n<span class="o">)</span>: y
</span><span class='line'>Do you also wish to completely remove ruby-2.0.0-p0 <span class="o">(</span>inc. archive<span class="o">)</span>? <span class="o">(</span>Y/n<span class="o">)</span>: y
</span><span class='line'>Removing ruby-2.0.0-p0........
</span><span class='line'>Successfully migrated ruby-2.0.0-p0 to ruby-2.0.0-p195
</span><span class='line'>Upgrade <span class="nb">complete</span>!
</span><span class='line'>
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Upgrade complete. Now running the latest patch of Ruby 2.0.0-p195</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>rvm list
</span><span class='line'>
</span><span class='line'>rvm rubies
</span><span class='line'>
</span><span class='line'>   macruby-0.12 <span class="o">[</span> i686 <span class="o">]</span>
</span><span class='line'>   ruby-1.8.7-p334 <span class="o">[</span> i686 <span class="o">]</span>
</span><span class='line'>   ruby-1.9.2-p290 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'> * ruby-1.9.3-p385 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>   ruby-2.0.0-p195 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># =&gt; - current</span>
</span><span class='line'><span class="c"># =* - current &amp;&amp; default</span>
</span><span class='line'><span class="c">#  * - default</span>
</span></code></pre></td></tr></table></div></figure>


<p>As a final option, I chose to make this latest Ruby patch my default.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~<span class="nv">$ </span>rvm use ruby-2.0.0 --default
</span><span class='line'>Using /Users/rth/.rvm/gems/ruby-2.0.0-p195
</span><span class='line'>
</span><span class='line'>~<span class="nv">$ </span>rvm list
</span><span class='line'>
</span><span class='line'>rvm rubies
</span><span class='line'>
</span><span class='line'>   macruby-0.12 <span class="o">[</span> i686 <span class="o">]</span>
</span><span class='line'>   ruby-1.8.7-p334 <span class="o">[</span> i686 <span class="o">]</span>
</span><span class='line'>   ruby-1.9.2-p290 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>   ruby-1.9.3-p385 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'><span class="o">=</span>* ruby-2.0.0-p195 <span class="o">[</span> x86_64 <span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c"># =&gt; - current</span>
</span><span class='line'><span class="c"># =* - current &amp;&amp; default</span>
</span><span class='line'><span class="c">#  * - default</span>
</span><span class='line'>
</span><span class='line'>~<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>And that&rsquo;s it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion Sketchnotes]]></title>
    <link href="http://RayHightower.com/blog/2013/05/13/rubymotion-sketchnotes/"/>
    <updated>2013-05-13T17:48:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/05/13/rubymotion-sketchnotes</id>
    <content type="html"><![CDATA[<p><a href="http://RayHightower.com/images/rubymotion-sketchnotes.jpg"><img src="http://RayHightower.com/images/rubymotion-sketchnotes-sm.jpg" width="300" height="157" alt="RubyMotion Sketchnotes" title="RubyMotion Sketchnotes" align="right"></a>
Alexis Finch (<a href="https://twitter.com/agentFin">@agentfin</a>) captured Sketchnotes for a <a href="http://rayhightower.com/blog/2012/10/29/building-ios-apps-with-ruby-motion/">RubyMotion</a> presentation that I gave for <a href="http://meetup.com/geekfest">Groupon&rsquo;s Geekfest</a>.</p>

<p>Sketchnotes are typography and drawing and notes all mixed together.</p>

<!--more-->


<p>Alexis is remarkable. It&rsquo;s challenging enough to capture text notes during a presentation. But Alexis managed to turn the talk into meaningful graphics in real time. Something amazing is happening between the ears of Alexis!</p>

<p>Mike Rohde (<a href="http://twitter.com/rohdesign">@rohdesign</a>) developed Sketchnotes when he became frustrated with note-taking. Mike is the go-to guy for anything related to Sketchnotes. He has published videos and a book <a href="http://rohdesign.com/sketchnotes/">describing the process</a>.</p>

<p>Thank you Alexis and Mike for sharing your artistic insights, and thank you Groupon for having me at Geekfest.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Man Who Sold Hot Dogs]]></title>
    <link href="http://RayHightower.com/blog/2013/04/23/the-man-who-sold-hot-dogs/"/>
    <updated>2013-04-23T18:13:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/04/23/the-man-who-sold-hot-dogs</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/hot-dog-cart.jpg" width="250" height="277" align="right" title="The Man Who Sold Hot Dogs" alt="The Man Who Sold Hot Dogs">
<em>Note: This timeless story pre-dates the web, and it has appeared at <a href="http://wisdomgroup.com">WisdomGroup.com</a>. Author unknown.</em></p>

<p>There was a man who lived by the side of the road and sold hot dogs. He was hard of hearing, so he had no radio. He had trouble with his eyes, so he read no newspaper. But he sold good hot dogs. He put signs up on the highway telling how good they were. He stood on the side of the road and cried &ldquo;Buy a hot dog, mister?&rdquo; And people bought. He increased his meat and bun orders. He bought a bigger stove to take care of his trade.</p>

<p>One day, his son came home from college to help him out. <!--more--> The son said, &ldquo;Father, haven’t you been listening to the radio? Haven’t you been reading the newspaper? There’s a big recession. The European situation is terrible. The domestic situation is worse.&rdquo;</p>

<p>Whereupon the father thought, &ldquo;Well, my son has been to college. He reads the papers and listens to the radio. He ought to know.&rdquo;</p>

<p>So the father cut down on his meat and bun orders, took down his advertising signs, and no longer bothered to stand out on the highway to sell his hot dogs.</p>

<p>Hot dog sales fell almost overnight.</p>

<p>&ldquo;You’re right, son,&rdquo; the father said. &ldquo;We are certainly in the middle of a great recession.&rdquo;</p>

<h4>Epilogue</h4>

<p>Whether times are good or bad, all of us must ask ourselves: What role is played by self-fulfilling prophesy?</p>

<p>Luck is what happens when preparation meets opportunity.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ack 2.0: Written in Perl, Useful With Ruby]]></title>
    <link href="http://RayHightower.com/blog/2013/04/20/ack-written-in-perl-useful-with-ruby/"/>
    <updated>2013-04-20T17:12:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/04/20/ack-written-in-perl-useful-with-ruby</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/ack.png" align="right" height="237" width="230" alt="Ack Linux Mac OS X" title="Ack Linux Mac OS X"></p>

<p><a href="http://beyondgrep.com/">Ack</a> is an open source command line tool that lets developers search large trees of source code very quickly. If you are looking for a method definition in a haystack of files, Ack will find that needle for you. Many devs regard Ack as a replacement for <a href="http://en.wikipedia.org/wiki/Grep">grep</a>.</p>

<p>The Elmhurst <a href="http://chicagoruby.org">ChicagoRuby</a> meetings are always a source of unexpected learning. Today ChicagoRuby welcomed <a href="http://twitter.com/petdance">Andy Lester</a>, creator of Ack. Andy released Ack 2.0 two days ago. He shared some of the latest features in an impromptu demo.</p>

<!--more-->


<h4>Why Ack?</h4>

<p>Have you ever been working on a project, only to be interrupted when you need to look for something? It could be a method name, a variable declaration, or a string of text in a comment. A minor distraction costs you the time it takes to search plus the time required to re-focus.</p>

<p>All of us are more productive when we stay <em>in the zone</em>. Ack helps devs to maintain focus and thereby produce better results.</p>

<h4>First, Install Perl</h4>

<p>Ack requires the <a href="http://en.wikipedia.org/wiki/Perl">Perl</a> programming language. Perl comes pre-installed on Mac OS X and most Linux distros. If you&rsquo;re running on a &lsquo;nix platform, you probably have Perl already.</p>

<p>Windows installations are beyond the scope of this article. If you&rsquo;re running Windows, you might consider a Linux VM for Ruby and Rails-related work.</p>

<h4>Installing Ack on Mac OS X</h4>

<p>Installing Ack is so easy that it almost feels wrong: Grab Ack in a single Perl file and drop it in your <code>~/bin/</code> directory. That&rsquo;s it.</p>

<p>Ack can also be installed via <a href="http://mxcl.github.io/homebrew/">Homebrew</a>, but I prefer the <em>drop it in ~/bin</em> installation since everything is contained in one file. Here&rsquo;s a more detailed version of the steps:</p>

<ol>
<li>If you don&rsquo;t have one already, create <code>~/bin/</code> as a subdirectory of your home directory.</li>
<li>Grab a the single-file copy of Ack from <a href="http://beyondgrep.com/">http://beyondgrep.com/ </a></li>
<li>Drop the single-file copy of Ack into a file called <code>~/bin/ack</code></li>
<li>Make sure that <code>$HOME/bin:</code> appears at the beginning of your <code>$PATH</code> environment variable.</li>
</ol>


<p>At this point you should be running Ack v2.0 or later. To verify:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/bin<span class="nv">$ </span>ack --version
</span><span class='line'>ack 2.02 <span class="o">(</span>git commit f3c8827<span class="o">)</span>
</span><span class='line'>Running under Perl 5.12.4 at /usr/bin/perl
</span><span class='line'>
</span><span class='line'>Copyright 2005-2013 Andy Lester.
</span><span class='line'>
</span><span class='line'>This program is free software.  You may modify or distribute it
</span><span class='line'>under the terms of the Artistic License v2.0.
</span><span class='line'>
</span><span class='line'>~/bin<span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Installation complete. Now, let&rsquo;s take Ack for a spin.</p>

<h4>Using Ack at the Command Line</h4>

<p>For a sample project, let&rsquo;s use <code>demo_app</code> from Michael Hartl&rsquo;s <a href="http://rubyonrailstutorial.com">Ruby on
Rails Tutorial</a>. Imagine that you want
to find every file in the project that references <code>user_id</code>. How would
you do that?
<img src="http://RayHightower.com/images/ack_user_id.png" align="center" height="650" width="887" alt="Ack command line demo" title="Ack command line demo"></p>

<p>Fast, clear, and highlighted in color. Bonus: If you&rsquo;re a Vim user,
try <a href="https://github.com/mileszs/ack.vim">ack.vim</a> if you want to run Ack
without leaving your editor.</p>

<h4>The Bottom Line</h4>

<p>Ack helps devs to find things quicker without leaving the zone. Try it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New RVM Behavior With .ruby-version and .ruby-gemset]]></title>
    <link href="http://RayHightower.com/blog/2013/04/18/new-rvm-behavior-ruby-version-ruby-gemset/"/>
    <updated>2013-04-18T20:33:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/04/18/new-rvm-behavior-ruby-version-ruby-gemset</id>
    <content type="html"><![CDATA[<p><a href="http://RayHightower.com/blog/2013/04/18/new-rvm-behavior-ruby-version-ruby-gemset/"><img src="http://RayHightower.com/images/rvm.png" height="98" width="89" align="right" alt="RVM .ruby-version .ruby-gemset" title="RVM .ruby-version .ruby-gemset"></a>
I trust <a href="http://rvm.io">RVM</a> to manage my Ruby versions and my gemsets. So when I saw an unexpected change in RVM&rsquo;s behavior, I was concerned about a possible disruption in my workflow.</p>

<!--more-->


<h4>A New RVM Message</h4>

<p>Here&rsquo;s the message I received when I changed into <code>mydirectory/</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Code/Ruby/apps/<span class="nv">$ </span><span class="nb">cd </span>mydirectory/
</span><span class='line'>You are using <span class="s1">&#39;.rvmrc&#39;</span>, it requires trusting, it is slower and it is not
</span><span class='line'>compatible with other ruby managers, you can switch to <span class="s1">&#39;.ruby-version&#39;</span>
</span><span class='line'>using <span class="s1">&#39;rvm rvmrc to [.]ruby-version&#39;</span> or ignore this warnings with
</span><span class='line'><span class="s1">&#39;rvm rvmrc warning ignore ~/Code/Ruby/apps/mydirectory/.rvmrc&#39;</span>,
</span><span class='line'><span class="s1">&#39;.rvmrc&#39;</span> will <span class="k">continue </span>to be the default project file in RVM 1 and RVM 2,
</span><span class='line'>to ignore the warning <span class="k">for </span>all files run
</span><span class='line'><span class="s1">&#39;rvm rvmrc warning ignore all .rvmrcs&#39;</span>.
</span><span class='line'>
</span><span class='line'>~/Code/Ruby/apps/mydirectory<span class="o">[</span>master<span class="o">]</span><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Decision: Do the Update</h4>

<p>Ignoring a warning feels like sticking my head in the sand. It&rsquo;s better to face things head-on. So I decided to go with the update. If things don&rsquo;t work out, I can always remove RVM completely and start from scratch.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/Code/Ruby/apps/mydirectory<span class="o">[</span>master<span class="o">]</span><span class="nv">$ </span>rvm rvmrc to .ruby-version
</span></code></pre></td></tr></table></div></figure>


<p>My shell responded by repeating the <code>.rvmrc</code> vs <code>.ruby-version</code> notice. But when I examine the directory, everything looks good.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>total 56
</span><span class='line'>drwx---rwx   53 rth  wheel   1802 Apr 19 07:18 .
</span><span class='line'>drwx---rwx   27 rth  wheel    918 Feb 10 08:26 ..
</span><span class='line'>-rw-r--r--    1 rth  wheel    175 Feb  4 13:41 .gitignore
</span><span class='line'>-rw-r--r--@   1 rth  wheel      0 Oct 15  2012 .repl_history
</span><span class='line'>-rw-r--r--    1 rth  wheel     11 Apr 19 07:18 .ruby-gemset
</span><span class='line'>-rw-r--r--    1 rth  wheel     16 Apr 19 07:18 .ruby-version
</span><span class='line'>drwxr-xr-x   10 rth  wheel    340 Feb 14 20:41 AFNetworking-RubyMotion-Example
</span><span class='line'>drwxr-xr-x   13 rth  wheel    442 Feb 24 17:29 AccordionUIView
</span></code></pre></td></tr></table></div></figure>


<p>Instead of a single <code>.rvmrc</code> file, Ruby versions are managed by
<code>.ruby-version</code> while gemsets are managed through <code>.ruby-gemset</code>.</p>

<h4>Bash Alias</h4>

<p>Next, it&rsquo;s time to clean things up by adding an <code>alias</code> to
<code>~/.bash_profile</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">newrvm</span><span class="o">=</span><span class="s2">&quot;rvm rvmrc to .ruby-version&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Tell the terminal session to use the new <code>~/.bash_profile</code> with</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bash_profile
</span></code></pre></td></tr></table></div></figure>


<p>And now we can begin using <code>.ruby-version</code> and <code>.ruby-gemset</code> in any .rvmrc-equipped directory with a simple one-word command.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>newrvm
</span></code></pre></td></tr></table></div></figure>


<h4>Feedback Welcome</h4>

<p>If you notice any snags (including typos) in the above procedure, please reach out via the comments below or through <a href="http://twitter.com/rayhightower">Twitter</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Elegant Code]]></title>
    <link href="http://RayHightower.com/blog/2013/04/12/elegant-code/"/>
    <updated>2013-04-12T13:34:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/04/12/elegant-code</id>
    <content type="html"><![CDATA[<p>This quote is too long to tweet, but too good to pass up:</p>

<blockquote><p>Ugly programs are like ugly suspension bridges: they&rsquo;re much more liable to collapse than pretty ones, because the way humans (especially engineer-humans) perceive beauty is intimately related to our ability to process and understand complexity. A language that makes it hard to write elegant code makes it hard to write good code.</p>

<p>~Eric S. Raymond, Author of The Cathedral and the Bazaar</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Challenges Make Us Stronger]]></title>
    <link href="http://RayHightower.com/blog/2013/03/25/challenges-make-us-stronger/"/>
    <updated>2013-03-25T09:37:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/03/25/challenges-make-us-stronger</id>
    <content type="html"><![CDATA[<p><img src="http://RayHightower.com/images/moth.png" width="300" height="215" align="right" title="Emperor moth photo by Dean Morley" alt="Emperor moth photo by Dean Morley">
A man found a cocoon of an emperor moth. He took it home so that he could watch the moth come out of the cocoon. On the day a small opening appeared, he sat and watched the moth for several hours as the moth struggled to force its body through that little hole.</p>

<p>Then it seemed to stop making any progress. It appeared as if it had gotten as far as it could and it could go no farther. It just seemed to be stuck.</p>

<!--more-->


<h4>Kindness</h4>

<p>Then the man, in his kindness, decided to help the moth, so he took a pair of scissors and snipped off the remaining bit of the cocoon. The moth then emerged easily. But it had a swollen body and small, shriveled wings. The man continued to watch the moth because he expected that, at any moment, the wings would enlarge and expand to be able to support the body, which would contract in time. Neither happened! In fact, the little moth spent the rest of its life crawling around with a swollen body and shriveled body and shriveled wings. It never was able to fly.</p>

<h4>Helping vs. Understanding</h4>

<p>What the man in his kindness and haste did not understand was that the restricting cocoon and the struggle required for the moth to get through the tiny opening was the way of forcing fluid from the body of the moth into its wings so that it would be ready for flight once it achieved its freedom from the cocoon. Freedom and flight would only come after the struggle. By depriving the moth of a struggle, he deprived the moth of health.</p>

<h4>Obstacles and Growth</h4>

<p>Sometimes struggles are exactly what we need in our life. If we were to go through our life without any obstacles, we would be crippled. We would not be as strong as what we could have been. Give every opportunity a chance, and leave no room for regrets.</p>

<p><em>The author of this article is unknown. Emperor moth photo by <a href="http://www.flickr.com/photos/33465428@N02/7015602897/">Dean Morley</a></em>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Take a Raspberry Pi Screenshot]]></title>
    <link href="http://RayHightower.com/blog/2013/03/19/how-to-take-a-raspberry-pi-screenshot/"/>
    <updated>2013-03-19T20:43:00-05:00</updated>
    <id>http://RayHightower.com/blog/2013/03/19/how-to-take-a-raspberry-pi-screenshot</id>
    <content type="html"><![CDATA[<p>After you get a <a href="http://RayHightower.com/blog/2012/12/03/ruby-on-raspberry-pi/">Raspberry Pi</a> up and running, you may want to take a few screenshots so you can share the experience with others. Here&rsquo;s how.</p>

<!--more-->


<h4>Install Scrot</h4>

<p>First, install the screenshot utility, <code>scrot</code>. Open up the LXTerminal
and type the following at the prompt:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get install scrot
</span></code></pre></td></tr></table></div></figure>


<h4>Use Scrot</h4>

<p>To take a screenshot of the whole screen:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo scrot
</span></code></pre></td></tr></table></div></figure>


<p>By default, the screenshot will be stored in the current directory in a file named for the numerical date and time with a <code>.png</code> extension.</p>

<p>To take a screenshot after a 10-second delay:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo scrot -d10
</span></code></pre></td></tr></table></div></figure>


<h4>Learn More About Scrot</h4>

<p>To display a list of Scrot commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo scrot -h
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it!</p>
]]></content>
  </entry>
  
</feed>
